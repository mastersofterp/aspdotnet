using System;
using System.Data;
using System.Web;

using IITMS;
using IITMS.UAIMS;
using IITMS.UAIMS.BusinessLayer;
using IITMS.UAIMS.BusinessLayer.BusinessEntities;
using IITMS.SQLServer.SQLDAL;

using System.Data.SqlClient;


namespace IITMS
{
    namespace UAIMS
    {
        namespace BusinessLayer.BusinessLogic
        {
            /// <summary>
            /// This StudentController is used to control Student detail.
            /// </summary>
            /// 
            public class StudentController : IDisposable
            {
                /// <summary>
                /// ConnectionString
                /// </summary>
                string _UAIMS_constr = System.Configuration.ConfigurationManager.ConnectionStrings["UAIMS"].ConnectionString;

                ////public string UpdateStudent(Student objStudent, StudentAddress objStudAddress, StudentPhoto objStudPhoto, StudentQualExm objStudQExm, string MotherMobile, string MotherOfficeNo, string IndusEmail)
                ////{
                ////    int retStatus = Convert.ToInt32(CustomStatus.Others);
                ////    //int retStatus = Convert.ToInt32(CustomStatus.Others);
                ////    try
                ////    {
                ////        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                ////        SqlParameter[] objParams = null;

                ////        //Update Student
                ////        objParams = new SqlParameter[183];
                ////        //First Add Student Parameter
                ////        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                ////        objParams[1] = new SqlParameter("@P_REGNO", objStudent.RegNo);
                ////        objParams[2] = new SqlParameter("@P_ROLLNO", objStudent.RollNo);
                ////        objParams[3] = new SqlParameter("@P_STUDNAME", objStudent.StudName);

                ////        objParams[4] = new SqlParameter("@P_STUDNAME_HINDI", objStudent.StudNameHindi);
                ////        objParams[5] = new SqlParameter("@P_MOTHERNAME", objStudent.MotherName);
                ////        objParams[6] = new SqlParameter("@P_FATHERNAME", objStudent.FatherName);


                ////        objParams[7] = new SqlParameter("@P_DOB", objStudent.Dob);
                ////        objParams[8] = new SqlParameter("@P_AGE", objStudent.Age);
                ////        objParams[9] = new SqlParameter("@P_BIRTH_PLACE", objStudent.BirthPlace);
                ////        objParams[10] = new SqlParameter("@P_BIRTH_VILLAGE", objStudent.Birthvillage);
                ////        objParams[11] = new SqlParameter("@P_BIRTH_TALUKA", objStudent.Birthtaluka);
                ////        objParams[12] = new SqlParameter("@P_BIRTH_DISTRICT", objStudent.Birthdistrict);
                ////        objParams[13] = new SqlParameter("@P_BIRTH_STATE", objStudent.Birthdistate);
                ////        objParams[14] = new SqlParameter("@P_OTHER_LANGUAGE", objStudent.OtherLanguage);
                ////        objParams[15] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                ////        objParams[16] = new SqlParameter("@P_SEX", objStudent.Sex);
                ////        objParams[17] = new SqlParameter("@P_MTOUNGENO", objStudent.MToungeNo);
                ////        objParams[18] = new SqlParameter("@P_MARRIED", objStudent.Married);
                ////        objParams[19] = new SqlParameter("@P_HEIGHT", objStudent.Height);
                ////        objParams[20] = new SqlParameter("@P_WEIGHT", objStudent.Weight);
                ////        objParams[21] = new SqlParameter("@P_IDENTI_MARK", objStudent.IdentyMark);
                ////        objParams[22] = new SqlParameter("@P_BLOODGRPNO", objStudent.BloodGroupNo);
                ////        objParams[23] = new SqlParameter("@P_CASTE", objStudent.Caste);
                ////        objParams[24] = new SqlParameter("@P_SUB_CASTE", objStudent.Subcaste);
                ////        objParams[25] = new SqlParameter("@P_CATEGORYNO", objStudent.CategoryNo);
                ////        objParams[26] = new SqlParameter("@P_NATIONALITYNO", objStudent.NationalityNo);
                ////        objParams[27] = new SqlParameter("@P_RELIGIONNO", objStudent.ReligionNo);
                ////        objParams[28] = new SqlParameter("@P_COUNTRYDOMICILE", objStudent.CountryDomicile);
                ////        objParams[29] = new SqlParameter("@P_HOSTELER", objStudent.Hosteler);
                ////        objParams[30] = new SqlParameter("@P_IRREGULAR", objStudent.Irregular);
                ////        objParams[31] = new SqlParameter("@P_URBAN", objStudent.Urban);
                ////        objParams[32] = new SqlParameter("@P_YEAR", objStudent.Year);
                ////        objParams[33] = new SqlParameter("@P_PRO", objStudent.Pro);
                ////        objParams[34] = new SqlParameter("@P_BATCHNO", objStudent.BatchNo);
                ////        objParams[35] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                ////        objParams[36] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                ////        objParams[37] = new SqlParameter("@P_SECTIONNO", objStudent.SectionNo);
                ////        objParams[38] = new SqlParameter("@P_SCHEMENO", objStudent.SchemeNo);
                ////        objParams[39] = new SqlParameter("@P_LASTROLLNO", objStudent.LastRollNo);
                ////        objParams[40] = new SqlParameter("@P_ROLL2", objStudent.Roll2);
                ////        objParams[41] = new SqlParameter("@P_ACC_NO", objStudent.AccNo);
                ////        objParams[42] = new SqlParameter("@P_VISANO", objStudent.Visano);
                ////        objParams[43] = new SqlParameter("@P_PASSPORTNO", objStudent.PassportNo);
                ////        objParams[44] = new SqlParameter("@P_STATENO", objStudent.StateNo);
                ////        objParams[45] = new SqlParameter("@P_IDTYPE", objStudent.IdType);
                ////        objParams[46] = new SqlParameter("@P_PTYPE", objStudent.PType);
                ////        objParams[47] = new SqlParameter("@P_ADMCAN", objStudent.AdmCancel);

                ////        if (objStudent.AdmDate == DateTime.MinValue)
                ////            objParams[48] = new SqlParameter("@P_ADMDATE", DBNull.Value);
                ////        else
                ////            objParams[48] = new SqlParameter("@P_ADMDATE", objStudent.AdmDate);

                ////        objParams[49] = new SqlParameter("@P_ADMBATCH", objStudent.AdmBatch);
                ////        objParams[50] = new SqlParameter("@P_LEAVEDATE", objStudent.LeaveDate);
                ////        objParams[51] = new SqlParameter("@P_CAN", objStudent.Can);
                ////        objParams[52] = new SqlParameter("@P_CANDATE", objStudent.CanDate);
                ////        objParams[53] = new SqlParameter("@P_REMARK", objStudent.Remark);
                ////        objParams[54] = new SqlParameter("@P_FAC_ADVISOR", objStudent.FacAdvisor);
                ////        objParams[55] = new SqlParameter("@P_PRJNAME", objStudent.Prjname);
                ////        objParams[56] = new SqlParameter("@P_FATHERMOBILE", objStudent.FatherMobile);
                ////        objParams[57] = new SqlParameter("@P_MOTHERMOBILE", MotherMobile);
                ////        objParams[58] = new SqlParameter("@P_FATHEROFFICENO", objStudent.FatherOfficeNo);
                ////        objParams[59] = new SqlParameter("@P_MOTHEROFFICENO", MotherOfficeNo);

                ////        //Student address parameter
                ////        objParams[60] = new SqlParameter("@P_LADDRESS", objStudAddress.LADDRESS);
                ////        objParams[61] = new SqlParameter("@P_LCITY", objStudAddress.LCITY);
                ////        objParams[62] = new SqlParameter("@P_LDISTRICT", objStudAddress.LDISTRICT);
                ////        objParams[63] = new SqlParameter("@P_LSTATE", objStudAddress.LSTATE);
                ////        objParams[64] = new SqlParameter("@P_LPINCODE", objStudAddress.LPINCODE);
                ////        objParams[65] = new SqlParameter("@P_LTELEPHONE", objStudAddress.LTELEPHONE);
                ////        objParams[66] = new SqlParameter("@P_LMOBILE", objStudAddress.LMOBILE);
                ////        objParams[67] = new SqlParameter("@P_LEMAIL", objStudAddress.LEMAIL);
                ////        objParams[68] = new SqlParameter("@P_PADDRESS", objStudAddress.PADDRESS);
                ////        objParams[69] = new SqlParameter("@P_PCITY", objStudAddress.PCITY);
                ////        objParams[70] = new SqlParameter("@P_PSTATE", objStudAddress.PSTATE);
                ////        objParams[71] = new SqlParameter("@P_PDISTRICT", objStudAddress.PDISTRICT);

                ////        objParams[72] = new SqlParameter("@P_PTELEPHONE", objStudAddress.PTELEPHONE);
                ////        objParams[73] = new SqlParameter("@P_PMOBILE", objStudAddress.PMOBILE);
                ////        objParams[74] = new SqlParameter("@P_PPINCODE", objStudAddress.PPINCODE);
                ////        objParams[75] = new SqlParameter("@P_PEMAIL", objStudAddress.PEMAIL);
                ////        objParams[76] = new SqlParameter("@P_FATHER_DESIG", objStudAddress.FATHER_DESIG);
                ////        objParams[77] = new SqlParameter("@P_OCCUPATIONNO", objStudAddress.OCCUPATION);

                ////        objParams[78] = new SqlParameter("@P_FATHERJOBDETAIL", objStudAddress.FATHERJOBDETAIL);
                ////        objParams[79] = new SqlParameter("@P_MOTHER_DESIG", objStudAddress.MOTHERDESIGNATION);
                ////        objParams[80] = new SqlParameter("@P_MOTHER_OCCUPATIONNO", objStudAddress.MOTHEROCCUPATION);
                ////        objParams[81] = new SqlParameter("@P_MOTHERJOBDETAIL", objStudAddress.MOTHERJOBDETAIL);

                ////        objParams[82] = new SqlParameter("@P_GUARDIANNAME", objStudAddress.GUARDIANNAME);
                ////        objParams[83] = new SqlParameter("@P_RELATION_GUARDIAN", objStudAddress.RELATION_GUARDIAN);
                ////        objParams[84] = new SqlParameter("@P_GADDRESS", objStudAddress.GADDRESS);
                ////        objParams[85] = new SqlParameter("@P_GOCCUPATIONNAME", objStudAddress.GOCCUPATIONNAME);
                ////        objParams[86] = new SqlParameter("@P_GPHONE", objStudAddress.GPHONE);
                ////        objParams[87] = new SqlParameter("@P_GEMAIL", objStudAddress.GEMAIL);
                ////        objParams[88] = new SqlParameter("@P_RAILWAY_STATION", objStudAddress.RAILWAY_STATION);
                ////        objParams[89] = new SqlParameter("@P_BUS_STATION", objStudAddress.BUS_STATION);
                ////        objParams[90] = new SqlParameter("@P_LOCALNAME_STATION", objStudAddress.LOCALNAME_STATION);

                ////        //Student Last Qualification Exam Parameter
                ////        objParams[91] = new SqlParameter("@P_QUALIFYNO", objStudQExm.QUALIFYNO);
                ////        objParams[92] = new SqlParameter("@P_YEAR_OF_EXAM", objStudent.YearOfExam);
                ////        objParams[93] = new SqlParameter("@P_QEXMROLLNO", objStudent.QexmRollNo);
                ////        objParams[94] = new SqlParameter("@P_SCHOOL_COLLEGE_NAMEHSSC", objStudQExm.SCHOOL_COLLEGE_NAME);
                ////        objParams[95] = new SqlParameter("@P_BOARDHSSC", objStudQExm.BOARD);
                ////        objParams[96] = new SqlParameter("@P_GRADEHSSC", objStudQExm.GRADE);
                ////        objParams[97] = new SqlParameter("@P_ATTEMPTHSSC", objStudQExm.ATTEMPT);
                ////        objParams[98] = new SqlParameter("@P_MERIT_NOHSSC", objStudQExm.MERITNO);
                ////        objParams[99] = new SqlParameter("@P_MARKS_OBTAINEDHSSC", objStudQExm.MARKOBTAINED);
                ////        objParams[100] = new SqlParameter("@P_OUT_OF_MRKSHSSC", objStudQExm.OUTOFMARK);

                ////        objParams[101] = new SqlParameter("@P_ALL_INDIA_RANK", objStudQExm.ALLINDIARANK);
                ////        objParams[102] = new SqlParameter("@P_STATE_RANK", objStudQExm.STATERANK);
                ////        objParams[103] = new SqlParameter("@P_SCORE", objStudent.Score);
                ////        objParams[104] = new SqlParameter("@P_PAPER", objStudent.Paper);
                ////        objParams[105] = new SqlParameter("@P_PAPER_CODE", objStudent.Paper_code);
                ////        objParams[106] = new SqlParameter("@P_PERHSSC", objStudQExm.PERCENTAGE);
                ////        objParams[107] = new SqlParameter("@P_PERCENTILEHSSC", objStudQExm.PERCENTILE);
                ////        objParams[108] = new SqlParameter("@P_HSC_PCM", objStudQExm.HSCPCM);
                ////        objParams[109] = new SqlParameter("@P_HSC_PCM_MAX", objStudQExm.HSCPCMMAX);
                ////        objParams[110] = new SqlParameter("@P_HSC_BIO", objStudQExm.HSCBIO);
                ////        objParams[111] = new SqlParameter("@P_HSC_BIO_MAX", objStudQExm.HSCBIOMAX);
                ////        objParams[112] = new SqlParameter("@P_HSC_ENG", objStudQExm.ENG);
                ////        objParams[113] = new SqlParameter("@P_HSC_ENG_MAX", objStudQExm.HSCENGMAX);
                ////        objParams[114] = new SqlParameter("@P_HSC_MAT", objStudQExm.MATHS);
                ////        objParams[115] = new SqlParameter("@P_HSC_MAT_MAX", objStudQExm.MATHSMAX);
                ////        objParams[116] = new SqlParameter("@P_HSC_CHE", objStudQExm.HSCCHE);
                ////        objParams[117] = new SqlParameter("@P_HSC_CHE_MAX", objStudQExm.HSCCHEMAX1);
                ////        objParams[118] = new SqlParameter("@P_HSC_PHY", objStudQExm.HSCPHY1);
                ////        objParams[119] = new SqlParameter("@P_HSC_PHY_MAX", objStudQExm.HSCPHYMAX1);

                ////        //Student Photo Parameter
                ////        objParams[120] = new SqlParameter("@P_PHOTOPATH", objStudPhoto.PhotoPath);
                ////        objParams[121] = new SqlParameter("@P_PHOTOSIZE", objStudPhoto.PhotoSize);

                ////        if (objStudPhoto.Photo1 == null)
                ////            objParams[122] = new SqlParameter("@P_PHOTO", DBNull.Value);
                ////        else
                ////            objParams[122] = new SqlParameter("@P_PHOTO", objStudPhoto.Photo1);

                ////        objParams[122].SqlDbType = SqlDbType.Image;

                ////        objParams[123] = new SqlParameter("@P_EMAILID", objStudent.EmailID);
                ////        objParams[124] = new SqlParameter("@P_QUALIFYEXAMNAME", objStudent.Qualifyexamname);
                ////        objParams[125] = new SqlParameter("@P_PERCENTAGE", objStudent.Percentage);
                ////        objParams[126] = new SqlParameter("@P_YEAR_OF_EXAMHSSC", objStudQExm.YEAR_OF_EXAMHSSC);
                ////        objParams[127] = new SqlParameter("@P_QEXMROLLNOHSSC", objStudQExm.QEXMROLLNO);
                ////        objParams[128] = new SqlParameter("@P_PERCENTILE", objStudent.Percentile);
                ////        objParams[129] = new SqlParameter("@P_YEAR_OF_EXAMSSC", objStudQExm.YearOfExamSsc);
                ////        objParams[130] = new SqlParameter("@P_SCHOOL_COLLEGE_NAMESSC", objStudQExm.SchoolCollegeNameSsc);
                ////        objParams[131] = new SqlParameter("@P_BOARDSSC ", objStudQExm.BoardSsc);
                ////        objParams[132] = new SqlParameter("@P_GRADESSC", objStudQExm.GradeSsc);
                ////        objParams[133] = new SqlParameter("@P_ATTEMPTSSC", objStudQExm.AttemptSsc);
                ////        objParams[134] = new SqlParameter("@P_MARKS_OBTAINEDSSC", objStudQExm.MarksObtainedSsc);
                ////        objParams[135] = new SqlParameter("@P_OUT_OF_MRKSSSC", objStudQExm.OutOfMarksSsc);
                ////        objParams[136] = new SqlParameter("@P_PERSSC", objStudQExm.PercentageSsc);
                ////        objParams[137] = new SqlParameter("@P_PERCENTILESSC", objStudQExm.PercentileSsc);
                ////        objParams[138] = new SqlParameter("@P_QEXMROLLNOSSC", objStudQExm.QEXMROLLNOSSC);
                ////        objParams[139] = new SqlParameter("@P_ADMQUOTANO", objStudent.ADMQUOTANO);
                ////        objParams[140] = new SqlParameter("@P_STUDENTMOBILE", objStudent.StudentMobile);
                ////        objParams[141] = new SqlParameter("@P_UANO", objStudent.Uano);
                ////        objParams[142] = new SqlParameter("@P_BANKNO", objStudent.BankNo);
                ////        objParams[143] = new SqlParameter("@P_ENROLLNO", objStudent.EnrollNo);
                ////        objParams[144] = new SqlParameter("@P_ADMCATEGORYNO", objStudent.AdmCategoryNo);
                ////        objParams[145] = new SqlParameter("@P_SCHOLORSHIPTYPENO", objStudent.Scholorship);
                ////        objParams[146] = new SqlParameter("@P_TYPE_OF_PHYSICALLY_HANDICAP", objStudent.Physical_Handicap);
                ////        objParams[147] = new SqlParameter("@P_LPOSTOFF", objStudAddress.LPOSTOFF);
                ////        objParams[148] = new SqlParameter("@P_LPOLICESTATION", objStudAddress.LPOLICESTATION);
                ////        objParams[149] = new SqlParameter("@P_LTEHSIL", objStudAddress.LTEHSIL);
                ////        objParams[150] = new SqlParameter("@P_PPOSTOFF", objStudAddress.PPOSTOFF);
                ////        objParams[151] = new SqlParameter("@P_PPOLICEOFF", objStudAddress.PPOLICESTATION);
                ////        objParams[152] = new SqlParameter("@P_PTEHSIL", objStudAddress.PTEHSIL);
                ////        objParams[153] = new SqlParameter("@P_ADDHARCARDNO", objStudent.AddharcardNo);
                ////        objParams[154] = new SqlParameter("@P_ANNUAL_INCOME", objStudAddress.ANNUAL_INCOME);
                ////        objParams[155] = new SqlParameter("@P_GUARDIANDESIG", objStudAddress.GUARDIANDESIGNATION);
                ////        objParams[156] = new SqlParameter("@P_CORRES_ADDRESS", objStudent.Corres_address);
                ////        objParams[157] = new SqlParameter("@P_CORRES_PIN", objStudent.Corres_pin);
                ////        objParams[158] = new SqlParameter("@P_CORRES_MOB", objStudent.Corres_mob);
                ////        objParams[159] = new SqlParameter("@P_YEARS_OF_STUDY", objStudent.Yearsofstudey);
                ////        objParams[160] = new SqlParameter("@P_STATE_OTHERSTATE", objStudent.Stateotherstate);
                ////        objParams[161] = new SqlParameter("@P_COLLEGE_ADD", objStudent.Colg_address);
                ////        objParams[162] = new SqlParameter("@P_SPECIALIZATION", objStudent.Specialization);
                ////        objParams[163] = new SqlParameter("@P_BIRTH_PINCODE", objStudent.BirthPinCode);

                ////        objParams[164] = new SqlParameter("@P_INDIAN_ORIGIN", objStudent.IndianOrigin);
                ////        objParams[165] = new SqlParameter("@P_VISA_EXPIRY_DATE", objStudent.VisaExpiryDate);
                ////        objParams[166] = new SqlParameter("@P_PASSPORT_EXPIRY_DATE", objStudent.PassportExpiryDate);
                ////        objParams[167] = new SqlParameter("@P_PASSPORT_ISSUE_DATE", objStudent.PassportIssueDate);
                ////        objParams[168] = new SqlParameter("@P_STAY_PERMIT_DATE", objStudent.StayPermitDate);
                ////        objParams[169] = new SqlParameter("@P_SCHOL_SCHEME", objStudent.ScholarshipScheme);
                ////        objParams[170] = new SqlParameter("@P_AGENCY", objStudent.Agency);
                ////        objParams[171] = new SqlParameter("@P_PASSPORT_ISSUE_PLACE", objStudent.PassportIssuePlace);
                ////        objParams[172] = new SqlParameter("@P_CITIZENSHIP", objStudent.Citizenship);
                ////        objParams[173] = new SqlParameter("@P_SSC_MEDIUM", objStudQExm.SSC_medium);
                ////        objParams[174] = new SqlParameter("@P_HSSC_MEDIUM", objStudQExm.HSSC_medium);
                ////        objParams[175] = new SqlParameter("@P_STUDMIDDLENAME", objStudent.MiddleName);
                ////        objParams[176] = new SqlParameter("@P_STUDLASTNAME", objStudent.LastName);
                ////        objParams[177] = new SqlParameter("@P_FATHERMIDDLENAME ", objStudent.FatherMiddleName);
                ////        objParams[178] = new SqlParameter("@P_FATHERLASTNAME", objStudent.FatherLastName);
                ////        objParams[179] = new SqlParameter("@P_FNAME", objStudent.firstName);
                ////        objParams[180] = new SqlParameter("@P_FATHERFIRSTNAME", objStudent.fatherfirstName);
                ////        objParams[181] = new SqlParameter("@P_INDUSEMAIL", IndusEmail);
                ////        objParams[182] = new SqlParameter("@P_OUT", SqlDbType.Int);
                ////        objParams[182].Direction = ParameterDirection.Output;

                ////        //int status = (Int32)objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUDENT", objParams, true);
                ////        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUDENT", objParams, true);

                ////        if (objStudent.LastQualifiedExams != null)
                ////        {
                ////            foreach (QualifiedExam qualExam in objStudent.LastQualifiedExams)
                ////            {
                ////                this.UpdateLastQualExams(qualExam);
                ////            }
                ////        }
                ////        retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                ////        return ret.ToString();

                ////        //int status = (Int32)objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUDENT", objParams, true);
                ////        //if (status != -99 && objStudent.LastQualifiedExams != null)
                ////        //{
                ////        //    foreach (QualifiedExam qualExam in objStudent.LastQualifiedExams)
                ////        //    {
                ////        //        this.UpdateLastQualExams(qualExam);
                ////        //    }
                ////        //}
                ////        //retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                ////        //return retStatus;

                ////    }
                ////    catch (Exception ex)
                ////    {
                ////        retStatus = Convert.ToInt32(CustomStatus.Error);
                ////        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent-> " + ex.ToString());
                ////    }
                ////}

                public string UpdateStudent(Student objStudent, StudentAddress objStudAddress, StudentPhoto objStudPhoto, StudentQualExm objStudQExm, string MotherMobile, string MotherOfficeNo, string IndusEmail, int usertype)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    //int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update Student
                        objParams = new SqlParameter[187];
                        //First Add Student Parameter
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_REGNO", objStudent.RegNo);
                        objParams[2] = new SqlParameter("@P_ROLLNO", objStudent.RollNo);
                        objParams[3] = new SqlParameter("@P_STUDNAME", objStudent.StudName);

                        objParams[4] = new SqlParameter("@P_STUDNAME_HINDI", objStudent.StudNameHindi);
                        objParams[5] = new SqlParameter("@P_MOTHERNAME", objStudent.MotherName);
                        objParams[6] = new SqlParameter("@P_FATHERNAME", objStudent.FatherName);


                        objParams[7] = new SqlParameter("@P_DOB", objStudent.Dob);
                        objParams[8] = new SqlParameter("@P_AGE", objStudent.Age);
                        objParams[9] = new SqlParameter("@P_BIRTH_PLACE", objStudent.BirthPlace);
                        objParams[10] = new SqlParameter("@P_BIRTH_VILLAGE", objStudent.Birthvillage);
                        objParams[11] = new SqlParameter("@P_BIRTH_TALUKA", objStudent.Birthtaluka);
                        objParams[12] = new SqlParameter("@P_BIRTH_DISTRICT", objStudent.Birthdistrict);
                        objParams[13] = new SqlParameter("@P_BIRTH_STATE", objStudent.Birthdistate);
                        objParams[14] = new SqlParameter("@P_OTHER_LANGUAGE", objStudent.OtherLanguage);
                        objParams[15] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                        objParams[16] = new SqlParameter("@P_SEX", objStudent.Sex);
                        objParams[17] = new SqlParameter("@P_MTOUNGENO", objStudent.MToungeNo);
                        objParams[18] = new SqlParameter("@P_MARRIED", objStudent.Married);
                        objParams[19] = new SqlParameter("@P_HEIGHT", objStudent.Height);
                        objParams[20] = new SqlParameter("@P_WEIGHT", objStudent.Weight);
                        objParams[21] = new SqlParameter("@P_IDENTI_MARK", objStudent.IdentyMark);
                        objParams[22] = new SqlParameter("@P_BLOODGRPNO", objStudent.BloodGroupNo);
                        objParams[23] = new SqlParameter("@P_CASTE", objStudent.Caste);
                        objParams[24] = new SqlParameter("@P_SUB_CASTE", objStudent.Subcaste);
                        objParams[25] = new SqlParameter("@P_CATEGORYNO", objStudent.CategoryNo);
                        objParams[26] = new SqlParameter("@P_NATIONALITYNO", objStudent.NationalityNo);
                        objParams[27] = new SqlParameter("@P_RELIGIONNO", objStudent.ReligionNo);
                        objParams[28] = new SqlParameter("@P_COUNTRYDOMICILE", objStudent.CountryDomicile);
                        objParams[29] = new SqlParameter("@P_HOSTELER", objStudent.Hosteler);
                        objParams[30] = new SqlParameter("@P_IRREGULAR", objStudent.Irregular);
                        objParams[31] = new SqlParameter("@P_URBAN", objStudent.Urban);
                        objParams[32] = new SqlParameter("@P_YEAR", objStudent.Year);
                        objParams[33] = new SqlParameter("@P_PRO", objStudent.Pro);
                        objParams[34] = new SqlParameter("@P_BATCHNO", objStudent.BatchNo);
                        objParams[35] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[36] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                        objParams[37] = new SqlParameter("@P_SECTIONNO", objStudent.SectionNo);
                        objParams[38] = new SqlParameter("@P_SCHEMENO", objStudent.SchemeNo);
                        objParams[39] = new SqlParameter("@P_LASTROLLNO", objStudent.LastRollNo);
                        objParams[40] = new SqlParameter("@P_ROLL2", objStudent.Roll2);
                        objParams[41] = new SqlParameter("@P_ACC_NO", objStudent.AccNo);
                        objParams[42] = new SqlParameter("@P_VISANO", objStudent.Visano);
                        objParams[43] = new SqlParameter("@P_PASSPORTNO", objStudent.PassportNo);
                        objParams[44] = new SqlParameter("@P_STATENO", objStudent.StateNo);
                        objParams[45] = new SqlParameter("@P_IDTYPE", objStudent.IdType);
                        objParams[46] = new SqlParameter("@P_PTYPE", objStudent.PType);
                        objParams[47] = new SqlParameter("@P_ADMCAN", objStudent.AdmCancel);

                        if (objStudent.AdmDate == DateTime.MinValue)
                            objParams[48] = new SqlParameter("@P_ADMDATE", DBNull.Value);
                        else
                            objParams[48] = new SqlParameter("@P_ADMDATE", objStudent.AdmDate);

                        objParams[49] = new SqlParameter("@P_ADMBATCH", objStudent.AdmBatch);
                        objParams[50] = new SqlParameter("@P_LEAVEDATE", objStudent.LeaveDate);
                        objParams[51] = new SqlParameter("@P_CAN", objStudent.Can);
                        objParams[52] = new SqlParameter("@P_CANDATE", objStudent.CanDate);
                        objParams[53] = new SqlParameter("@P_REMARK", objStudent.Remark);
                        objParams[54] = new SqlParameter("@P_FAC_ADVISOR", objStudent.FacAdvisor);
                        objParams[55] = new SqlParameter("@P_PRJNAME", objStudent.Prjname);
                        objParams[56] = new SqlParameter("@P_FATHERMOBILE", objStudent.FatherMobile);
                        objParams[57] = new SqlParameter("@P_MOTHERMOBILE", MotherMobile);
                        objParams[58] = new SqlParameter("@P_FATHEROFFICENO", objStudent.FatherOfficeNo);
                        objParams[59] = new SqlParameter("@P_MOTHEROFFICENO", MotherOfficeNo);

                        //Student address parameter
                        objParams[60] = new SqlParameter("@P_LADDRESS", objStudAddress.LADDRESS);
                        objParams[61] = new SqlParameter("@P_LCITY", objStudAddress.LCITY);
                        objParams[62] = new SqlParameter("@P_LDISTRICT", objStudAddress.LDISTRICT);
                        objParams[63] = new SqlParameter("@P_LSTATE", objStudAddress.LSTATE);
                        objParams[64] = new SqlParameter("@P_LPINCODE", objStudAddress.LPINCODE);
                        objParams[65] = new SqlParameter("@P_LTELEPHONE", objStudAddress.LTELEPHONE);
                        objParams[66] = new SqlParameter("@P_LMOBILE", objStudAddress.LMOBILE);
                        objParams[67] = new SqlParameter("@P_LEMAIL", objStudAddress.LEMAIL);
                        objParams[68] = new SqlParameter("@P_PADDRESS", objStudAddress.PADDRESS);
                        objParams[69] = new SqlParameter("@P_PCITY", objStudAddress.PCITY);
                        objParams[70] = new SqlParameter("@P_PSTATE", objStudAddress.PSTATE);
                        objParams[71] = new SqlParameter("@P_PDISTRICT", objStudAddress.PDISTRICT);

                        objParams[72] = new SqlParameter("@P_PTELEPHONE", objStudAddress.PTELEPHONE);
                        objParams[73] = new SqlParameter("@P_PMOBILE", objStudAddress.PMOBILE);
                        objParams[74] = new SqlParameter("@P_PPINCODE", objStudAddress.PPINCODE);
                        objParams[75] = new SqlParameter("@P_PEMAIL", objStudAddress.PEMAIL);
                        objParams[76] = new SqlParameter("@P_FATHER_DESIG", objStudAddress.FATHER_DESIG);
                        objParams[77] = new SqlParameter("@P_OCCUPATIONNO", objStudAddress.OCCUPATION);

                        objParams[78] = new SqlParameter("@P_FATHERJOBDETAIL", objStudAddress.FATHERJOBDETAIL);
                        objParams[79] = new SqlParameter("@P_MOTHER_DESIG", objStudAddress.MOTHERDESIGNATION);
                        objParams[80] = new SqlParameter("@P_MOTHER_OCCUPATIONNO", objStudAddress.MOTHEROCCUPATION);
                        objParams[81] = new SqlParameter("@P_MOTHERJOBDETAIL", objStudAddress.MOTHERJOBDETAIL);

                        objParams[82] = new SqlParameter("@P_GUARDIANNAME", objStudAddress.GUARDIANNAME);
                        objParams[83] = new SqlParameter("@P_RELATION_GUARDIAN", objStudAddress.RELATION_GUARDIAN);
                        objParams[84] = new SqlParameter("@P_GADDRESS", objStudAddress.GADDRESS);
                        objParams[85] = new SqlParameter("@P_GOCCUPATIONNAME", objStudAddress.GOCCUPATIONNAME);
                        objParams[86] = new SqlParameter("@P_GPHONE", objStudAddress.GPHONE);
                        objParams[87] = new SqlParameter("@P_GEMAIL", objStudAddress.GEMAIL);
                        objParams[88] = new SqlParameter("@P_RAILWAY_STATION", objStudAddress.RAILWAY_STATION);
                        objParams[89] = new SqlParameter("@P_BUS_STATION", objStudAddress.BUS_STATION);
                        objParams[90] = new SqlParameter("@P_LOCALNAME_STATION", objStudAddress.LOCALNAME_STATION);

                        //Student Last Qualification Exam Parameter
                        objParams[91] = new SqlParameter("@P_QUALIFYNO", objStudQExm.QUALIFYNO);
                        objParams[92] = new SqlParameter("@P_YEAR_OF_EXAM", objStudent.YearOfExam);
                        objParams[93] = new SqlParameter("@P_QEXMROLLNO", objStudent.QexmRollNo);
                        objParams[94] = new SqlParameter("@P_SCHOOL_COLLEGE_NAMEHSSC", objStudQExm.SCHOOL_COLLEGE_NAME);
                        objParams[95] = new SqlParameter("@P_BOARDHSSC", objStudQExm.BOARD);
                        objParams[96] = new SqlParameter("@P_GRADEHSSC", objStudQExm.GRADE);
                        objParams[97] = new SqlParameter("@P_ATTEMPTHSSC", objStudQExm.ATTEMPT);
                        objParams[98] = new SqlParameter("@P_MERIT_NOHSSC", objStudQExm.MERITNO);
                        objParams[99] = new SqlParameter("@P_MARKS_OBTAINEDHSSC", objStudQExm.MARKOBTAINED);
                        objParams[100] = new SqlParameter("@P_OUT_OF_MRKSHSSC", objStudQExm.OUTOFMARK);

                        objParams[101] = new SqlParameter("@P_ALL_INDIA_RANK", objStudQExm.ALLINDIARANK);
                        objParams[102] = new SqlParameter("@P_STATE_RANK", objStudQExm.STATERANK);
                        objParams[103] = new SqlParameter("@P_SCORE", objStudent.Score);
                        objParams[104] = new SqlParameter("@P_PAPER", objStudent.Paper);
                        objParams[105] = new SqlParameter("@P_PAPER_CODE", objStudent.Paper_code);
                        objParams[106] = new SqlParameter("@P_PERHSSC", objStudQExm.PERCENTAGE);
                        objParams[107] = new SqlParameter("@P_PERCENTILEHSSC", objStudQExm.PERCENTILE);
                        objParams[108] = new SqlParameter("@P_HSC_PCM", objStudQExm.HSCPCM);
                        objParams[109] = new SqlParameter("@P_HSC_PCM_MAX", objStudQExm.HSCPCMMAX);
                        objParams[110] = new SqlParameter("@P_HSC_BIO", objStudQExm.HSCBIO);
                        objParams[111] = new SqlParameter("@P_HSC_BIO_MAX", objStudQExm.HSCBIOMAX);
                        objParams[112] = new SqlParameter("@P_HSC_ENG", objStudQExm.ENG);
                        objParams[113] = new SqlParameter("@P_HSC_ENG_MAX", objStudQExm.HSCENGMAX);
                        objParams[114] = new SqlParameter("@P_HSC_MAT", objStudQExm.MATHS);
                        objParams[115] = new SqlParameter("@P_HSC_MAT_MAX", objStudQExm.MATHSMAX);
                        objParams[116] = new SqlParameter("@P_HSC_CHE", objStudQExm.HSCCHE);
                        objParams[117] = new SqlParameter("@P_HSC_CHE_MAX", objStudQExm.HSCCHEMAX1);
                        objParams[118] = new SqlParameter("@P_HSC_PHY", objStudQExm.HSCPHY1);
                        objParams[119] = new SqlParameter("@P_HSC_PHY_MAX", objStudQExm.HSCPHYMAX1);

                        //Student Photo Parameter
                        objParams[120] = new SqlParameter("@P_PHOTOPATH", objStudPhoto.PhotoPath);
                        objParams[121] = new SqlParameter("@P_PHOTOSIZE", objStudPhoto.PhotoSize);

                        if (objStudPhoto.Photo1 == null)
                            objParams[122] = new SqlParameter("@P_PHOTO", DBNull.Value);
                        else
                            objParams[122] = new SqlParameter("@P_PHOTO", objStudPhoto.Photo1);

                        objParams[122].SqlDbType = SqlDbType.Image;

                        objParams[123] = new SqlParameter("@P_EMAILID", objStudent.EmailID);
                        objParams[124] = new SqlParameter("@P_QUALIFYEXAMNAME", objStudent.Qualifyexamname);
                        objParams[125] = new SqlParameter("@P_PERCENTAGE", objStudent.Percentage);
                        objParams[126] = new SqlParameter("@P_YEAR_OF_EXAMHSSC", objStudQExm.YEAR_OF_EXAMHSSC);
                        objParams[127] = new SqlParameter("@P_QEXMROLLNOHSSC", objStudQExm.QEXMROLLNO);
                        objParams[128] = new SqlParameter("@P_PERCENTILE", objStudent.Percentile);
                        objParams[129] = new SqlParameter("@P_YEAR_OF_EXAMSSC", objStudQExm.YearOfExamSsc);
                        objParams[130] = new SqlParameter("@P_SCHOOL_COLLEGE_NAMESSC", objStudQExm.SchoolCollegeNameSsc);
                        objParams[131] = new SqlParameter("@P_BOARDSSC ", objStudQExm.BoardSsc);
                        objParams[132] = new SqlParameter("@P_GRADESSC", objStudQExm.GradeSsc);
                        objParams[133] = new SqlParameter("@P_ATTEMPTSSC", objStudQExm.AttemptSsc);
                        objParams[134] = new SqlParameter("@P_MARKS_OBTAINEDSSC", objStudQExm.MarksObtainedSsc);
                        objParams[135] = new SqlParameter("@P_OUT_OF_MRKSSSC", objStudQExm.OutOfMarksSsc);
                        objParams[136] = new SqlParameter("@P_PERSSC", objStudQExm.PercentageSsc);
                        objParams[137] = new SqlParameter("@P_PERCENTILESSC", objStudQExm.PercentileSsc);
                        objParams[138] = new SqlParameter("@P_QEXMROLLNOSSC", objStudQExm.QEXMROLLNOSSC);
                        objParams[139] = new SqlParameter("@P_ADMQUOTANO", objStudent.ADMQUOTANO);
                        objParams[140] = new SqlParameter("@P_STUDENTMOBILE", objStudent.StudentMobile);
                        objParams[141] = new SqlParameter("@P_UANO", objStudent.Uano);
                        objParams[142] = new SqlParameter("@P_BANKNO", objStudent.BankNo);
                        objParams[143] = new SqlParameter("@P_ENROLLNO", objStudent.EnrollNo);
                        objParams[144] = new SqlParameter("@P_ADMCATEGORYNO", objStudent.AdmCategoryNo);
                        objParams[145] = new SqlParameter("@P_SCHOLORSHIPTYPENO", objStudent.Scholorship);
                        objParams[146] = new SqlParameter("@P_TYPE_OF_PHYSICALLY_HANDICAP", objStudent.Physical_Handicap);
                        objParams[147] = new SqlParameter("@P_LPOSTOFF", objStudAddress.LPOSTOFF);
                        objParams[148] = new SqlParameter("@P_LPOLICESTATION", objStudAddress.LPOLICESTATION);
                        objParams[149] = new SqlParameter("@P_LTEHSIL", objStudAddress.LTEHSIL);
                        objParams[150] = new SqlParameter("@P_PPOSTOFF", objStudAddress.PPOSTOFF);
                        objParams[151] = new SqlParameter("@P_PPOLICEOFF", objStudAddress.PPOLICESTATION);
                        objParams[152] = new SqlParameter("@P_PTEHSIL", objStudAddress.PTEHSIL);
                        objParams[153] = new SqlParameter("@P_ADDHARCARDNO", objStudent.AddharcardNo);
                        objParams[154] = new SqlParameter("@P_ANNUAL_INCOME", objStudAddress.ANNUAL_INCOME);
                        objParams[155] = new SqlParameter("@P_GUARDIANDESIG", objStudAddress.GUARDIANDESIGNATION);
                        objParams[156] = new SqlParameter("@P_CORRES_ADDRESS", objStudent.Corres_address);
                        objParams[157] = new SqlParameter("@P_CORRES_PIN", objStudent.Corres_pin);
                        objParams[158] = new SqlParameter("@P_CORRES_MOB", objStudent.Corres_mob);
                        objParams[159] = new SqlParameter("@P_YEARS_OF_STUDY", objStudent.Yearsofstudey);
                        objParams[160] = new SqlParameter("@P_STATE_OTHERSTATE", objStudent.Stateotherstate);
                        objParams[161] = new SqlParameter("@P_COLLEGE_ADD", objStudent.Colg_address);
                        objParams[162] = new SqlParameter("@P_SPECIALIZATION", objStudent.Specialization);
                        objParams[163] = new SqlParameter("@P_BIRTH_PINCODE", objStudent.BirthPinCode);

                        objParams[164] = new SqlParameter("@P_INDIAN_ORIGIN", objStudent.IndianOrigin);
                        objParams[165] = new SqlParameter("@P_VISA_EXPIRY_DATE", objStudent.VisaExpiryDate);
                        objParams[166] = new SqlParameter("@P_PASSPORT_EXPIRY_DATE", objStudent.PassportExpiryDate);
                        objParams[167] = new SqlParameter("@P_PASSPORT_ISSUE_DATE", objStudent.PassportIssueDate);
                        objParams[168] = new SqlParameter("@P_STAY_PERMIT_DATE", objStudent.StayPermitDate);
                        objParams[169] = new SqlParameter("@P_SCHOL_SCHEME", objStudent.ScholarshipScheme);
                        objParams[170] = new SqlParameter("@P_AGENCY", objStudent.Agency);
                        objParams[171] = new SqlParameter("@P_PASSPORT_ISSUE_PLACE", objStudent.PassportIssuePlace);
                        objParams[172] = new SqlParameter("@P_CITIZENSHIP", objStudent.Citizenship);
                        objParams[173] = new SqlParameter("@P_SSC_MEDIUM", objStudQExm.SSC_medium);
                        objParams[174] = new SqlParameter("@P_HSSC_MEDIUM", objStudQExm.HSSC_medium);
                        objParams[175] = new SqlParameter("@P_STUDMIDDLENAME", objStudent.MiddleName);
                        objParams[176] = new SqlParameter("@P_STUDLASTNAME", objStudent.LastName);
                        objParams[177] = new SqlParameter("@P_FATHERMIDDLENAME ", objStudent.FatherMiddleName);
                        objParams[178] = new SqlParameter("@P_FATHERLASTNAME", objStudent.FatherLastName);
                        objParams[179] = new SqlParameter("@P_FNAME", objStudent.firstName);
                        objParams[180] = new SqlParameter("@P_FATHERFIRSTNAME", objStudent.fatherfirstName);
                        //aayushi
                        objParams[181] = new SqlParameter("@P_MOTHEREMAIL ", objStudent.Motheremail);
                        objParams[182] = new SqlParameter("@P_FATHEREMAIL ", objStudent.Fatheremail);
                        /////////////
                        objParams[183] = new SqlParameter("@P_INDUSEMAIL", IndusEmail);
                        objParams[184] = new SqlParameter("@P_CLAIMID", objStudent.ClaimType);
                        objParams[185] = new SqlParameter("@P_USERTYPE", usertype);
                        objParams[186] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[186].Direction = ParameterDirection.Output;

                        //int status = (Int32)objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUDENT", objParams, true);
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUDENT", objParams, true);

                        if (objStudent.LastQualifiedExams != null)
                        {
                            foreach (QualifiedExam qualExam in objStudent.LastQualifiedExams)
                            {
                                this.UpdateLastQualExams(qualExam);
                            }
                        }
                        retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        return ret.ToString();

                        //int status = (Int32)objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUDENT", objParams, true);
                        //if (status != -99 && objStudent.LastQualifiedExams != null)
                        //{
                        //    foreach (QualifiedExam qualExam in objStudent.LastQualifiedExams)
                        //    {
                        //        this.UpdateLastQualExams(qualExam);
                        //    }
                        //}
                        //retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        //return retStatus;

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent-> " + ex.ToString());
                    }
                }
                public DataSet Get_Intake_Admission_Data(int degreeno, int srcategoryno, string college_jss)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[1] = new SqlParameter("@P_SRCATEGORYNO", srcategoryno);
                        objParams[2] = new SqlParameter("@P_COLLEGE_JSS", college_jss);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_INTAKE_ADMISION_DATA", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.RetrieveEmpDetails-> " + ex.ToString());
                    }
                    return ds;
                }
                 public DataSet GetDetailsOfInternalMarksHeader_Subexam(int idno, int sessionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_COURSEWISE_GRADE_HEAD_NEW_SUBEXAM_NAME", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetDetailsOfInternalMarks-> " + ex.ToString());
                    }
                    return ds;
                }
                public DataSet GetDetailsOfInternalMarks1_Subexam(int idno, int sessionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_SUBEXAMNAME_BY_PARTICULATUR_IDNO_Subexam_SUBEXAM_DATA", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetDetailsOfInternalMarks-> " + ex.ToString());
                    }
                    return ds;
                }
                public int Insert_update_intake_admission(int intakeid, int degreeno, int branchno, int srcategoryno, string college_jss, string intake)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[7];
                        objParams[0] = new SqlParameter("@P_INTAKEID", intakeid);
                        objParams[1] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[2] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[3] = new SqlParameter("@P_SRCATEGORYNO", srcategoryno);
                        objParams[4] = new SqlParameter("@P_COLLEGE_JSS", college_jss);
                        objParams[5] = new SqlParameter("@P_INTAKE", intake);
                        objParams[6] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[6].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("pkg_acd_ins_intake_admission", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        else if (Convert.ToInt32(ret) == 2)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.Insert_Update_StudentDocuments-> " + ex.ToString());
                    }
                    return retStatus;
                }
              //Added by lalit Regarding student for jecrc
                public DataSet GetDetailsOfInternalMarksHeader_jecrc(int idno, int sessionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_COURSEWISE_GRADE_HEAD_NEW_JECRC", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetDetailsOfInternalMarks-> " + ex.ToString());
                    }
                    return ds;
                }
                public DataSet GetDetailsOfInternalMarks1_jecrc(int idno, int sessionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_SUBEXAMNAME_BY_PARTICULATUR_IDNO_Subexam_JECRC", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetDetailsOfInternalMarks-> " + ex.ToString());
                    }
                    return ds;
                }
                //added by pooja for nodues approved student list
                public DataSet GetApprovedStudListApproved(Student objStud, int UANO, string collegeNo, int userType, string passbatch, int status)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_PASSOUT_BATCH", passbatch);
                        objParams[1] = new SqlParameter("@P_UANO", UANO);
                        objParams[2] = new SqlParameter("@P_COLLEGE_NO", collegeNo);
                        objParams[3] = new SqlParameter("@P_UA_TYPE", userType);
                        objParams[4] = new SqlParameter("@P_STATUS", status);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_NODUES_APPROVAL_STUD_LIST_ADMIN", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetApprovedStudList->" + ex.ToString());
                    }
                    return ds;
                }
                //public DataSet GetCourseFor_RevalPhotocopyChallenge(int idno, int sessionno, int semesterno, int degreeno, int schemeno)
                //{
                //    DataSet ds = null;

                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        objParams = new SqlParameter[5];
                //        objParams[0] = new SqlParameter("@P_IDNO", idno);
                //        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                //        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                //        objParams[3] = new SqlParameter("@P_DEGREENO", degreeno);
                //        objParams[4] = new SqlParameter("@P_SCHEMENO", schemeno);
                //        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_COURSE_FOR_REVALUATION_PHOTOCOPY_CHALLENGE_NEW", objParams);

                //    }
                //    catch (Exception ex)
                //    {
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                //    }
                //    return ds;
                //}


                //Added by Vinay Mishra on 22/06/2023
                public DataSet GetStudentDetailsWithRegistrationFees(string applicationId, int flag)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[]
                         {
                            new SqlParameter("@P_APPLICATION_ID", applicationId),  
                            new SqlParameter("@P_FLAG", flag),
                         };

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_STUDENT_DETAILS_WITH_REGISTRATION_FEES", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw ex;
                    }

                    return ds;
                }

                public DataSet GetCourseFor_RevalPhotocopyChallenge(int idno, int sessionno, int semesterno, int degreeno, int schemeno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[4] = new SqlParameter("@P_SCHEMENO", schemeno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_COURSE_FOR_REVALUATION_PHOTOCOPY_CHALLENGE_NEW", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }
                public int BulkInsAdmitCardLog(int degreeNo, int branchno, string ids, string ipadd, int userid)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeNo);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);

                        objParams[2] = new SqlParameter("@P_IDNOS", ids);


                        objParams[3] = new SqlParameter("@P_IPADDRSS", ipadd);

                        objParams[4] = new SqlParameter("@P_USER_ID", userid);

                        object ret = objSQLHelper.ExecuteDataSetSP("PKG_ADMITCARD_LOG", objParams);
                        if (ret != null)
                            if (ret.ToString() != "-99")
                                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.InsGradeTranscriptLog-> " + ex.ToString());
                    }

                    return retStatus;
                }


                /// <summary>
                /// UPDATED BY DILEEP KARE
                /// DATE:24-01-2020
                /// </summary>
                /// <param name="SESSIONNO"></param>
                /// <param name="semesterno"></param>
                /// <param name="audit_date"></param>
                /// <param name="Remark"></param>
                /// <returns></returns>
                public int InsAdmitCardLog(int degreeNo, int branchno, string ids, string ipadd, int userid, string Remark, int SESSIONNO, int semesterno, DateTime audit_date)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[9];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeNo);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_IDNOS", ids);
                        objParams[3] = new SqlParameter("@P_IPADDRSS", ipadd);
                        objParams[4] = new SqlParameter("@P_USER_ID", userid);
                        objParams[5] = new SqlParameter("@P_REMARK", Remark);   //Dileep; 24-01-2020
                        objParams[6] = new SqlParameter("@P_SESSIONNO", SESSIONNO);//Dileep;24-01-2020
                        objParams[7] = new SqlParameter("@P_SEMESTERNO", semesterno);//Dileep;24-01-2020
                        objParams[8] = new SqlParameter("@P_AUDIT_DATE", audit_date);//Dileep;24-01-2020
                        object ret = objSQLHelper.ExecuteDataSetSP("PKG_ADMITCARD_LOG", objParams);
                        if (ret != null)
                            if (ret.ToString() != "-99")
                                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.InsGradeTranscriptLog-> " + ex.ToString());
                    }

                    return retStatus;
                }

                public int InsAdmitCardLog(int degreeNo, int branchno, string ids, string ipadd, int userid)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeNo);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);

                        objParams[2] = new SqlParameter("@P_IDNOS", ids);


                        objParams[3] = new SqlParameter("@P_IPADDRSS", ipadd);

                        objParams[4] = new SqlParameter("@P_USER_ID", userid);

                        object ret = objSQLHelper.ExecuteDataSetSP("PKG_ADMITCARD_LOG", objParams);
                        if (ret != null)
                            if (ret.ToString() != "-99")
                                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.InsGradeTranscriptLog-> " + ex.ToString());
                    }

                    return retStatus;
                }

                public int InsAdmitCanLog(int semesterNo, int sessionno, int idno, string ipadd, int userid, string remark)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_SEMESTERNO", semesterNo);
                        objParams[1] = new SqlParameter("@P_sessionNO", sessionno);

                        objParams[2] = new SqlParameter("@P_IDNO", idno);


                        objParams[3] = new SqlParameter("@P_IPADDRESS", ipadd);

                        objParams[4] = new SqlParameter("@P_Ua_no", userid);
                        objParams[5] = new SqlParameter("@P_REMARK", remark);
                        object ret = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_INS_ADM_CAN STATUS", objParams);
                        if (ret != null)
                            if (ret.ToString() != "-99")
                                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.InsGradeTranscriptLog-> " + ex.ToString());
                    }

                    return retStatus;
                }
                //ADDED

                public DataSet GetStudentListForAdmitCardForSTudent(int sessionno, int idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];

                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_ADMIT_CARD_BY_STUDENT", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }



                public DataSet GetStudentListForAdmitCard(int degreeno, int branchno, int semesterno, int prev_status, int sessionno, int colg, int examno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[7];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_PREV_STATUS", prev_status);
                        objParams[4] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[5] = new SqlParameter("@P_COLLEGE_ID", colg);
                        objParams[6] = new SqlParameter("@P_EXAMNO", examno);   // added on 06-03-2020 by Vaishali
                        // objParams[6] = new SqlParameter("@P_ADMBTCH", admbatch);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_ADMIT_CARD", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }



                //public DataSet GetStudentListForAdmitCard(int degreeno, int branchno, int semesterno, int prev_status, int sessionno, int colg, int admbatch)
                //{
                //    DataSet ds = null;

                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        objParams = new SqlParameter[7];
                //        objParams[0] = new SqlParameter("@P_DEGREENO", degreeno);
                //        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                //        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                //        objParams[3] = new SqlParameter("@P_PREV_STATUS", prev_status);
                //        objParams[4] = new SqlParameter("@P_SESSIONNO", sessionno);
                //        objParams[5] = new SqlParameter("@P_COLLEGE_ID", colg);
                //        objParams[6] = new SqlParameter("@P_ADMBTCH", admbatch);
                //        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_ADMIT_CARD", objParams);

                //    }
                //    catch (Exception ex)
                //    {

                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                //    }
                //    return ds;
                //}

                //public string UpdateStudent(Student objStudent, StudentAddress objStudAddress, StudentPhoto objStudPhoto, StudentQualExm objStudQExm)
                //{
                //    int retStatus = Convert.ToInt32(CustomStatus.Others);
                //    //int retStatus = Convert.ToInt32(CustomStatus.Others);
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;

                //        //Update Student
                //        objParams = new SqlParameter[136];
                //        //First Add Student Parameter
                //        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                //        objParams[1] = new SqlParameter("@P_REGNO", objStudent.RegNo);
                //        objParams[2] = new SqlParameter("@P_ROLLNO", objStudent.RollNo);
                //        objParams[3] = new SqlParameter("@P_STUDNAME", objStudent.StudName);

                //        objParams[4] = new SqlParameter("@P_STUDNAME_HINDI", objStudent.StudNameHindi);
                //        objParams[5] = new SqlParameter("@P_MOTHERNAME", objStudent.MotherName);
                //        objParams[6] = new SqlParameter("@P_FATHERNAME", objStudent.FatherName);


                //        objParams[7] = new SqlParameter("@P_DOB", objStudent.Dob);
                //        objParams[8] = new SqlParameter("@P_BIRTH_PLACE", objStudent.BirthPlace);
                //        objParams[9] = new SqlParameter("@P_OTHER_LANGUAGE", objStudent.OtherLanguage);
                //        objParams[10] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                //        objParams[11] = new SqlParameter("@P_SEX", objStudent.Sex);
                //        objParams[12] = new SqlParameter("@P_MTOUNGENO", objStudent.MToungeNo);
                //        objParams[13] = new SqlParameter("@P_MARRIED", objStudent.Married);
                //        objParams[14] = new SqlParameter("@P_HEIGHT", objStudent.Height);
                //        objParams[15] = new SqlParameter("@P_WEIGHT", objStudent.Weight);
                //        objParams[16] = new SqlParameter("@P_IDENTI_MARK", objStudent.IdentyMark);
                //        objParams[17] = new SqlParameter("@P_BLOODGRPNO", objStudent.BloodGroupNo);
                //        objParams[18] = new SqlParameter("@P_CASTE", objStudent.Caste);
                //        objParams[19] = new SqlParameter("@P_CATEGORYNO", objStudent.CategoryNo);
                //        objParams[20] = new SqlParameter("@P_NATIONALITYNO", objStudent.NationalityNo);
                //        objParams[21] = new SqlParameter("@P_RELIGIONNO", objStudent.ReligionNo);
                //        objParams[22] = new SqlParameter("@P_COUNTRYDOMICILE", objStudent.CountryDomicile);
                //        objParams[23] = new SqlParameter("@P_HOSTELER", objStudent.Hosteler);
                //        objParams[24] = new SqlParameter("@P_IRREGULAR", objStudent.Irregular);
                //        objParams[25] = new SqlParameter("@P_URBAN", objStudent.Urban);
                //        objParams[26] = new SqlParameter("@P_YEAR", objStudent.Year);
                //        objParams[27] = new SqlParameter("@P_PRO", objStudent.Pro);
                //        objParams[28] = new SqlParameter("@P_BATCHNO", objStudent.BatchNo);
                //        objParams[29] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                //        objParams[30] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                //        objParams[31] = new SqlParameter("@P_SECTIONNO", objStudent.SectionNo);
                //        objParams[32] = new SqlParameter("@P_SCHEMENO", objStudent.SchemeNo);
                //        objParams[33] = new SqlParameter("@P_LASTROLLNO", objStudent.LastRollNo);
                //        objParams[34] = new SqlParameter("@P_ROLL2", objStudent.Roll2);
                //        objParams[35] = new SqlParameter("@P_ACC_NO", objStudent.AccNo);
                //        objParams[36] = new SqlParameter("@P_VISANO", objStudent.Visano);
                //        objParams[37] = new SqlParameter("@P_PASSPORTNO", objStudent.PassportNo);
                //        objParams[38] = new SqlParameter("@P_STATENO", objStudent.StateNo);
                //        objParams[39] = new SqlParameter("@P_IDTYPE", objStudent.IdType);
                //        objParams[40] = new SqlParameter("@P_PTYPE", objStudent.PType);
                //        objParams[41] = new SqlParameter("@P_ADMCAN", objStudent.AdmCancel);

                //        if (objStudent.AdmDate == DateTime.MinValue)
                //            objParams[42] = new SqlParameter("@P_ADMDATE", DBNull.Value);
                //        else
                //            objParams[42] = new SqlParameter("@P_ADMDATE", objStudent.AdmDate);

                //        objParams[43] = new SqlParameter("@P_ADMBATCH", objStudent.AdmBatch);
                //        objParams[44] = new SqlParameter("@P_LEAVEDATE", objStudent.LeaveDate);
                //        objParams[45] = new SqlParameter("@P_CAN", objStudent.Can);
                //        objParams[46] = new SqlParameter("@P_CANDATE", objStudent.CanDate);
                //        objParams[47] = new SqlParameter("@P_REMARK", objStudent.Remark);
                //        objParams[48] = new SqlParameter("@P_FAC_ADVISOR", objStudent.FacAdvisor);
                //        objParams[49] = new SqlParameter("@P_PRJNAME", objStudent.Prjname);
                //        objParams[50] = new SqlParameter("@P_FATHERMOBILE", objStudent.FatherMobile);
                //        objParams[51] = new SqlParameter("@P_MOTHERMOBILE", objStudent.MotherMobile);
                //        objParams[52] = new SqlParameter("@P_FATHEROFFICENO", objStudent.FatherOfficeNo);
                //        objParams[53] = new SqlParameter("@P_MOTHEROFFICENO", objStudent.MotherOfficeNo);

                //        //Student address parameter
                //        objParams[54] = new SqlParameter("@P_LADDRESS", objStudAddress.LADDRESS);
                //        objParams[55] = new SqlParameter("@P_LCITY", objStudAddress.LCITY);
                //        objParams[56] = new SqlParameter("@P_LDISTRICT", objStudAddress.LDISTRICT);
                //        objParams[57] = new SqlParameter("@P_LSTATE", objStudAddress.LSTATE);
                //        objParams[58] = new SqlParameter("@P_LPINCODE", objStudAddress.LPINCODE);
                //        objParams[59] = new SqlParameter("@P_LTELEPHONE", objStudAddress.LTELEPHONE);
                //        objParams[60] = new SqlParameter("@P_LMOBILE", objStudAddress.LMOBILE);
                //        objParams[61] = new SqlParameter("@P_LEMAIL", objStudAddress.LEMAIL);
                //        objParams[62] = new SqlParameter("@P_PADDRESS", objStudAddress.PADDRESS);
                //        objParams[63] = new SqlParameter("@P_PCITY", objStudAddress.PCITY);
                //        objParams[64] = new SqlParameter("@P_PSTATE", objStudAddress.PSTATE);
                //        objParams[65] = new SqlParameter("@P_PDISTRICT", objStudAddress.PDISTRICT);

                //        objParams[66] = new SqlParameter("@P_PTELEPHONE", objStudAddress.PTELEPHONE);
                //        objParams[67] = new SqlParameter("@P_PMOBILE", objStudAddress.PMOBILE);
                //        objParams[68] = new SqlParameter("@P_PPINCODE", objStudAddress.PPINCODE);
                //        objParams[69] = new SqlParameter("@P_PEMAIL", objStudAddress.PEMAIL);
                //        objParams[70] = new SqlParameter("@P_FATHER_DESIG", objStudAddress.FATHER_DESIG);
                //        objParams[71] = new SqlParameter("@P_OCCUPATIONNO", objStudAddress.OCCUPATION);

                //        objParams[72] = new SqlParameter("@P_FATHERJOBDETAIL", objStudAddress.FATHERJOBDETAIL);
                //        objParams[73] = new SqlParameter("@P_MOTHER_DESIG", objStudAddress.MOTHERDESIGNATION);
                //        objParams[74] = new SqlParameter("@P_MOTHER_OCCUPATIONNO", objStudAddress.MOTHEROCCUPATION);
                //        objParams[75] = new SqlParameter("@P_MOTHERJOBDETAIL", objStudAddress.MOTHERJOBDETAIL);

                //        objParams[76] = new SqlParameter("@P_GUARDIANNAME", objStudAddress.GUARDIANNAME);
                //        objParams[77] = new SqlParameter("@P_RELATION_GUARDIAN", objStudAddress.RELATION_GUARDIAN);
                //        objParams[78] = new SqlParameter("@P_GADDRESS", objStudAddress.GADDRESS);
                //        objParams[79] = new SqlParameter("@P_GOCCUPATIONNAME", objStudAddress.GOCCUPATIONNAME);
                //        objParams[80] = new SqlParameter("@P_GPHONE", objStudAddress.GPHONE);
                //        objParams[81] = new SqlParameter("@P_GEMAIL", objStudAddress.GEMAIL);
                //        objParams[82] = new SqlParameter("@P_RAILWAY_STATION", objStudAddress.RAILWAY_STATION);
                //        objParams[83] = new SqlParameter("@P_BUS_STATION", objStudAddress.BUS_STATION);
                //        objParams[84] = new SqlParameter("@P_LOCALNAME_STATION", objStudAddress.LOCALNAME_STATION);

                //        //Student Last Qualification Exam Parameter
                //        objParams[85] = new SqlParameter("@P_QUALIFYNO", objStudQExm.QUALIFYNO);
                //        objParams[86] = new SqlParameter("@P_YEAR_OF_EXAM", objStudent.YearOfExam);
                //        objParams[87] = new SqlParameter("@P_QEXMROLLNO", objStudent.QexmRollNo);
                //        objParams[88] = new SqlParameter("@P_SCHOOL_COLLEGE_NAMEHSSC", objStudQExm.SCHOOL_COLLEGE_NAME);
                //        objParams[89] = new SqlParameter("@P_BOARDHSSC", objStudQExm.BOARD);
                //        objParams[90] = new SqlParameter("@P_GRADEHSSC", objStudQExm.GRADE);
                //        objParams[91] = new SqlParameter("@P_ATTEMPTHSSC", objStudQExm.ATTEMPT);
                //        objParams[92] = new SqlParameter("@P_MERIT_NOHSSC", objStudQExm.MERITNO);
                //        objParams[93] = new SqlParameter("@P_MARKS_OBTAINEDHSSC", objStudQExm.MARKOBTAINED);
                //        objParams[94] = new SqlParameter("@P_OUT_OF_MRKSHSSC", objStudQExm.OUTOFMARK);

                //        objParams[95] = new SqlParameter("@P_ALL_INDIA_RANK", objStudQExm.ALLINDIARANK);
                //        objParams[96] = new SqlParameter("@P_STATE_RANK", objStudQExm.STATERANK);
                //        objParams[97] = new SqlParameter("@P_PERHSSC", objStudQExm.PERCENTAGE);
                //        objParams[98] = new SqlParameter("@P_PERCENTILEHSSC", objStudQExm.PERCENTILE);
                //        objParams[99] = new SqlParameter("@P_HSC_PCM", objStudQExm.HSCPCM);
                //        objParams[100] = new SqlParameter("@P_HSC_PCM_MAX", objStudQExm.HSCPCMMAX);
                //        objParams[101] = new SqlParameter("@P_HSC_BIO", objStudQExm.HSCBIO);
                //        objParams[102] = new SqlParameter("@P_HSC_BIO_MAX", objStudQExm.HSCBIOMAX);
                //        objParams[103] = new SqlParameter("@P_HSC_ENG", objStudQExm.ENG);
                //        objParams[104] = new SqlParameter("@P_HSC_ENG_MAX", objStudQExm.HSCENGMAX);
                //        objParams[105] = new SqlParameter("@P_HSC_MAT", objStudQExm.MATHS);
                //        objParams[106] = new SqlParameter("@P_HSC_MAT_MAX", objStudQExm.MATHSMAX);
                //        objParams[107] = new SqlParameter("@P_HSC_CHE", objStudQExm.HSCCHE);
                //        objParams[108] = new SqlParameter("@P_HSC_CHE_MAX", objStudQExm.HSCCHEMAX1);
                //        objParams[109] = new SqlParameter("@P_HSC_PHY", objStudQExm.HSCPHY1);
                //        objParams[110] = new SqlParameter("@P_HSC_PHY_MAX", objStudQExm.HSCPHYMAX1);

                //        //Student Photo Parameter
                //        objParams[111] = new SqlParameter("@P_PHOTOPATH", objStudPhoto.PhotoPath);
                //        objParams[112] = new SqlParameter("@P_PHOTOSIZE", objStudPhoto.PhotoSize);

                //        if (objStudPhoto.Photo1 == null)
                //            objParams[113] = new SqlParameter("@P_PHOTO", DBNull.Value);
                //        else
                //            objParams[113] = new SqlParameter("@P_PHOTO", objStudPhoto.Photo1);

                //        objParams[113].SqlDbType = SqlDbType.Image;

                //        objParams[114] = new SqlParameter("@P_EMAILID", objStudent.EmailID);
                //        objParams[115] = new SqlParameter("@P_QUALIFYEXAMNAME", objStudent.Qualifyexamname);
                //        objParams[116] = new SqlParameter("@P_PERCENTAGE", objStudent.Percentage);
                //        objParams[117] = new SqlParameter("@P_YEAR_OF_EXAMHSSC", objStudQExm.YEAR_OF_EXAMHSSC);
                //        objParams[118] = new SqlParameter("@P_QEXMROLLNOHSSC", objStudQExm.QEXMROLLNO);
                //        objParams[119] = new SqlParameter("@P_PERCENTILE", objStudent.Percentile);
                //        objParams[120] = new SqlParameter("@P_YEAR_OF_EXAMSSC", objStudQExm.YearOfExamSsc);
                //        objParams[121] = new SqlParameter("@P_SCHOOL_COLLEGE_NAMESSC", objStudQExm.SchoolCollegeNameSsc);
                //        objParams[122] = new SqlParameter("@P_BOARDSSC ", objStudQExm.BoardSsc);
                //        objParams[123] = new SqlParameter("@P_GRADESSC", objStudQExm.GradeSsc);
                //        objParams[124] = new SqlParameter("@P_ATTEMPTSSC", objStudQExm.AttemptSsc);
                //        objParams[125] = new SqlParameter("@P_MARKS_OBTAINEDSSC", objStudQExm.MarksObtainedSsc);
                //        objParams[126] = new SqlParameter("@P_OUT_OF_MRKSSSC", objStudQExm.OutOfMarksSsc);
                //        objParams[127] = new SqlParameter("@P_PERSSC", objStudQExm.PercentageSsc);
                //        objParams[128] = new SqlParameter("@P_PERCENTILESSC", objStudQExm.PercentileSsc);
                //        objParams[129] = new SqlParameter("@P_QEXMROLLNOSSC", objStudQExm.QEXMROLLNOSSC);
                //        objParams[130] = new SqlParameter("@P_ADMQUOTANO", objStudent.ADMQUOTANO);
                //        objParams[131] = new SqlParameter("@P_STUDENTMOBILE", objStudent.StudentMobile);
                //        objParams[132] = new SqlParameter("@P_UANO", objStudent.Uano);
                //        objParams[133] = new SqlParameter("@P_BANKNO", objStudent.BankNo);
                //        objParams[134] = new SqlParameter("@P_ENROLLNO",objStudent.EnrollNo);
                //        objParams[135] = new SqlParameter("@P_OUT", SqlDbType.Int);
                //        objParams[135].Direction = ParameterDirection.Output;

                //        //int status = (Int32)objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUDENT", objParams, true);
                //        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUDENT", objParams, true);

                //        if (objStudent.LastQualifiedExams != null)
                //        {
                //            foreach (QualifiedExam qualExam in objStudent.LastQualifiedExams)
                //            {
                //                this.UpdateLastQualExams(qualExam);
                //            }
                //        }
                //        retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                //        return ret.ToString();

                //        //int status = (Int32)objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUDENT", objParams, true);
                //        //if (status != -99 && objStudent.LastQualifiedExams != null)
                //        //{
                //        //    foreach (QualifiedExam qualExam in objStudent.LastQualifiedExams)
                //        //    {
                //        //        this.UpdateLastQualExams(qualExam);
                //        //    }
                //        //}
                //        //retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                //        //return retStatus;

                //    }
                //    catch (Exception ex)
                //    {
                //        retStatus = Convert.ToInt32(CustomStatus.Error);
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent-> " + ex.ToString());
                //    }
                //}


                //public string AddStudent(Student objStudent, StudentAddress objStudAddress, StudentPhoto objSPhoto, GEC_Student objStud, string IndusEmail, UserAcc objUa)
                //{
                //    string retStatus = string.Empty;
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        //Add New student
                //        objParams = new SqlParameter[75];
                //        objParams[0] = new SqlParameter("@P_rollNo", objStudent.RollNo);
                //        objParams[1] = new SqlParameter("@P_sectionNo", objStudent.SectionNo);
                //        objParams[2] = new SqlParameter("@P_studName", objStudent.StudName);
                //        objParams[3] = new SqlParameter("@P_fatherName", objStudent.FatherName);
                //        objParams[4] = new SqlParameter("@P_motherName ", objStudent.MotherName);
                //        objParams[5] = new SqlParameter("@P_dob", objStudent.Dob);
                //        objParams[6] = new SqlParameter("@P_sex ", objStudent.Sex);
                //        objParams[7] = new SqlParameter("@P_religionNo", objStudent.ReligionNo);
                //        objParams[8] = new SqlParameter("@P_married", objStudent.Married);
                //        objParams[9] = new SqlParameter("@P_nationalityNo", objStudent.NationalityNo);
                //        objParams[10] = new SqlParameter("@P_categoryNo", objStudent.CategoryNo);
                //        objParams[11] = new SqlParameter("@P_admDate", objStudent.AdmDate);
                //        objParams[12] = new SqlParameter("@P_hosteler", objStudent.Hosteler);
                //        objParams[13] = new SqlParameter("@P_degreeNo", objStudent.DegreeNo);
                //        objParams[14] = new SqlParameter("@P_admbatch", objStudent.AdmBatch);
                //        objParams[15] = new SqlParameter("@P_branchNo", objStudent.BranchNo);
                //        objParams[16] = new SqlParameter("@P_Year", objStudent.Year);
                //        objParams[17] = new SqlParameter("@P_semesterNo", objStudent.SemesterNo);
                //        objParams[18] = new SqlParameter("@P_pType", objStudent.PType);
                //        objParams[19] = new SqlParameter("@P_stateNo", objStudent.StateNo);
                //        objParams[20] = new SqlParameter("@P_pAddress", objStudAddress.PADDRESS);
                //        objParams[21] = new SqlParameter("@P_pCity", objStudAddress.PCITY);
                //        objParams[22] = new SqlParameter("@P_pState", objStudAddress.PSTATE);
                //        objParams[23] = new SqlParameter("@P_PPinCode", objStudAddress.PPINCODE);
                //        objParams[24] = new SqlParameter("@P_PTELEPHONE", objStudAddress.PTELEPHONE);
                //        objParams[25] = new SqlParameter("@P_college_Code", objStudent.CollegeCode);
                //        objParams[26] = new SqlParameter("@P_regNo", objStudent.RegNo);
                //        objParams[27] = new SqlParameter("@P_COLLEGE_ID ", objStudent.College_ID);

                //        if (objSPhoto.Photo1 == null)
                //            objParams[28] = new SqlParameter("@P_PHOTO", DBNull.Value);
                //        else
                //            objParams[28] = new SqlParameter("@P_PHOTO", objSPhoto.Photo1);
                //        objParams[28].SqlDbType = SqlDbType.Image;

                //        objParams[29] = new SqlParameter("@P_IDTYPENO", objStudent.IdType);
                //        objParams[30] = new SqlParameter("@P_EXAMPTYPE", objStudent.ExamPtype);
                //        //GCET Details..
                //        //objParams[30] = new SqlParameter("@P_GCETROLLNO", objStud.GECTROLLNO);
                //        //objParams[31] = new SqlParameter("@P_GCETRANK", objStud.GCETRANK);
                //        objParams[31] = new SqlParameter("@P_ADMROUNDNO", objStudent.AdmroundNo);
                //        objParams[32] = new SqlParameter("@P_UANO", objStudent.Uano);
                //        objParams[33] = new SqlParameter("@P_IPADDRESS", objStudent.IPADDRESS);
                //        //add AdmCaste and current session
                //        objParams[34] = new SqlParameter("@P_ADMCATEGORYNO", objStudent.AdmCategoryNo);
                //        //objParams[34] = new SqlParameter("@P_SESSIONNO", objStudent.SessionNo);
                //        //ENTRANCE EXAM
                //        objParams[35] = new SqlParameter("@P_QEXMROLLNO", objStudent.QexmRollNo);
                //        objParams[36] = new SqlParameter("@P_STATE_RANK", objStudent.STATERANK);
                //        objParams[37] = new SqlParameter("@P_ALL_INDIA_RANK", objStudent.ALLINDIARANK);
                //        objParams[38] = new SqlParameter("@P_YEAR_OF_EXAM", objStudent.YearOfExam);
                //        objParams[39] = new SqlParameter("@P_PERCENTAGE", objStudent.Percentage);
                //        objParams[40] = new SqlParameter("@P_PERCENTILE", objStudent.PERCENTILE);
                //        objParams[41] = new SqlParameter("@P_QUALIFYNO", objStudent.QUALIFYNO);

                //        objParams[42] = new SqlParameter("@P_EMILID", objStudent.EmailID);
                //        objParams[43] = new SqlParameter("@P_LADDRESS", objStudAddress.LADDRESS);
                //        objParams[44] = new SqlParameter("@P_LTELEPHONE", objStudAddress.LTELEPHONE);
                //        objParams[45] = new SqlParameter("@P_LMOBILE", objStudAddress.LMOBILE);
                //        objParams[46] = new SqlParameter("@P_LEMAIL", objStudAddress.LEMAIL);
                //        objParams[47] = new SqlParameter("@P_ADMQUOTANO", objStudent.ADMQUOTANO);
                //        objParams[48] = new SqlParameter("@P_BLOODGRPNO", objStudent.BloodGroupNo);
                //        objParams[49] = new SqlParameter("@P_LCITY", objStudAddress.LCITY);
                //        objParams[50] = new SqlParameter("@P_LSTATE", objStudAddress.LSTATE);
                //        objParams[51] = new SqlParameter("@P_GATESCHOLARSHIP", objStudent.GetScholarship);
                //        objParams[52] = new SqlParameter("@P_PHDSTATUS", objStudent.PhdStatus);
                //        objParams[53] = new SqlParameter("@P_PHDSUPERVISORNO", objStudent.PhdSupervisorNo);
                //        objParams[54] = new SqlParameter("@P_PHDCOSUPERVISORNO1", objStudent.PhdCoSupervisorNo1);
                //        objParams[55] = new SqlParameter("@P_PHDCOSUPERVISORNO2", objStudent.PhdCoSupervisorNo2);
                //        objParams[56] = new SqlParameter("@P_TYPESUPERVISOR", objStudent.TypeSupervisorNo);
                //        objParams[57] = new SqlParameter("@P_TYPECOSUPERVISOR1", objStudent.TypeCoSupervisorNo1);
                //        objParams[58] = new SqlParameter("@P_TYPECOSUPERVISOR2", objStudent.TypeCoSupervisorNo2);
                //        objParams[59] = new SqlParameter("@P_NET", objStudent.Net);

                //        if (objSPhoto.SignPhoto == null)
                //            objParams[60] = new SqlParameter("@P_SIGNPHOTO", DBNull.Value);
                //        else
                //            objParams[60] = new SqlParameter("@P_SIGNPHOTO", objSPhoto.SignPhoto);
                //        objParams[60].SqlDbType = SqlDbType.Image;
                //        objParams[61] = new SqlParameter("@P_PH", objStudent.PH);
                //        objParams[62] = new SqlParameter("@P_studMiddleName", objStudent.MiddleName);
                //        objParams[63] = new SqlParameter("@P_studLastName", objStudent.LastName);
                //        objParams[64] = new SqlParameter("@P_fatherMiddleName", objStudent.FatherMiddleName);
                //        objParams[65] = new SqlParameter("@P_fatherLastName", objStudent.FatherLastName);
                //        objParams[66] = new SqlParameter("@P_STUDENTMOBILE", objStudent.StudentMobile);
                //        objParams[67] = new SqlParameter("@P_PMOBILE", objStudAddress.PMOBILE);
                //        objParams[68] = new SqlParameter("@P_IUEMAIL", IndusEmail);
                //        objParams[69] = new SqlParameter("@P_DOR", objStudent.DOR);
                //        objParams[70] = new SqlParameter("@P_PASSWORD", objUa.UA_Pwd);
                //        objParams[71] = new SqlParameter("@P_QUALEXM", objStud.Qualifyexamname);
                //        objParams[72] = new SqlParameter("@P_CLAIMID", objStudent.ClaimType);
                //        objParams[73] = new SqlParameter("@P_DOCIMILE", objStudent.CountryDomicile);
                //        objParams[74] = new SqlParameter("@P_REGOUT", SqlDbType.NVarChar, 25);
                //        objParams[74].Direction = ParameterDirection.Output;

                //        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_STUDENT_INFO", objParams, true);

                //        //if (ret.ToString().Equals("-99"))
                //        //    retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                //        //else
                //        //    retStatus = Convert.ToInt32(ret);
                //        retStatus = ret.ToString();

                //    }
                //    catch (Exception ex)
                //    {
                //        retStatus = "0";
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddStudent-> " + ex.ToString());
                //    }

                //    return retStatus;
                //}

                //ADDED ON[03-01-2017]FOR STUDENT STRENGTH EXCEL SHEET
                /// <summary>
                /// updated by Saurabh S
                /// </summary>
                /// <param name="SESSIONNO"></param>
                /// <param name="GROUPCOLUMNS"></param>
                /// <param name="AcademicYear">Added by Saurabh S</param>
                /// <returns></returns>
                public DataSet GetStudentStrengthDetails(int SESSIONNO, string GROUPCOLUMNS, int AcademicYear)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", SESSIONNO);
                        objParams[1] = new SqlParameter("@P_GROUPCOLUMNS", GROUPCOLUMNS);
                        objParams[2] = new SqlParameter("@P_ACADEMIC_YEAR_ID", AcademicYear);
                        ds = objSQLHelper.ExecuteDataSetSP("PR_STUDENT_POSITION_SUMMARY", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentStrengthDetails() -->" + ex.ToString());
                    }
                    return ds;
                }

                //public string AddStudent(Student objStudent, StudentAddress objStudAddress, StudentPhoto objSPhoto, GEC_Student objStud)
                //{
                //    string retStatus = string.Empty;
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        //Add New student
                //        objParams = new SqlParameter[60];
                //        objParams[0] = new SqlParameter("@P_rollNo", objStudent.RollNo);
                //        objParams[1] = new SqlParameter("@P_sectionNo", objStudent.SectionNo);
                //        objParams[2] = new SqlParameter("@P_studName", objStudent.StudName);
                //        objParams[3] = new SqlParameter("@P_fatherName", objStudent.FatherName);
                //        objParams[4] = new SqlParameter("@P_motherName ", objStudent.MotherName);
                //        objParams[5] = new SqlParameter("@P_dob", objStudent.Dob);
                //        objParams[6] = new SqlParameter("@P_sex ", objStudent.Sex);
                //        objParams[7] = new SqlParameter("@P_religionNo", objStudent.ReligionNo);
                //        objParams[8] = new SqlParameter("@P_married", objStudent.Married);
                //        objParams[9] = new SqlParameter("@P_nationalityNo", objStudent.NationalityNo);
                //        objParams[10] = new SqlParameter("@P_categoryNo", objStudent.CategoryNo);
                //        objParams[11] = new SqlParameter("@P_admDate", objStudent.AdmDate);
                //        objParams[12] = new SqlParameter("@P_hosteler", objStudent.Hosteler);
                //        objParams[13] = new SqlParameter("@P_degreeNo", objStudent.DegreeNo);
                //        objParams[14] = new SqlParameter("@P_admbatch", objStudent.AdmBatch);
                //        objParams[15] = new SqlParameter("@P_branchNo", objStudent.BranchNo);
                //        objParams[16] = new SqlParameter("@P_Year", objStudent.Year);
                //        objParams[17] = new SqlParameter("@P_semesterNo", objStudent.SemesterNo);
                //        objParams[18] = new SqlParameter("@P_pType", objStudent.PType);
                //        objParams[19] = new SqlParameter("@P_stateNo", objStudent.StateNo);
                //        objParams[20] = new SqlParameter("@P_pAddress", objStudAddress.PADDRESS);
                //        objParams[21] = new SqlParameter("@P_pCity", objStudAddress.PCITY);
                //        objParams[22] = new SqlParameter("@P_pState", objStudAddress.PSTATE);
                //        objParams[23] = new SqlParameter("@P_PPinCode", objStudAddress.PPINCODE);
                //        objParams[24] = new SqlParameter("@P_PTELEPHONE", objStudAddress.PTELEPHONE);
                //        objParams[25] = new SqlParameter("@P_college_Code", objStudent.CollegeCode);
                //        objParams[26] = new SqlParameter("@P_regNo", objStudent.RegNo);
                //        objParams[27] = new SqlParameter("@P_photo", objSPhoto.Photo1);
                //        objParams[28] = new SqlParameter("@P_IDTYPENO", objStudent.IdType);
                //        objParams[29] = new SqlParameter("@P_EXAMPTYPE", objStudent.ExamPtype);
                //        //GCET Details..
                //        //objParams[30] = new SqlParameter("@P_GCETROLLNO", objStud.GECTROLLNO);
                //        //objParams[31] = new SqlParameter("@P_GCETRANK", objStud.GCETRANK);
                //        objParams[30] = new SqlParameter("@P_ADMROUNDNO", objStudent.AdmroundNo);
                //        objParams[31] = new SqlParameter("@P_UANO", objStudent.Uano);
                //        objParams[32] = new SqlParameter("@P_IPADDRESS", objStudent.IPADDRESS);
                //        //add AdmCaste and current session
                //        objParams[33] = new SqlParameter("@P_ADMCATEGORYNO", objStudent.AdmCategoryNo);
                //        //objParams[34] = new SqlParameter("@P_SESSIONNO", objStudent.SessionNo);
                //        //ENTRANCE EXAM
                //        objParams[34] = new SqlParameter("@P_QEXMROLLNO", objStudent.QexmRollNo);
                //        objParams[35] = new SqlParameter("@P_STATE_RANK", objStudent.STATERANK);
                //        objParams[36] = new SqlParameter("@P_ALL_INDIA_RANK", objStudent.ALLINDIARANK);
                //        objParams[37] = new SqlParameter("@P_YEAR_OF_EXAM", objStudent.YearOfExam);
                //        objParams[38] = new SqlParameter("@P_PERCENTAGE", objStudent.Percentage);
                //        objParams[39] = new SqlParameter("@P_PERCENTILE", objStudent.PERCENTILE);
                //        objParams[40] = new SqlParameter("@P_QUALIFYNO", objStudent.QUALIFYNO);

                //        objParams[41] = new SqlParameter("@P_EMILID", objStudent.EmailID);
                //        objParams[42] = new SqlParameter("@P_LADDRESS", objStudAddress.LADDRESS);
                //        objParams[43] = new SqlParameter("@P_LTELEPHONE", objStudAddress.LTELEPHONE);
                //        objParams[44] = new SqlParameter("@P_LMOBILE", objStudAddress.LMOBILE);
                //        objParams[45] = new SqlParameter("@P_LEMAIL", objStudAddress.LEMAIL);
                //        objParams[46] = new SqlParameter("@P_ADMQUOTANO", objStudent.ADMQUOTANO);
                //        objParams[47] = new SqlParameter("@P_BLOODGRPNO", objStudent.BloodGroupNo);
                //        objParams[48] = new SqlParameter("@P_LCITY", objStudAddress.LCITY);
                //        objParams[49] = new SqlParameter("@P_LSTATE", objStudAddress.LSTATE);
                //        objParams[50] = new SqlParameter("@P_GATESCHOLARSHIP", objStudent.GetScholarship);
                //        objParams[51] = new SqlParameter("@P_PHDSTATUS", objStudent.PhdStatus);
                //        objParams[52] = new SqlParameter("@P_PHDSUPERVISORNO", objStudent.PhdSupervisorNo);
                //        objParams[53] = new SqlParameter("@P_PHDCOSUPERVISORNO1", objStudent.PhdCoSupervisorNo1);
                //        objParams[54] = new SqlParameter("@P_PHDCOSUPERVISORNO2", objStudent.PhdCoSupervisorNo2);
                //        objParams[55] = new SqlParameter("@P_TYPESUPERVISOR", objStudent.TypeSupervisorNo);
                //        objParams[56] = new SqlParameter("@P_TYPECOSUPERVISOR1", objStudent.TypeCoSupervisorNo1);
                //        objParams[57] = new SqlParameter("@P_TYPECOSUPERVISOR2", objStudent.TypeCoSupervisorNo2);
                //        objParams[58] = new SqlParameter("@P_NET", objStudent.Net);


                //        objParams[59] = new SqlParameter("@P_REGOUT", SqlDbType.NVarChar, 25);
                //        objParams[59].Direction = ParameterDirection.Output;

                //        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_STUDENT_INFO", objParams, true);

                //        //if (ret.ToString().Equals("-99"))
                //        //    retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                //        //else
                //        //    retStatus = Convert.ToInt32(ret);
                //        retStatus = ret.ToString();

                //    }
                //    catch (Exception ex)
                //    {
                //        retStatus = "0";
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddStudent-> " + ex.ToString());
                //    }

                //    return retStatus;
                //}

                //public DataTableReader GetStudentDetails(int idno)
                //{
                //    DataTableReader dtr = null;

                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        objParams = new SqlParameter[1];
                //        objParams[0] = new SqlParameter("@P_IDNO", idno);

                //        dtr = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_BYID", objParams).Tables[0].CreateDataReader();

                //    }
                //    catch (Exception ex)
                //    {
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                //    }
                //    return dtr;
                //}

                public DataSet GetStudentInfoDocumentListByEnrollNo(string ENROLLNO)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[] 
                { 
                    new SqlParameter("@P_ENROLLNO ", ENROLLNO)
                };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_STUDENT_DOCUMENT_LIST_GET_STUDENT_INFO", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.FeeCollectionController.GetStudentInfoDocumentListByEnrollNo() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                /// <summary>
                /// Modified by :- Rita Munde on Date 06052019
                /// </summary>
                /// <param name="objStudent"></param>
                /// <param name="objStudAddress"></param>
                /// <param name="objSPhoto"></param>
                /// <param name="objStud"></param>
                /// <param name="IndusEmail"></param>
                /// <param name="objUa"></param>
                /// <returns></returns>
                public string AddStudent(Student objStudent, StudentAddress objStudAddress, StudentPhoto objSPhoto, GEC_Student objStud, string IndusEmail, UserAcc objUa)
                {
                    string retStatus = string.Empty;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Add New student
                        objParams = new SqlParameter[83];
                        objParams[0] = new SqlParameter("@P_rollNo", objStudent.RollNo);
                        objParams[1] = new SqlParameter("@P_sectionNo", objStudent.SectionNo);
                        objParams[2] = new SqlParameter("@P_studName", objStudent.StudName);
                        objParams[3] = new SqlParameter("@P_fatherName", objStudent.FatherName);
                        objParams[4] = new SqlParameter("@P_motherName ", objStudent.MotherName);
                        //objParams[5] = new SqlParameter("@P_dob", objStudent.Dob);
                        if (objStudent.Dob == null)///Added by Irfan Shaikh on 20190405
                            objParams[5] = new SqlParameter("@P_dob", DBNull.Value);
                        else
                            objParams[5] = new SqlParameter("@P_dob", objStudent.Dob);

                        objParams[6] = new SqlParameter("@P_sex ", objStudent.Sex);
                        objParams[7] = new SqlParameter("@P_religionNo", objStudent.ReligionNo);
                        objParams[8] = new SqlParameter("@P_married", objStudent.Married);
                        objParams[9] = new SqlParameter("@P_nationalityNo", objStudent.NationalityNo);
                        objParams[10] = new SqlParameter("@P_categoryNo", objStudent.CategoryNo);

                        if (objStudent.AdmDate == null)///Added by Rita on 20190506
                            objParams[11] = new SqlParameter("@P_ADMDATE", DBNull.Value);
                        else
                            objParams[11] = new SqlParameter("@P_ADMDATE", objStudent.AdmDate);
                        //objParams[11] = new SqlParameter("@P_admDate", objStudent.AdmDate);

                        objParams[12] = new SqlParameter("@P_hosteler", objStudent.Hosteler);
                        objParams[13] = new SqlParameter("@P_degreeNo", objStudent.DegreeNo);
                        objParams[14] = new SqlParameter("@P_admbatch", objStudent.AdmBatch);
                        objParams[15] = new SqlParameter("@P_branchNo", objStudent.BranchNo);
                        objParams[16] = new SqlParameter("@P_Year", objStudent.Year);
                        objParams[17] = new SqlParameter("@P_semesterNo", objStudent.SemesterNo);
                        objParams[18] = new SqlParameter("@P_pType", objStudent.PType);
                        objParams[19] = new SqlParameter("@P_stateNo", objStudent.StateNo);
                        objParams[20] = new SqlParameter("@P_pAddress", objStudAddress.PADDRESS);
                        objParams[21] = new SqlParameter("@P_pCity", objStudAddress.PCITY);
                        objParams[22] = new SqlParameter("@P_pState", objStudAddress.PSTATE);
                        objParams[23] = new SqlParameter("@P_PPinCode", objStudAddress.PPINCODE);
                        objParams[24] = new SqlParameter("@P_PTELEPHONE", objStudAddress.PTELEPHONE);
                        objParams[25] = new SqlParameter("@P_college_Code", objStudent.CollegeCode);
                        objParams[26] = new SqlParameter("@P_regNo", objStudent.RegNo);
                        objParams[27] = new SqlParameter("@P_COLLEGE_ID ", objStudent.College_ID);

                        if (objSPhoto.Photo1 == null)
                            objParams[28] = new SqlParameter("@P_PHOTO", DBNull.Value);
                        else
                            objParams[28] = new SqlParameter("@P_PHOTO", objSPhoto.Photo1);
                        objParams[28].SqlDbType = SqlDbType.Image;

                        objParams[29] = new SqlParameter("@P_IDTYPENO", objStudent.IdType);
                        objParams[30] = new SqlParameter("@P_EXAMPTYPE", objStudent.ExamPtype);
                        //GCET Details..
                        //objParams[30] = new SqlParameter("@P_GCETROLLNO", objStud.GECTROLLNO);
                        //objParams[31] = new SqlParameter("@P_GCETRANK", objStud.GCETRANK);
                        objParams[31] = new SqlParameter("@P_ADMROUNDNO", objStudent.AdmroundNo);
                        objParams[32] = new SqlParameter("@P_UANO", objStudent.Uano);
                        objParams[33] = new SqlParameter("@P_IPADDRESS", objStudent.IPADDRESS);
                        //add AdmCaste and current session
                        objParams[34] = new SqlParameter("@P_ADMCATEGORYNO", objStudent.AdmCategoryNo);
                        //objParams[34] = new SqlParameter("@P_SESSIONNO", objStudent.SessionNo);
                        //ENTRANCE EXAM
                        objParams[35] = new SqlParameter("@P_QEXMROLLNO", objStudent.QexmRollNo);
                        objParams[36] = new SqlParameter("@P_STATE_RANK", objStudent.STATERANK);
                        objParams[37] = new SqlParameter("@P_ALL_INDIA_RANK", objStudent.ALLINDIARANK);
                        objParams[38] = new SqlParameter("@P_YEAR_OF_EXAM", objStudent.YearOfExam);
                        objParams[39] = new SqlParameter("@P_PERCENTAGE", objStudent.Percentage);
                        objParams[40] = new SqlParameter("@P_PERCENTILE", objStudent.PERCENTILE);
                        objParams[41] = new SqlParameter("@P_QUALIFYNO", objStudent.QUALIFYNO);

                        objParams[42] = new SqlParameter("@P_EMILID", objStudent.EmailID);
                        objParams[43] = new SqlParameter("@P_LADDRESS", objStudAddress.LADDRESS);
                        objParams[44] = new SqlParameter("@P_LTELEPHONE", objStudAddress.LTELEPHONE);
                        objParams[45] = new SqlParameter("@P_LMOBILE", objStudAddress.LMOBILE);
                        objParams[46] = new SqlParameter("@P_LEMAIL", objStudAddress.LEMAIL);
                        objParams[47] = new SqlParameter("@P_ADMQUOTANO", objStudent.ADMQUOTANO);
                        objParams[48] = new SqlParameter("@P_BLOODGRPNO", objStudent.BloodGroupNo);
                        objParams[49] = new SqlParameter("@P_LCITY", objStudAddress.LCITY);
                        objParams[50] = new SqlParameter("@P_LSTATE", objStudAddress.LSTATE);
                        objParams[51] = new SqlParameter("@P_GATESCHOLARSHIP", objStudent.GetScholarship);
                        objParams[52] = new SqlParameter("@P_PHDSTATUS", objStudent.PhdStatus);
                        objParams[53] = new SqlParameter("@P_PHDSUPERVISORNO", objStudent.PhdSupervisorNo);
                        objParams[54] = new SqlParameter("@P_PHDCOSUPERVISORNO1", objStudent.PhdCoSupervisorNo1);
                        objParams[55] = new SqlParameter("@P_PHDCOSUPERVISORNO2", objStudent.PhdCoSupervisorNo2);
                        objParams[56] = new SqlParameter("@P_TYPESUPERVISOR", objStudent.TypeSupervisorNo);
                        objParams[57] = new SqlParameter("@P_TYPECOSUPERVISOR1", objStudent.TypeCoSupervisorNo1);
                        objParams[58] = new SqlParameter("@P_TYPECOSUPERVISOR2", objStudent.TypeCoSupervisorNo2);
                        objParams[59] = new SqlParameter("@P_NET", objStudent.Net);

                        if (objSPhoto.SignPhoto == null)
                            objParams[60] = new SqlParameter("@P_SIGNPHOTO", DBNull.Value);
                        else
                            objParams[60] = new SqlParameter("@P_SIGNPHOTO", objSPhoto.SignPhoto);
                        objParams[60].SqlDbType = SqlDbType.Image;
                        objParams[61] = new SqlParameter("@P_PH", objStudent.PH);
                        objParams[62] = new SqlParameter("@P_studMiddleName", objStudent.MiddleName);
                        objParams[63] = new SqlParameter("@P_studLastName", objStudent.LastName);
                        objParams[64] = new SqlParameter("@P_fatherMiddleName", objStudent.FatherMiddleName);
                        objParams[65] = new SqlParameter("@P_fatherLastName", objStudent.FatherLastName);
                        objParams[66] = new SqlParameter("@P_STUDENTMOBILE", objStudent.StudentMobile);
                        objParams[67] = new SqlParameter("@P_PMOBILE", objStudAddress.PMOBILE);
                        objParams[68] = new SqlParameter("@P_IUEMAIL", IndusEmail);

                        if (objStudent.DOR == null)///Added by Rita on 20190427
                            objParams[69] = new SqlParameter("@P_DOR", DBNull.Value);
                        else
                            objParams[69] = new SqlParameter("@P_DOR", objStudent.DOR);

                        //objParams[69] = new SqlParameter("@P_DOR", objStudent.DOR);

                        objParams[70] = new SqlParameter("@P_PASSWORD", objUa.UA_Pwd);
                        objParams[71] = new SqlParameter("@P_QUALEXM", objStud.Qualifyexamname);
                        objParams[72] = new SqlParameter("@P_CLAIMID", objStudent.ClaimType);
                        objParams[73] = new SqlParameter("@P_DOCIMILE", objStudent.CountryDomicile);
                        objParams[74] = new SqlParameter("@P_COLJSS", objStudent.CollegeJss);
                        objParams[75] = new SqlParameter("@P_CETOREDRNO", objStudent.Cetorderno);
                        objParams[76] = new SqlParameter("@P_CETDATE", objStudent.Cetdate);
                        objParams[77] = new SqlParameter("@P_FEECET", objStudent.Cetamount);
                        objParams[78] = new SqlParameter("@P_AADHAAR_NO", objStudent.AddharcardNo); //Added by Irfan Shaikh on 2019/04/09
                        objParams[79] = new SqlParameter("@P_HOSTELSTS", objStudent.HostelSts);
                        objParams[80] = new SqlParameter("@P_TRANSPORTTATION", objStudent.Transportation);
                        objParams[81] = new SqlParameter("@P_TRANSSTS", objStudent.TransportSts);
                        objParams[82] = new SqlParameter("@P_REGOUT", SqlDbType.NVarChar, 25);
                        objParams[82].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_STUDENT_INFO", objParams, true);
                        retStatus = ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = "0";
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddStudent-> " + ex.ToString());
                    }

                    return retStatus;
                }

                public int InsertDocumenttype(int studid, string docid, string chkOriCopy)
                {

                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_IDNO", studid);
                        objParams[1] = new SqlParameter("@P_DOCUMENTNO", docid);
                        objParams[2] = new SqlParameter("@P_ORICOPY", chkOriCopy);

                        objParams[3] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[3].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INSERT_DOCUMENT", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        else if (Convert.ToInt32(ret) == 2)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.ACADEMIC.ANSWERSHEET.StudentController-> " + ex.ToString());
                    }

                    return retStatus;
                }

                public int Insert_Update_StudentDocuments(int idno, int hiddtudocno, int chkDocuments, string extension, string contentType, byte[] document)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[7];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_STU_DOC_NO", hiddtudocno);
                        objParams[2] = new SqlParameter("@P_CHK", chkDocuments);
                        objParams[3] = new SqlParameter("@P_EXTENSION", extension);
                        objParams[4] = new SqlParameter("@P_CONTENTTYPE", contentType);
                        objParams[5] = new SqlParameter("@P_FILEDATA", document);
                        objParams[6] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[6].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INSERT_UPDATE_STUDENT_FILE_UPLOAD_DOCUMENT", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        else if (Convert.ToInt32(ret) == 2)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.Insert_Update_StudentDocuments-> " + ex.ToString());
                    }
                    return retStatus;

                }


                public DataSet RetrieveStudentDetails(string search, string category)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_SEARCHSTRING", search);
                        objParams[1] = new SqlParameter("@P_SEARCH", category);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_SEARCH_STUDENT", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.RetrieveEmpDetails-> " + ex.ToString());
                    }
                    return ds;
                }

                public int GetStudentFeeStatus(int degreeno, int batchno, int paytypeno)
                {
                    int ret = 0;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[1] = new SqlParameter("@P_BATCHNO", batchno);
                        objParams[2] = new SqlParameter("@P_PAYTYPENO", paytypeno);

                        ret = Convert.ToInt32(objSQLHelper.ExecuteScalarSP("PKG_STUDENT_STDFEE", objParams));

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentFeeStatus->" + ex.ToString());
                    }
                    return ret;
                }

                public bool GetStudentRegNoStatus(bool autogenerate)
                {
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[0];

                        autogenerate = Convert.ToBoolean(objSQLHelper.ExecuteScalarSP("PKG_STUDENT_SP_REGNO_STUDENT", objParams));

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentRegNo->" + ex.ToString());
                    }
                    return autogenerate;

                }

                public SqlDataReader GetAllStudentAdmitted(DateTime startdate, DateTime enddate, string ugpgot)
                {
                    SqlDataReader dr = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_STARTDATE", startdate);
                        objParams[1] = new SqlParameter("@P_ENDDATE", enddate);
                        objParams[2] = new SqlParameter("@P_UGPGOT", ugpgot);

                        dr = objSQLHelper.ExecuteReaderSP("PKG_ACAD_ALL_BRANCH_ALLYRTOTAL", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetAllStudentAdmitted-> " + ex.ToString());
                    }

                    return dr;
                }

                public SqlDataReader GetFirstYrStudentAdmitted(int categoryno, int branchno, string shortname, DateTime startdate, DateTime enddate, string ugpgot)
                {
                    SqlDataReader dr = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_CATEGORYNO", categoryno);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_SHORTNAME", shortname);
                        objParams[3] = new SqlParameter("@P_STARTDATE", startdate);
                        objParams[4] = new SqlParameter("@P_ENDDATE", enddate);

                        dr = objSQLHelper.ExecuteReaderSP("PKG_ACAD_ALL_BRANCH_FIRSTYRTOTAL", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetFirstYrStudentAdmitted-> " + ex.ToString());
                    }

                    return dr;
                }

                public int GetTotalNoStudents(int sessionno, int schemeno, int coursecode)
                {
                    int retTot = 0;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_SCHEMENo", schemeno);
                        objParams[2] = new SqlParameter("@P_COURSECODE", coursecode);
                        objParams[3] = new SqlParameter("@P_CNT", SqlDbType.Int);
                        objParams[3].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteScalarSP("PKG_STUDENT_SP_RET_TOTSTUDENTS", objParams);
                        //if (objParams[3].Value != null)
                        retTot = Convert.ToInt32(objParams[3].Value);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetTotalNoStudents-> " + ex.ToString());
                    }
                    return retTot;
                }

                public DataSet GetStudentsForScheme(int batchno, int branchno, int semno, int flag, int branchindex, int semindex)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_ADMBATCHNO", batchno);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_SEMNO", semno);
                        objParams[3] = new SqlParameter("@P_FLAG", flag);
                        objParams[4] = new SqlParameter("@P_BRANCHINDEX", branchindex);
                        objParams[5] = new SqlParameter("@P_SEMINDEX", semindex);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_FORSCHEME", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForScheme-> " + ex.ToString());
                    }

                    return ds;
                }

                public int UpdateSchemes(Student_Acd objStudent)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_SCHEMENO", objStudent.SchemeNo);
                        objParams[1] = new SqlParameter("@P_IDNO", objStudent.StudId);
                        objParams[2] = new SqlParameter("@P_SEM", objStudent.Sem);
                        objParams[3] = new SqlParameter("@P_FLAG", SqlDbType.Int);
                        objParams[3].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUDENTSCHEME", objParams, true);
                        if (ret != null)
                            retStatus = Convert.ToInt32(ret);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateSchemes-> " + ex.ToString());
                    }
                    return retStatus;
                }

                public DataSet GetStudentsForTeacherAllotmentOld(int session, int scheme, int courseno, string fromrollno, string torollno, string rollnos, int subid, int batch)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[8];
                        objParams[0] = new SqlParameter("@P_SESSION", session);
                        objParams[1] = new SqlParameter("@P_SCHEME", scheme);
                        objParams[2] = new SqlParameter("@P_COURSENO", courseno);
                        objParams[3] = new SqlParameter("@P_FROMROLLNO", fromrollno);
                        objParams[4] = new SqlParameter("@P_TOROLLNO", torollno);
                        objParams[5] = new SqlParameter("@P_ROLLNOS", rollnos);
                        objParams[6] = new SqlParameter("@P_SUBID", subid);
                        objParams[7] = new SqlParameter("@P_BATCH", batch);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_TEACHERALLOTMENT", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForTeacherAllotment-> " + ex.ToString());
                    }

                    return ds;
                }

                public DataSet GetStudentsForTeacherAllotment(int sessionno, int schemeno, int courseno, int sectionno, int semesterno, int thpr, int batchno, int College_ID, int isTutorial)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[9];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[2] = new SqlParameter("@P_COURSENO", courseno);
                        objParams[3] = new SqlParameter("@P_SECTIONNO", sectionno);
                        objParams[4] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[5] = new SqlParameter("@P_THPR", thpr);
                        objParams[6] = new SqlParameter("@P_BATCHNO", batchno);
                        objParams[7] = new SqlParameter("@P_COLLEGE_ID", College_ID);
                        objParams[8] = new SqlParameter("@P_ISTUTORIAL", isTutorial);//Added by Dileep Kare on 28.01.2022

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_TEACHERALLOTMENT", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForTeacherAllotment-> " + ex.ToString());
                    }

                    return ds;
                }

                public int UpdateStudent_TeachAllot(Student_Acd objStudent, int OrgId)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[13]; objParams[0] = new SqlParameter("@P_SESSIONNO", objStudent.SessionNo);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", objStudent.SchemeNo);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", objStudent.Sem);
                        objParams[3] = new SqlParameter("@P_SECTIONNO", objStudent.Sectionno);
                        objParams[4] = new SqlParameter("@P_COURSENO", objStudent.CourseNo);
                        objParams[5] = new SqlParameter("@P_UA_NO", objStudent.UA_No);
                        objParams[6] = new SqlParameter("@P_STUDID", objStudent.StudId);
                        objParams[7] = new SqlParameter("@P_TH_PR", objStudent.Th_Pr);
                        objParams[8] = new SqlParameter("@P_ISTUTORIAL", objStudent.isTutorial);//Added by Dieep Kare on 28.01.2022
                        objParams[9] = new SqlParameter("@P_ORGID", OrgId);
                        objParams[10] = new SqlParameter("@P_SUBMITTEDBY", Convert.ToInt32(System.Web.HttpContext.Current.Session["userno"]));
                        objParams[11] = new SqlParameter("@P_IPADDRESS", System.Web.HttpContext.Current.Session["ipAddress"].ToString());
                        objParams[12] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[12].Direction = ParameterDirection.Output; object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_BYFACULTY", objParams, false);
                        if (ret != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent_TeachAllot-> " + ex.ToString());
                    }
                    return retStatus;
                }
                //public int UpdateStudent_TeachAllot(Student_Acd objStudent)
                //{
                //    int retStatus = Convert.ToInt32(CustomStatus.Others);
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = new SqlParameter[8];
                //        objParams[0] = new SqlParameter("@P_FACULTY", objStudent.UA_No);//Ua_no1);
                //        objParams[1] = new SqlParameter("@P_SCHEME", objStudent.SchemeNo);
                //        objParams[2] = new SqlParameter("@P_SESSION", objStudent.SessionNo);
                //        objParams[3] = new SqlParameter("@P_COURSENO", objStudent.CourseNo);
                //        objParams[4] = new SqlParameter("@P_SUBID", objStudent.Th_Pr);
                //        objParams[5] = new SqlParameter("@P_STUDID", objStudent.StudId);
                //        objParams[6] = new SqlParameter("@P_ADTEACHER", objStudent.AdTeacher); ;
                //        objParams[7] = new SqlParameter("@P_OUT", SqlDbType.Int);
                //        objParams[7].Direction = ParameterDirection.Output;

                //        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_BYFACULTY", objParams, false);
                //        if (ret != null)
                //            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                //    }
                //    catch (Exception ex)
                //    {
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent_TeachAllot-> " + ex.ToString());
                //    }
                //    return retStatus;
                //}

                /// <summary>
                /// This method is used to get student.
                /// </summary>
                /// <param name="facno">Gets student as per this facno</param>
                /// <param name="batch">Gets student as per this batch</param>
                /// <param name="branch">Gets student as per this branch</param>
                /// <param name="sem">Gets student as per this sem</param>
                /// <param name="sectionno">Gets student as per this sectionno</param>
                /// <param name="flag">Gets student as per this flag</param>
                /// <param name="rb">Gets student as per this rb</param>
                /// <returns>DataSet</returns>          
                public DataSet GetStudentForFaculty(int facno, int branchno, int sem, int degreeno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_FAC", facno);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_SEM", sem);
                        objParams[3] = new SqlParameter("@P_DEGREENO", degreeno);


                        //objParams[1] = new SqlParameter("@P_BRANCH", branch);
                        //objParams[2] = new SqlParameter("@P_BATCH", batch);
                        //objParams[3] = new SqlParameter("@P_SEM", sem);
                        //objParams[4] = new SqlParameter("@P_SECTIONNO", sectionno);
                        //objParams[5] = new SqlParameter("@P_FLAG", flag);
                        //objParams[6] = new SqlParameter("@P_RB", rb);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_FOR_FA", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentForFaculty-> " + ex.ToString());
                    }
                    return ds;
                }

                public int UpdateStudent_FacultAllot(Student objStudent)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[3];
                        //objParams[0] = new SqlParameter("@P_ADMYEAR", objStudent.BatchNo);
                        //objParams[1] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                        //objParams[2] = new SqlParameter("@P_SEMESTERNO ", objStudent.SemesterNo);
                        //objParams[3] = new SqlParameter("@P_SECTIONNO", objStudent.SectionNo);
                        objParams[0] = new SqlParameter("@P_STUDID", objStudent.StudId);
                        objParams[1] = new SqlParameter("@P_FACULTYADVISOR", objStudent.FacAdvisor);
                        objParams[2] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[2].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_BYFACULTY_ADVISOR", objParams, false);
                        if (ret != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent_TeachAllot-> " + ex.ToString());
                    }
                    return retStatus;
                }

                public DataSet GetStudentForCOEByScheme(int sessionno, int schemeno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_PREREGIST_SP_RET_ALL_STUDENTS_BYCOE", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentForCOEByScheme-> " + ex.ToString());
                    }
                    return ds;
                }

                private void UpdateLastQualExams(QualifiedExam qualExam)
                {
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[] 
                        { 
                            new SqlParameter("@P_IDNO", qualExam.Idno),
                            new SqlParameter("@P_QUALIFYNO", qualExam.Qualifyno),
                            new SqlParameter("@P_YEAR_OF_EXAMHSSC", qualExam.Year_of_exam),
                            new SqlParameter("@P_SCHOOL_COLLEGE_NAME", qualExam.School_college_name),
                            new SqlParameter("@P_BOARD", qualExam.Board),
                            new SqlParameter("@P_GRADE", qualExam.Grade),
                            new SqlParameter("@P_ATTEMPT", qualExam.Attempt),
                            new SqlParameter("@P_MARKS_OBTAINED", qualExam.MarksObtained),
                            new SqlParameter("@P_OUT_OF_MRKS", qualExam.Out_of_marks),
                            new SqlParameter("@P_PER", qualExam.Per),
                            new SqlParameter("@P_PERCENTILE", qualExam.Percentile),
                            new SqlParameter("@P_RES_TOPIC", qualExam.Res_topic),
                            new SqlParameter("@P_SUPERVISOR_NAME1", qualExam.Supervisor_name1),
                            new SqlParameter("@P_SUPERVISOR_NAME2", qualExam.Supervisor_name2),
                            new SqlParameter("@P_COLLEGECODE",qualExam.College_code),
                            new SqlParameter("@P_COLLEGE_ADD",qualExam.College_address),
                            new SqlParameter("@P_QUAL_MEDIUM",qualExam.Qual_medium),
                             new SqlParameter("@P_QEXMROLLNOOTH",qualExam.Qexmrollno),
                            new SqlParameter("@P_STQEXNO", qualExam.Stqexno)
                           };
                        objParams[objParams.Length - 1].Direction = ParameterDirection.Output;
                        objSQLHelper.ExecuteNonQuerySP("pkg_STUDENT_UPD_LAST_QUALEXM", objParams, true);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateLastQualExams --> " + ex.ToString());
                    }
                }

                public DataSet GetAllQualifyExamDetails(int idno)
                {
                    DataSet dsCT = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        dsCT = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_GET_QUALIFYEXAM", objParams);

                    }
                    catch (Exception ex)
                    {
                        return dsCT;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.studentcontroller.GetAllQualifyExamDetails-> " + ex.ToString());
                    }

                    return dsCT;
                }



                public int UpdateStudent_Detained(Student objStudent)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_STUDID", objStudent.StudId);
                        objParams[1] = new SqlParameter("@P_STATUS", objStudent.FacAdvisor);
                        objParams[2] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[2].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUDENT_SUBJECT_STATUS", objParams, false);
                        if (ret != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent_Detained-> " + ex.ToString());
                    }
                    return retStatus;
                }
                public DataSet GetStudentformeritList(int sessionnno, int degreeno, int Qualifyno, int cutoffno, string appdate)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionnno);
                        objParams[1] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[2] = new SqlParameter("@P_QUALIFYNO", Qualifyno);
                        objParams[3] = new SqlParameter("@P_CUTOFFMARKS", cutoffno);
                        objParams[4] = new SqlParameter("@P_APPDATE", appdate);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_REPORT_GENERATE_MERIT_LIST", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDocVerification() -->" + ex.ToString());

                    }
                    return ds;
                }
                /// <summary>
                /// Modified by Sunita P - 24/01/22
                /// </summary>
                /// <param name="objStudent"></param>
                /// <returns></returns>
                public int UpdateStudent_FacultAdvisor(Student objStudent)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    object ret = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        if (objStudent.ClassAdvisor != 0)
                        {
                            SqlParameter[] objParams = new SqlParameter[] 
                        {                             
                            new SqlParameter("@P_STUDID", objStudent.StudId),
                            new SqlParameter("@P_CLSADVISOR", objStudent.ClassAdvisor),         
                             new SqlParameter("@P_SECTIONNO", objStudent.SectionNo),     
                             new SqlParameter("@P_CA_DEPTNO", objStudent.ClassDept),     
                            new SqlParameter("@P_OUT", SqlDbType.Int)                   
                        };
                            objParams[objParams.Length - 1].Direction = ParameterDirection.Output;
                            ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_BY_CLASS_ADVISOR", objParams, true);
                        }
                        else
                        {
                            SqlParameter[] objParams = new SqlParameter[] 
                        {                             
                             new SqlParameter("@P_STUDID", objStudent.StudId),
                            new SqlParameter("@P_FACULTYADVISOR", objStudent.FacAdvisor),  
                            //new SqlParameter("@P_FAC_SECTION", objStudent.FASectionNo),   
                             new SqlParameter("@P_SECTIONNO", objStudent.SectionNo),
                            new SqlParameter("@P_OUT", SqlDbType.Int)
                        };
                            objParams[objParams.Length - 1].Direction = ParameterDirection.Output;
                            ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_BYFACULTY_ADVISOR_NEW", objParams, true);
                        }


                        if (ret != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent_TeachAllot-> " + ex.ToString());
                    }
                    return retStatus;
                }

                //public DataSet GetStudentsByScheme(int branchno, int degreeno, int admbatchno)
                //{
                //    DataSet ds = null;
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                //        SqlParameter[] objParams = new SqlParameter[3];
                //        objParams[0] = new SqlParameter("@P_BRANCHNO", branchno);
                //        objParams[1] = new SqlParameter("@P_DEGREENO", degreeno);
                //        objParams[2] = new SqlParameter("@P_ADMBATCH", admbatchno);

                //        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_BY_SCHEME", objParams);

                //    }
                //    catch (Exception ex)
                //    {
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForScheme-> " + ex.ToString());
                //    }

                //    return ds;
                //}



                //modified by reena on 4_10_16
                public DataSet GetStudentsByScheme(int admbatch, int schemeno, int degreeno, int schemetype, int semno, int college_id, int sectionno, int sessionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[8];
                        objParams[0] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_SCHEMETYPE", schemetype);
                        objParams[4] = new SqlParameter("@P_SEM", semno);
                        objParams[5] = new SqlParameter("@P_COLLEGEID", college_id);
                        objParams[6] = new SqlParameter("@P_SECTIONNO", sectionno);
                        objParams[7] = new SqlParameter("@P_SESSIONNO", sessionno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_BY_SCHEME1", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForScheme-> " + ex.ToString());
                    }

                    return ds;
                }




                public DataSet GetStudentsBySchemeAllot(int collegeno, int admbatch, int branchno, int degreeno, int schemetype, int semno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_COLLEGEID", collegeno);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[3] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[4] = new SqlParameter("@P_SCHEMETYPE", schemetype);
                        objParams[5] = new SqlParameter("@P_SEM", semno);
                        //objParams[6] = new SqlParameter("@P_SPECIAL_MAP_NO", specilaizationno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_BY_SCHEME_ALLOT", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForScheme-> " + ex.ToString());
                    }

                    return ds;
                }

                public DataSet GetStudentNameAndId()
                {
                    DataSet dsCT = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[0];

                        dsCT = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_DROPDOWN", objParams);

                    }
                    catch (Exception ex)
                    {
                        return dsCT;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.studentcontroller.GetStudentNameAndId-> " + ex.ToString());
                    }

                    return dsCT;
                }
                public int UpdateStudentSeatNo(string studids, string rollnos, int sessionno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_STUDID", studids);
                        //objParams[1] = new SqlParameter("@P_SECTIONNO", sectionno);
                        objParams[1] = new SqlParameter("@P_ROLLNOS", rollnos);
                        objParams[2] = new SqlParameter("@P_SESSIONNO", sessionno);
                        //objParams[3] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[3] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[3].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_ROLL_SEAT_ALLOTMENT", objParams, false);
                        if (ret != null)
                            if (ret.ToString() != "-99")
                                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentSection-> " + ex.ToString());
                    }
                    return retStatus;
                }
                public int bulkUpdSVETStudentAdmStatus(Student objStudent, int sessionNo, string remark)
                {
                    string Message = string.Empty;
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[2] = new SqlParameter("@P_UA_NO", objStudent.Uano);
                        objParams[3] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[4] = new SqlParameter("@P_REMARK", remark);
                        objParams[5] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[5].Direction = ParameterDirection.Output;


                        object status = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_UPD_ADMISSION_STATUS", objParams, true);
                        if (status != null)
                        {
                            if (status.ToString().Equals("-99"))
                                Message = "Transaction Failed!";
                            else
                                status = Convert.ToInt32(CustomStatus.RecordUpdated);

                        }
                        return Convert.ToInt32(status);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent-> " + ex.ToString());
                    }
                }
                public int GetStudentIDByRegNo(string regno)
                {
                    int idno = 0;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_REGNO", regno);

                        idno = Convert.ToInt32(objSQLHelper.ExecuteScalarSP("PKG_STUDENT_SP_RET_STUDID_BY_REGNO", objParams));

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.studentcontroller.GetStudentIDByRegNo-> " + ex.ToString());
                    }

                    return idno;
                }

                public int ChangeStudentSemester(Student objStudent)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_SEMNO", objStudent.SemesterNo);
                        objParams[2] = new SqlParameter("@P_YEAR", objStudent.Year);

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_CHANGE_SEM", objParams, false);
                        if (ret != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.ChangeStudentSemester-> " + ex.ToString());
                    }
                    return retStatus;
                }

                public DataSet GetStudentListForIdentityCard(int degreeno, int branchno, int semesterno, int admbatch, int collegeid)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[4] = new SqlParameter("@P_COLLEGE_ID", collegeid);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_IDENTITY_CARD", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetStudentSubjectsOffered(int sessionno, int schemeno, int semesterno, int sectionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_SECTIONNO", sectionno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_PREREGIST_SP_RET_ALL_STUDENTS_BYCOE", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentSubjectsOffered-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetStudentDegreeFill()
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[0];

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_SP_ALL_DEGREE", objParams);
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDegreeFill->" + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetMaleFemaleTotalOnDegree(string degreeno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_REPORT_STU_STRENGTH_MF", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetMaleFemaleTotalOnDegree-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetStudentsByScheme(int schemeno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_SCHEMENO", schemeno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUD_BY_SCHEME", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsByScheme-> " + ex.ToString());
                    }
                    return ds;
                }

                // add method 21/08/2009
                public DataSet GetStudentSearchForHostelBonafideCert(int hostelSessionNo, int admBatchNo)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSqlHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_HOSTEL_SESSION_NO", hostelSessionNo);
                        objParams[1] = new SqlParameter("@P_HOSTEL_NO", admBatchNo);
                        ds = objSqlHelper.ExecuteDataSetSP("PKG_HOSTEL_STUDENT_SEARCH_BONAFIDE_CERTIFICATE", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentSearchForHostelBonafideCert-> " + ex.ToString());
                    }
                    return ds;
                }


                public DataSet GetStudentSearchForHostelIdentityCard(int hostelSessionNo, int hostelNo, int blockNo, int floorNo)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSqlHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_HOSTEL_SESSION_NO", hostelSessionNo);
                        objParams[1] = new SqlParameter("@P_HOSTEL_NO", hostelNo);
                        objParams[2] = new SqlParameter("@P_BLOCK_NO", blockNo);
                        objParams[3] = new SqlParameter("@P_FLOOR_NO", floorNo);
                        ds = objSqlHelper.ExecuteDataSetSP("PKG_HOSTEL_STUDENT_SEARCH_IDENTITY_CARD", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetSTudentSearchForHostelIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetStudentsRegNo(int branchno, int admbatch, int idtype)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[1] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[2] = new SqlParameter("@P_IDTYPE", idtype);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_STU_UPDATION_REGNO", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsRegNo-> " + ex.ToString());
                    }

                    return ds;
                }

                //public DataSet GetStudentsForBatchAllotment(int session, int scheme, int coursecode, string fromrollno, string torollno, string rollnos, int flag)
                //{
                //    DataSet ds = null;
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                //        SqlParameter[] objParams = new SqlParameter[7];
                //        objParams[0] = new SqlParameter("@P_SESSION", session);
                //        objParams[1] = new SqlParameter("@P_SCHEMENO", scheme);
                //        objParams[2] = new SqlParameter("@P_COURSENO", coursecode);
                //        objParams[3] = new SqlParameter("@P_FROMROLLNO", fromrollno);
                //        objParams[4] = new SqlParameter("@P_TOROLLNO", torollno);
                //        objParams[5] = new SqlParameter("@P_ROLLNOS", rollnos);
                //        objParams[6] = new SqlParameter("@P_FLAG", flag);

                //        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_BATCH_ALLOTMENT", objParams);
                //    }
                //    catch (Exception ex)
                //    {
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForTeacherAllotment-> " + ex.ToString());
                //    }

                //    return ds;
                //}

                public DataSet GetStudentsForBatchAllotment(int sessionNo, int collegeNo, int degreeNo, int branchNo, int schemeNo, int semesterNo, int courseNo, int sectionNo, int OrgId)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[9];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[1] = new SqlParameter("@P_COLLEGEID", collegeNo);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeNo);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", branchNo);
                        objParams[4] = new SqlParameter("@P_SCHEMENO", schemeNo);
                        objParams[5] = new SqlParameter("@P_SEMESTERNO", semesterNo);
                        objParams[6] = new SqlParameter("@P_COURSENO", courseNo);
                        objParams[7] = new SqlParameter("@P_SECTIONNO", sectionNo);
                        //objParams[8] = new SqlParameter("@P_FROMROLLNO", fromrollno);
                        //objParams[9] = new SqlParameter("@P_TOROLLNO", torollno);
                        //objParams[10] = new SqlParameter("@P_FLAG", flag);
                        objParams[8] = new SqlParameter("@P_ORGID", OrgId);//Added by Dileep on 24.03.2022 
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_BATCH_ALLOTMENT", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForTeacherAllotment-> " + ex.ToString());
                    }

                    return ds;
                }
                //public DataSet GetStudentsByAdmBatch(int admbatch, int degree, int branch, int sem)
                //{
                //    DataSet ds = null;
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                //        SqlParameter[] objParams = new SqlParameter[4];
                //        objParams[0] = new SqlParameter("@P_ADMBATCH", admbatch);
                //        objParams[1] = new SqlParameter("@P_DEGREEno", degree);
                //        objParams[2] = new SqlParameter("@P_BRANCHno", branch);
                //        objParams[3] = new SqlParameter("@P_SEM", sem);
                //        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUD_SP_RET_STUDENTS_BY_ADMBATCH", objParams);
                //    }
                //    catch (Exception ex)
                //    {
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsByAdmBatch-> " + ex.ToString());
                //    }
                //    return ds;
                //}

                public DataSet GetStudentsByAdmBatch(int admbatch, int collegeid, int degree, int branch, int sem)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[1] = new SqlParameter("@P_COLLEGE_ID", collegeid);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degree);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", branch);
                        objParams[4] = new SqlParameter("@P_SEM", sem);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUD_SP_RET_STUDENTS_BY_ADMBATCH", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsByAdmBatch-> " + ex.ToString());
                    }
                    return ds;
                }




                //public int UpdateStudent_BatchAllot(Student_Acd objStudent)
                //{
                //    int retStatus = Convert.ToInt32(CustomStatus.Others);
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = new SqlParameter[7];
                //        objParams[0] = new SqlParameter("@P_STUDID", objStudent.StudId);
                //        objParams[1] = new SqlParameter("@P_SESSIONNO", objStudent.SessionNo);
                //        objParams[2] = new SqlParameter("@P_SCHEMENO", objStudent.SchemeNo);
                //        objParams[3] = new SqlParameter("@P_COURSENO", objStudent.CourseNo);
                //        objParams[4] = new SqlParameter("@P_SUBID", objStudent.ThBatchNo);
                //        objParams[5] = new SqlParameter("@P_BATCHNO", objStudent.BatchNo);
                //        objParams[6] = new SqlParameter("@P_OUT", SqlDbType.Int);
                //        objParams[6].Direction = ParameterDirection.Output;

                //        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_BATCH_ALLOTMENT", objParams, false);
                //        if (ret != null)
                //            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                //    }
                //    catch (Exception ex)
                //    {
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent_BatchAllot-> " + ex.ToString());
                //    }
                //    return retStatus;
                //}

                public int UpdateStudent_BatchAllot(Student_Acd objStudent, int OrgId)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[11];
                        objParams[0] = new SqlParameter("@P_STUDID", objStudent.StudId);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", objStudent.SessionNo);
                        objParams[2] = new SqlParameter("@P_SCHEMENO", objStudent.SchemeNo);
                        objParams[3] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[4] = new SqlParameter("@P_COURSENO", objStudent.CourseNo);
                        objParams[5] = new SqlParameter("@P_SECTIONNO", objStudent.Sectionno);
                        objParams[6] = new SqlParameter("@P_SUBID", objStudent.ThBatchNo);
                        objParams[7] = new SqlParameter("@P_BATCHNO", objStudent.BatchNo);
                        objParams[8] = new SqlParameter("@P_ATTTYPE", objStudent.Pract_Theory);
                        objParams[9] = new SqlParameter("@P_ORGID", OrgId);
                        objParams[10] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[10].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_BATCH_ALLOTMENT", objParams, false);
                        if (ret != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent_BatchAllot-> " + ex.ToString());
                    }
                    return retStatus;
                }
                // Reg no

                public int UpdateStudentRegNumber(string regno, string enrollnos2)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNOS", regno);
                        objParams[1] = new SqlParameter("@P_REGNO", enrollnos2);
                        // objParams[2] = new SqlParameter("@P_ROLLNOS", rollnos);
                        objParams[2] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[2].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_REGNO1", objParams, false);
                        if (ret != null)
                            if (ret.ToString() != "-99")
                                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentSection-> " + ex.ToString());
                    }
                    return retStatus;
                }
                public int UpdateStudentRegNo(string regno, string enrollnos)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNOS", regno);
                        objParams[1] = new SqlParameter("@P_ENROLLNOS", enrollnos);
                        // objParams[2] = new SqlParameter("@P_ROLLNOS", rollnos);
                        objParams[2] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[2].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_REGNO", objParams, false);
                        if (ret != null)
                            if (ret.ToString() != "-99")
                                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentSection-> " + ex.ToString());
                    }
                    return retStatus;
                }


                public DataSet GetRegisterdCourses(int idno, int sessionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_COURSE_REGISTERED", objParams);
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentRegisterdCourses->" + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetExemptedCourses(int idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUD_SP_RET_EXEM_COURSES", objParams);
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetExemptedCourses->" + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetFeesInfo(int studentId)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[] 
                        { 
                            new SqlParameter("@P_IDNO", studentId)                    
                        };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_STUD_SP_RER_PAID_FEES", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.StudentController.GetFeesInfo() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                public DataSet GetStudentExamSubjectsRegistered(int sessionno, int schemeno, int semesterno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_GET_EXAM_REGISTERED", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentSubjectsOffered-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetStudentSearchForHostelBonafideCert(int hostelSessionNo)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSqlHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_HOSTEL_SESSION_NO", hostelSessionNo);
                        ds = objSqlHelper.ExecuteDataSetSP("PKG_HOSTEL_STUDENT_SEARCH_BONAFIDE_CERTIFICATE", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentSearchForHostelBonafideCert-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet RetrieveStudentInformation(string search, string category)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_SEARCHSTRING", search);
                        objParams[1] = new SqlParameter("@P_SEARCH", category);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_SP_STUDENT_INFORMATION_SEARCH", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.RetrieveEmpDetails-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetStudentBatchAllotment(int sessionNo, int schemeNo, int courseNo, int subId, int batchNo)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSqlHlper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeNo);
                        objParams[2] = new SqlParameter("@P_COURSENO", courseNo);
                        objParams[3] = new SqlParameter("@P_SUBID", subId);
                        objParams[4] = new SqlParameter("@P_BATCHNO", batchNo);
                        ds = objSqlHlper.ExecuteDataSetSP("PKG_REPORT_STUDENT_BATCH_ALLOTMENT", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentBatchAllotment-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet RetrieveStudentFeedbackInformation(int tokenNo)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_TOKENNO", tokenNo);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_REPORT_STUDENT_FEEDBACK", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentFeedbackInformation-> " + ex.ToString());
                    }
                    return ds;
                }

                /// <summary>
                /// Method use for bulk hall ticket print
                /// <returns>DataSet</returns>          
                /// </summary>

                public DataSet GetStudentsForBulkHallTicketPrint(int session, int scheme, int semesterNo)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_SESSION", session);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", scheme);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterNo);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_BULK_HALL_TICKET_PRINT", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForBatchAllotment-> " + ex.ToString());
                    }

                    return ds;
                }

                public int UpdateClassAward(int courseNo)
                {
                    Student objStudent = new Student();
                    DataSet ds = null;
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        //Update Class Award
                        SqlParameter[] objParams = new SqlParameter[1];

                        //First Add Student Parameter
                        objParams[0] = new SqlParameter("@P_COURSENO", courseNo);

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_STUDENT_UPD_CLASS_AWARD", objParams, false);
                        if (ret != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        return retStatus;
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateClassAward->" + ex.ToString());
                    }
                }

                public DataSet RetrieveStudentCourseDetailForClassAward(int schemeNo)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_SCHEMENO", schemeNo);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_STUDENT_CLASS_AWARD", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentCourseDetailForClassAward->" + ex.ToString());
                    }
                    return ds;
                }

                public int AddExemSubject(int idno, string regno, int schemeno, int courseno, string ccode, int credit, int sessionno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[] 
                        { 
                            new SqlParameter("@P_IDNO", idno),
                            new SqlParameter("@P_REGNO", regno),
                            new SqlParameter("@P_SCHEMENO", schemeno),
                            new SqlParameter("@P_COURSENO", courseno),
                            new SqlParameter("@P_CRS_CD", ccode),
                            new SqlParameter("@P_CREDIT", credit),
                            new SqlParameter("@P_SESSIONNO",sessionno)
                            
                        };

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_INS_EXEM_SUBJECTS", objParams, false);
                        if (ret != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateLastQualExams --> " + ex.ToString());
                    }
                    return retStatus;
                }

                //public DataSet GetStudentBlankMarksheet(string schemeNo, string semesterNo, string courseNo, string controllsheetNo, string examNo)
                //{
                //    DataSet ds = null;
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                //        SqlParameter[] objParams = new SqlParameter[5];
                //        objParams[0] = new SqlParameter("@P_SCHEME_NO", schemeNo);
                //        objParams[1] = new SqlParameter("@P_SEMESTER_NO", semesterNo);
                //        objParams[2] = new SqlParameter("@P_COURSE_NO", courseNo);
                //        objParams[3] = new SqlParameter("@P_CONTROLSHEET_NO", controllsheetNo);
                //        objParams[4] = new SqlParameter("@P_EXAMNO", examNo);

                //        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_BLANKMARKSHEET_REPORT", objParams);
                //    }
                //    catch (Exception ex)
                //    {
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentSubjectsOffered-> " + ex.ToString());
                //    }
                //    return ds;
                //}

                /// <summary>
                /// Modified by Rishabh - 07/01/2022......
                /// Modified by jay - 29/09/2022......
                /// </summary>
                /// <param name="idno"></param>
                /// <param name="photo"></param>
                /// <param name="sign"></param>
                /// <returns></returns>
                public DataSet GetStudentsForUpdateBulkPhotoUpload(int branchNo, int admbatch, int degree, int college, int OrgId)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_BRANCHNO", branchNo);
                        objParams[1] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degree);
                        objParams[3] = new SqlParameter("@P_COLLEGEID", college);
                        objParams[4] = new SqlParameter("@P_ORGANIZATION_ID", OrgId);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_SHOW_PHOTO_SIGN", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForUpdateBulkPhotoUpload-> " + ex.ToString());
                    }

                    return ds;
                }
                /// <summary>
                /// Modified by Rishabh - 07/01/2022......
                /// </summary>
                /// <param name="idno"></param>
                /// <param name="photo"></param>
                /// <param name="sign"></param>
                /// <returns></returns>
                public int UpdateStudentPhoto(int idno, byte[] photo, byte[] sign)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        if (!(photo == null) || !(sign == null))
                        {
                            SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                            SqlParameter[] objParams = new SqlParameter[4];
                            objParams[0] = new SqlParameter("@P_IDNO", idno);
                            //objParams[1] = new SqlParameter("@P_PHOTO",DBNull.Value);
                            //else
                            objParams[1] = new SqlParameter("@P_PHOTO", photo);
                            objParams[2] = new SqlParameter("@P_SIGN", sign);
                            objParams[3] = new SqlParameter("@P_ORGANIZATION_ID", Convert.ToInt32(System.Web.HttpContext.Current.Session["OrgId"]));

                            if (objSQLHelper.ExecuteNonQuerySP("PKG_ACD_UPDATE_PHOTO", objParams, false) != null)
                                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentPhoto->" + ex.ToString());
                    }

                    return retStatus;
                }
                //public DataSet GetStudentsForUpdateBulkPhotoUpload(int branchNo, int admbatch)
                //{
                //    DataSet ds = null;
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                //        SqlParameter[] objParams = new SqlParameter[2];
                //        objParams[0] = new SqlParameter("@P_BRANCHNO", branchNo);
                //        objParams[1] = new SqlParameter("@P_ADMBATCH", admbatch);

                //        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_SHOW_PHOTO", objParams);
                //    }
                //    catch (Exception ex)
                //    {
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForUpdateBulkPhotoUpload-> " + ex.ToString());
                //    }

                //    return ds;
                //}

                //public int UpdateStudentPhoto(int idno, byte[] photo)
                //{
                //    int retStatus = Convert.ToInt32(CustomStatus.Others);
                //    try
                //    {
                //        if (!(photo == null))
                //        {
                //            SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //            SqlParameter[] objParams = new SqlParameter[2];
                //            objParams[0] = new SqlParameter("@P_IDNO", idno);
                //            //objParams[1] = new SqlParameter("@P_PHOTO",DBNull.Value);
                //            //else
                //            objParams[1] = new SqlParameter("@P_PHOTO", photo);

                //            if (objSQLHelper.ExecuteNonQuerySP("PKG_ACD_UPDATE_PHOTO", objParams, false) != null)
                //                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                //        }
                //    }
                //    catch (Exception ex)
                //    {
                //        retStatus = Convert.ToInt32(CustomStatus.Error);
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentPhoto->" + ex.ToString());
                //    }

                //    return retStatus;
                //}
                public DataSet GetStudentBlankMarksheet(string sessionNo, string deptNo, string semesterNo, string controllsheetNo, string examNo)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[1] = new SqlParameter("@P_DEPTNO", deptNo);
                        objParams[2] = new SqlParameter("@P_SEMESTER_NO", semesterNo);
                        objParams[3] = new SqlParameter("@P_CONTROLSHEET_NO", controllsheetNo);
                        objParams[4] = new SqlParameter("@P_EXAMNO", examNo);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_BLANKMARKSHEET_REPORT", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentSubjectsOffered-> " + ex.ToString());
                    }
                    return ds;
                }

                /// <summary>
                /// Modified By Nidhi Gour 18102019
                /// </summary>
                public int UpdateStudentSection(string studids, string rollnos, string sectionnos, int ua_no, string admbatchno, int degreeno, int branchno, string ipaddress, string roll, string semesterno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[11];
                        objParams[0] = new SqlParameter("@P_STUDID", studids);
                        objParams[1] = new SqlParameter("@P_SECTIONNO", sectionnos);
                        objParams[2] = new SqlParameter("@P_ROLLNOS", rollnos);
                        objParams[3] = new SqlParameter("@P_UA_NO", ua_no);
                        objParams[4] = new SqlParameter("@P_ADMBATCHNO", admbatchno);
                        objParams[5] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[6] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[7] = new SqlParameter("@P_IPADDRESS", ipaddress);
                        objParams[8] = new SqlParameter("@P_ROLL", roll);//Added by Nidhi Gour 18102019
                        objParams[9] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[10] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[10].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_SECTION_ALLOTMENT1", objParams, false);
                        if (ret != null)
                            if (ret.ToString() != "-99")
                                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentSection-> " + ex.ToString());
                    }
                    return retStatus;
                }


                public DataSet GetAcademicBatchWiseStudents(int acdbatchNo, int branchNo, int semesterNo)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_ACDBATCHNO", acdbatchNo);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchNo);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterNo);

                        ds = objSQLHelper.ExecuteDataSetSP("ACD_ACDBATCH_BRANCH_SEMESTER_STUDENTS", objParams);

                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.studentcontroller.GetAllQualifyExamDetails-> " + ex.ToString());
                    }

                    return ds;
                }


                public DataSet GetExamSeatNumbers(int sessionNo, int branchNo, int semesterNo, int prev_status)
                {
                    DataSet ds = null;

                    try
                    {

                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchNo);
                        objParams[2] = new SqlParameter("@P_SEMNO", semesterNo);
                        objParams[3] = new SqlParameter("@P_PREV_STATUS", prev_status);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_EXAM_SEAT_NUMBERS", objParams);

                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.studentcontroller.GetAllQualifyExamDetails-> " + ex.ToString());
                    }

                    return ds;
                }


                public int GenerateExamSeatNumber(int sessionNo, int branchNo, int semesterNo, int prev_status)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {


                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchNo);
                        objParams[2] = new SqlParameter("@P_SEMNO", semesterNo);
                        objParams[3] = new SqlParameter("@P_PREV_STATUS", prev_status);

                        if (objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_EXAM_SEATNO_ALLOTMENT", objParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentPhoto->" + ex.ToString());
                    }

                    return retStatus;
                }


                // for student reg course


                public DataSet GetCoursewiseStudentsCount(int sessionNo, int schemeNo, int CourseNo)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeNo);
                        objParams[2] = new SqlParameter("@P_COURSENO", CourseNo);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_COURSEWISE_STUDENT_COUNT", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetCoursewiseStudentsCount-> " + ex.ToString());
                    }
                    return ds;
                }
                public DataSet GetStudentsForRandomNo(int sessionNo, int college_id, int degreeno, int branchno, int schemeno, int semesterno, int CourseNo)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[7];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[1] = new SqlParameter("@P_COLLEGE_ID", college_id);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[4] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[5] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[6] = new SqlParameter("@P_COURSENO", CourseNo);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_STUDENTS_RANDOM_GENERATION", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetCoursewiseStudentsCount-> " + ex.ToString());
                    }
                    return ds;
                }

                // student decoding number genereation 

                public int GenerateDecodeNumber(int sessionNo, int branchNo, int DigitsNo)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {

                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchNo);
                        objParams[2] = new SqlParameter("@P_DIGIT", DigitsNo);

                        if (objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_DECODENO_RANDOM", objParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentPhoto->" + ex.ToString());
                    }

                    return retStatus;
                }

                public DataSet GetDecodeNumber(int sessionNo, int branchNo, int DigitsNo)
                {
                    DataSet ds = null;

                    try
                    {

                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchNo);
                        objParams[2] = new SqlParameter("@P_DIGIT", DigitsNo);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_EXAM_SEAT_NUMBERS", objParams);

                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.studentcontroller.GetAllQualifyExamDetails-> " + ex.ToString());
                    }

                    return ds;
                }

                public int UpdateLockDecodeNo(int sessionNo)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {

                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionNo);

                        if (objSQLHelper.ExecuteNonQuerySP("PKG_DECODE_NUMBER_LOCK", objParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateLockDecodeNo->" + ex.ToString());
                    }

                    return retStatus;
                }
                public int UpdateRandomNumber(string idnos, int sessionNo, int courseno, int schemeno, int semesterno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {

                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_IDNO", idnos);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[2] = new SqlParameter("@P_COURSENO", courseno);
                        objParams[3] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[4] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        if (objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_DECODE_NUMBER_RANDOM", objParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateRandomNumber->" + ex.ToString());
                    }

                    return retStatus;
                }

                public DataSet ViewGenerateDecodeNumber(int sessionNo, int semesterNo, int CourseNo)
                {
                    DataSet ds = null;

                    try
                    {

                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[1] = new SqlParameter("@P_COURSENO", CourseNo);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterNo);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_DECODE_NUMBERS", objParams);

                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.studentcontroller.GetAllQualifyExamDetails-> " + ex.ToString());
                    }

                    return ds;
                }

                // student decoding number genereation 
                //public int GenerateDecodeNumber(int sessionNo, int branchNo, int courseNo, int DigitsNo, string ipAddress, int userId, string collegeCode)
                //{
                //    int retStatus = Convert.ToInt32(CustomStatus.Others);
                //    try
                //    {

                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = new SqlParameter[7];
                //        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionNo);
                //        objParams[1] = new SqlParameter("@P_BRANCHNO", branchNo);
                //        objParams[2] = new SqlParameter("@P_COURSENO", courseNo);
                //        objParams[3] = new SqlParameter("@P_DIGIT", DigitsNo);
                //        objParams[4] = new SqlParameter("@P_IP_ADDRESS", ipAddress);
                //        objParams[5] = new SqlParameter("@P_USER_ID", userId);
                //        objParams[6] = new SqlParameter("@P_COLLEGE_CODE", collegeCode);

                //        if (objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_DECODENO_RANDOM", objParams, false) != null)
                //            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                //    }
                //    catch (Exception ex)
                //    {
                //        retStatus = Convert.ToInt32(CustomStatus.Error);
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentPhoto->" + ex.ToString());
                //    }

                //    return retStatus;
                //}

                public int GenerateDecodeNumber(int sessionNo, int branchNo, int courseNo, int DigitsNo, string ipAddress, int userId, string collegeCode)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    Object ret = 0;
                    try
                    {

                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[8];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchNo);
                        objParams[2] = new SqlParameter("@P_COURSENO", courseNo);
                        objParams[3] = new SqlParameter("@P_DIGIT", DigitsNo);
                        objParams[4] = new SqlParameter("@P_IP_ADDRESS", ipAddress);
                        objParams[5] = new SqlParameter("@P_USER_ID", userId);
                        objParams[6] = new SqlParameter("@P_COLLEGE_CODE", collegeCode);
                        objParams[7] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[7].Direction = ParameterDirection.Output;

                        ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_DECODENO_RANDOM", objParams, true);

                        //  if (objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_DECODENO_RANDOM", objParams, false) != null)
                        if (Convert.ToInt32(ret) == 2)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentPhoto->" + ex.ToString());
                    }

                    return retStatus;
                }


                //ddinfo
                public void AddDDINFO(GEC_Student objGS)
                {
                    string retStatus = string.Empty;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[] 
                        { 
                            new SqlParameter("@P_BRANCHNO", objGS.BranchNo),
                            new SqlParameter("@P_ADMBATCH", objGS.AdmBatch),
                            new SqlParameter("@P_IDNO", objGS.IdNo),
                            new SqlParameter("@P_DDNO", objGS.DdNo),
                            new SqlParameter("@P_DDDATE",objGS.Dddate),
                            new SqlParameter("@P_DDAMOUNT",objGS.DdAmount),
                            new SqlParameter("@P_BANKNO", objGS.BankNo),    
                            new SqlParameter("@P_CITYNO", objGS.cityNo),    
                            new SqlParameter("@P_COLLEGE_CODE", objGS.CollegeCode)
                           };
                        //objParams[objParams.Length - 1].Direction = ParameterDirection.Output;
                        objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_INS_ADM_SLIP_DDINFO", objParams, false);

                        //object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_STUDENT_INFO", objParams, true);
                        //retStatus = ret.ToString();
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateLastQualExams --> " + ex.ToString());
                    }
                }

                // Provision
                public DataSet GetProvisionalAdmission(int admBatchNo, int branchNo)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_ADMBATCH", admBatchNo);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchNo);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_PROVISION_ADMISSION_LIST", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetCoursewiseStudentsCount-> " + ex.ToString());
                    }
                    return ds;
                }

                public int AddStudentDocuments(int idno, int docno, string col_code)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {

                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_DOCUMENTNO", docno);
                        objParams[2] = new SqlParameter("@P_COLLEGE_CODE", col_code);

                        if (objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_SP_ADD_STUD_DOC_LIST", objParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddStudentDocuments->" + ex.ToString());
                    }

                    return retStatus;
                }
                //public DataSet GetStudentsForUpdateBulkPhotoUpload(int degreeno, int branchno, int admbatch)
                //{
                //    DataSet ds = null;
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                //        SqlParameter[] objParams = new SqlParameter[3];
                //        objParams[0] = new SqlParameter("@P_DEGREENO", degreeno);
                //        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                //        objParams[2] = new SqlParameter("@P_ADMBATCH", admbatch);

                //        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_SHOW_PHOTO", objParams);
                //    }
                //    catch (Exception ex)
                //    {
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForUpdateBulkPhotoUpload-> " + ex.ToString());
                //    }

                //    return ds;
                //}

                //public int UpdateStudentPhoto(int idno, byte[] photo)
                //{
                //    int retStatus = Convert.ToInt32(CustomStatus.Others);
                //    try
                //    {
                //        if (!(photo == null))
                //        {
                //            SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //            SqlParameter[] objParams = new SqlParameter[2];
                //            objParams[0] = new SqlParameter("@P_IDNO", idno);
                //            //objParams[1] = new SqlParameter("@P_PHOTO",DBNull.Value);
                //            //else
                //            objParams[1] = new SqlParameter("@P_PHOTO", photo);

                //            if (objSQLHelper.ExecuteNonQuerySP("PKG_ACD_UPDATE_PHOTO", objParams, false) != null)
                //                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                //        }
                //    }
                //    catch (Exception ex)
                //    {
                //        retStatus = Convert.ToInt32(CustomStatus.Error);
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentPhoto->" + ex.ToString());
                //    }

                //    return retStatus;
                //}

                public int UpdateStudentBatch(string studids, int batchno, int sessionno, int degreeno, int semesterno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_STUDID", studids);
                        objParams[1] = new SqlParameter("@P_BATCHNO", batchno);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[4] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[5] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[5].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_BATCH_ALLOTMENT", objParams, false);
                        if (ret != null)
                            if (ret.ToString() != "-99")
                                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentSection-> " + ex.ToString());
                    }
                    return retStatus;
                }

                //public int GenerateEnrollmentNo(int sessionno, int deptno, int admBatch, int All_Rem, string colcode)
                //{
                //    int retStatus = Convert.ToInt32(CustomStatus.Others);
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = new SqlParameter[6];
                //        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                //        objParams[1] = new SqlParameter("@P_BRANCHNO", deptno);
                //        objParams[2] = new SqlParameter("@P_ADMBATCH", admBatch);
                //        objParams[3] = new SqlParameter("@P_ALL_REM", All_Rem);
                //        objParams[4] = new SqlParameter("@P_COLLEGE_CODE", colcode);
                //        objParams[5] = new SqlParameter("@P_OUT", SqlDbType.Int);
                //        objParams[5].Direction = ParameterDirection.Output;

                //        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_STU_REGNONEW", objParams, true).ToString();

                //        if (Convert.ToInt32(ret) == 1)
                //            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                //        else
                //            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                //    }
                //    catch (Exception ex)
                //    {
                //        return retStatus;
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GenerateEnrollmentNo-> " + ex.ToString());
                //    }
                //    return retStatus;
                //}

                //public void GenerateUserIdPassword(string studidnos, string studpwds)
                //{
                //    //string ret = string.Empty;
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = new SqlParameter[2];
                //        objParams[0] = new SqlParameter("@P_IDNOS", studidnos);
                //        objParams[1] = new SqlParameter("@P_PWDS", studpwds);


                //        objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_STUDENT_GENERATE_USERID_PASSWORD", objParams, false);


                //    }
                //    catch (Exception ex)
                //    {
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GenerateUserId-> " + ex.ToString());
                //    }
                //}

                public DataSet Getstudent(long idno, int sessionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACADEMIC_GETSTUDENT", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetDetainedList-> " + ex.ToString());
                    }
                    return ds;
                }
                public int UpDateStudentStatus(int IDNO, int SESSIONNO)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", IDNO);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", SESSIONNO);
                        if (objSQLHelper.ExecuteNonQuerySP("PKG_ACADEMIC_UPDATE_STUDENT_STATUS", objParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpDateStudent-> " + ex.ToString());
                    }
                    return retStatus;
                }

                public DataTableReader GetStudentDetails(int idno)
                {
                    DataTableReader dtr = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        dtr = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_BYID", objParams).Tables[0].CreateDataReader();

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return dtr;
                }

                public int PromotStudentSemRtm(Student objStudent, int sessionNo, string enrollno, string ipadd, string recNo, string recDate, string recAmount, int promotion)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update Student semester Rtm
                        objParams = new SqlParameter[15];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_ENROLLMENTNO", enrollno);
                        objParams[2] = new SqlParameter("@P_SECTIONNO", objStudent.SectionNo);
                        objParams[3] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[4] = new SqlParameter("@P_ROLLNO", objStudent.RollNo);
                        objParams[5] = new SqlParameter("@P_RECEIPTNO", recNo);
                        objParams[6] = new SqlParameter("@P_RECEIPT_DATE", recDate);
                        objParams[7] = new SqlParameter("@P_RECEIPT_AMOUNT", recAmount);
                        objParams[8] = new SqlParameter("@P_UA_NO", objStudent.Uano);
                        objParams[9] = new SqlParameter("@P_IPADDRESS", ipadd);
                        objParams[10] = new SqlParameter("@P_CREATE_DATE", objStudent.Dob);
                        objParams[11] = new SqlParameter("@P_COLLEGE_CODE", objStudent.CollegeCode);
                        objParams[12] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                        objParams[13] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[14] = new SqlParameter("@P_PROMOTIONNO", promotion);
                        objParams[14].Direction = ParameterDirection.InputOutput;

                        int status = (Int32)objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_INS_SEM_PROMOTION", objParams, true);
                        if (status != -99)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);
                        return retStatus;
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent-> " + ex.ToString());
                    }
                }

                public int GenerateClassRollNumber(Student objStud, int rollnofrom, int rollnoto)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[7];
                        objParams[0] = new SqlParameter("@P_DEGREENO", objStud.DegreeNo);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", objStud.BranchNo);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", objStud.SemesterNo);
                        objParams[3] = new SqlParameter("@P_SECTIONO", objStud.SectionNo);
                        objParams[4] = new SqlParameter("@P_MF", objStud.Sex);
                        objParams[5] = new SqlParameter("@P_ROLLNOFROM", rollnofrom);
                        objParams[6] = new SqlParameter("@P_ROLLNOTO", rollnoto);

                        if (objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_ROLLNO_GENERATE1", objParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentPhoto->" + ex.ToString());
                    }

                    return retStatus;
                }

                public DataSet GetStudentListForRollNo(Student objStud)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_DEGREENO", objStud.DegreeNo);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", objStud.BranchNo);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", objStud.SemesterNo);
                        objParams[3] = new SqlParameter("@P_SECTIONNO", objStud.SectionNo);
                        objParams[4] = new SqlParameter("@P_SEX", objStud.Sex);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_FOR_ROLLNO_GEN", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }

                public int AddProspectusSaleStudent(Student objStudent)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[] 
                        { 
                            new SqlParameter("@P_SESSIONNO", objStudent.SessionNo),
                            new SqlParameter("@P_DEGREENO", objStudent.DegreeNo),
                            new SqlParameter("@P_BRANCHNO", objStudent.BranchNo),
                            new SqlParameter("@P_ADMISSION_BATCH", objStudent.AdmBatch),
                            new SqlParameter("@P_STUDENT_NAME",objStudent.StudName),
                            new SqlParameter("@P_SALE_DATE",objStudent.SaleDate),
                            new SqlParameter("@P_PRINT_DATE", objStudent.PrintDate),    
                            new SqlParameter("@P_PROS_AMT", objStudent.Amount),    
                            new SqlParameter("@P_SERIAL_NO", objStudent.SerialNo),
                            new SqlParameter("@P_PROS_CANCEL", objStudent.Can),
                            new SqlParameter("@P_UA_NO", objStudent.Uano),
                            new SqlParameter("@P_IPADDRESS", objStudent.IPADDRESS),
                            new SqlParameter("@P_COLLEGE_CODE", objStudent.CollegeCode),
                            new SqlParameter("@P_REC_NO", objStudent.ReciptNo),
                            new SqlParameter("@P_OUT", SqlDbType.Int)
                         };
                        objParams[objParams.Length - 1].Direction = ParameterDirection.Output;
                        //objSQLHelper.ExecuteNonQuerySP("PKG_SALE_PROSPECTUS_INSERT", objParams, false);

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_SALE_PROSPECTUS_INSERT", objParams, true);
                        retStatus = Convert.ToInt32(ret);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddProspectusSaleStudent --> " + ex.ToString());
                    }
                    return retStatus;
                }
                public DataSet GetStudentsExamNo_RollNo(int admbatch, int degreeNo, int branchno, int semesterno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[1] = new SqlParameter("@P_DEGREENO", degreeNo);
                        objParams[2] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[3] = new SqlParameter("@P_SEMESTERNO", admbatch);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_STUDENT_ALLOTMENT_EXAMNO_REPORT", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsExamNo-> " + ex.ToString());
                    }

                    return ds;
                }
                public DataSet GetStudentsRegNo_RollNo(int degreeNo, int branchno, int admbatch)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeNo);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_ADMBATCH", admbatch);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_STUDENT_ALLOTMENT_ROLLNO_REPORT", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsRegNo-> " + ex.ToString());
                    }

                    return ds;
                }

                public DataSet GetStudentsRegNo_RollNo_Year(int degreeNo, int branchno, int admbatch)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeNo);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_ADMBATCH", admbatch);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_STUDENT_ALLOTMENT_ROLLNO_REPORT_YEAR", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsRegNo-> " + ex.ToString());
                    }

                    return ds;
                }

                // student GenerateBulkRollNo number genereation 

                public int GenerateBulkRollNo(int branchNo, int admBatch)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {

                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_BRANCHNO", branchNo);
                        objParams[1] = new SqlParameter("@P_ADMBATCH", admBatch);

                        if (objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_UPDATE_REGNO", objParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GenerateBulkRollNo->" + ex.ToString());
                    }

                    return retStatus;
                }

                public string GetGenRegistrationNumber(int admBatch, int branchNo)
                {
                    string generatedRegNo = string.Empty;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[3];
                        //objParams[0] = new SqlParameter("@P_STATUS", status);
                        objParams[0] = new SqlParameter("@P_ADMBATCH", admBatch);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchNo);
                        objParams[2] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[2].Direction = ParameterDirection.Output;

                        generatedRegNo = (objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_REGNO_GENERATE_NEW", objParams, true)).ToString();

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetRegistrationNumber-> " + ex.ToString());
                    }
                    return generatedRegNo;
                }

                public DataSet RetrieveStudentCurrentResult(int idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_STUD_CURRENT_RESULT", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentCurrentRegDetails-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet RetrieveStudentCurrentRegDetails(int idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_REGISTRATION_DETAILS_BY_ID", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentCurrentRegDetails-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet RetrieveStudentFeesDetails(int idno, int uano)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_UANO", uano);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_FEES_DETAILS_BY_ID", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentFeesDetails-> " + ex.ToString());
                    }
                    return ds;
                }


                public DataSet RetrieveStudentAttendanceDetails(int sessionno, int schemeno, int semesterno, int idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_REPORT_STUDENT_ATTENDANCE", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentCurrentRegDetails-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet RetrieveStudentCertificateDetails(int idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_CERT_ISUUED_DETAILS_BY_ID", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentCertificateDetails-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetAllRemarkDetails(int idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_GET_REMARK", objParams);

                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.studentcontroller.GetAllQualifyExamDetails-> " + ex.ToString());
                    }

                    return ds;
                }

                public DataSet GetStudentRefunds(int idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_STUDENT_REFUND_AMOUNT", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentRefunds-> " + ex.ToString());
                    }
                    return ds;
                }

                // for student reg course

                public DataSet GetCoursewiseStudentsCount(int sessionNo, int schemeNo, int CourseNo, int semesterNo, int schemetype, int sectionNo)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeNo);
                        objParams[2] = new SqlParameter("@P_COURSENO", CourseNo);
                        objParams[3] = new SqlParameter("@P_SEMESTERNO", semesterNo);
                        objParams[4] = new SqlParameter("@P_SCHEMETYPE", schemetype);
                        objParams[5] = new SqlParameter("@P_SECTIONNO", sectionNo);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_COURSEWISE_STUDENT_COUNT_FOR_REPORT", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.GetCoursewiseStudentsCount-> " + ex.ToString());
                    }
                    return ds;
                }

                //public string AddStudentTempData(Student objStudent, StudentAddress objStudAddress)
                //{
                //    string retStatus = string.Empty;
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        //Add New student
                //        objParams = new SqlParameter[39];
                //        objParams[0] = new SqlParameter("@P_NAME", objStudent.StudName);
                //        objParams[1] = new SqlParameter("@P_GATE_YEAR", objStudent.GATE_YEAR);
                //        objParams[2] = new SqlParameter("@P_GATE_REG", objStudent.GATE_REG);
                //        objParams[3] = new SqlParameter("@P_GATE_SCORE", objStudent.GATE_SCORE);
                //        objParams[4] = new SqlParameter("@P_GATE_PAPER", objStudent.GATE_PAPER);
                //        objParams[5] = new SqlParameter("@P_DOB", objStudent.Dob);
                //        objParams[6] = new SqlParameter("@P_GENDER", objStudent.Sex);
                //        objParams[7] = new SqlParameter("@P_MOBILE", objStudent.StudentMobile);
                //        objParams[8] = new SqlParameter("@P_APPLICANT_CATEGORYNO", objStudent.CategoryNo);
                //        objParams[9] = new SqlParameter("@P_ALLOTTED_CATEGORYNO", objStudent.AdmCategoryNo);
                //        objParams[10] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                //        objParams[11] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                //        objParams[12] = new SqlParameter("@P_ROLL_NO", objStudent.RollNo);
                //        objParams[13] = new SqlParameter("@P_AIR_OVERALL", objStudent.ALLINDIARANK);
                //        objParams[14] = new SqlParameter("@P_YEAR_OF_EXAM", objStudent.YearOfExam);
                //        objParams[15] = new SqlParameter("@P_QUOTA", objStudent.ADMQUOTANO);
                //        objParams[16] = new SqlParameter("@P_PH", objStudent.PH);
                //        objParams[17] = new SqlParameter("@P_FATHERS_NAME", objStudent.FatherName);
                //        objParams[18] = new SqlParameter("@P_MOTHERS_NAME", objStudent.MotherName);
                //        objParams[19] = new SqlParameter("@P_RELIGIONNO", objStudent.ReligionNo);
                //        objParams[20] = new SqlParameter("@P_MARITAL_STATUS", objStudent.Married);
                //        objParams[21] = new SqlParameter("@P_NATIONALITYNO", objStudent.NationalityNo);
                //        objParams[22] = new SqlParameter("@P_EMAIL", objStudAddress.PEMAIL);
                //        objParams[23] = new SqlParameter("@P_BLOOD_GROUPNO", objStudent.BloodGroupNo);
                //        objParams[24] = new SqlParameter("@P_PERMANANT_ADDRESS", objStudent.PAddress);
                //        objParams[25] = new SqlParameter("@P_CITY", objStudent.PCity);
                //        objParams[26] = new SqlParameter("@P_STATENO", objStudent.StateNo);
                //        objParams[27] = new SqlParameter("@P_PIN_CODE", objStudent.PPinCode);
                //        objParams[28] = new SqlParameter("@P_CONTACT_NUMBER", objStudent.PMobile);
                //        objParams[29] = new SqlParameter("@P_POSTAL_ADDRESS", objStudAddress.LADDRESS);
                //        objParams[30] = new SqlParameter("@P_LOCAL_CITY", objStudAddress.LCITY);
                //        objParams[31] = new SqlParameter("@P_LOCAL_STATE", objStudAddress.LSTATE);
                //        objParams[32] = new SqlParameter("@P_GUARDIAN_PHONE", objStudAddress.LMOBILE);
                //        objParams[33] = new SqlParameter("@P_PARENT_PHONE", objStudent.PMobile);
                //        objParams[34] = new SqlParameter("@P_PARENT_EMAIL", objStudAddress.GEMAIL);
                //        objParams[35] = new SqlParameter("@P_ADMBACTH", objStudent.AdmBatch);
                //        objParams[36] = new SqlParameter("@P_DOCUMENTS", objStudent.DOCUMENTS);
                //        objParams[37] = new SqlParameter("@P_PAYTYPENO", objStudent.PayTypeNO);

                //        objParams[38] = new SqlParameter("@P_OUT", SqlDbType.NVarChar, 38);
                //        objParams[38].Direction = ParameterDirection.Output;

                //        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_STUDENT_DATA_ENTRY", objParams, true);

                //        //if (ret.ToString().Equals("-99"))
                //        //    retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                //        //else
                //        //    retStatus = Convert.ToInt32(ret);
                //        retStatus = ret.ToString();

                //    }
                //    catch (Exception ex)
                //    {
                //        retStatus = "0";
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddStudentTempData-> " + ex.ToString());
                //    }

                //    return retStatus;
                //}

                public string AddStudentTempData(Student objStudent, StudentAddress objStudAddress, int hostel)
                {
                    string retStatus = string.Empty;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Add New student
                        objParams = new SqlParameter[43];
                        objParams[0] = new SqlParameter("@P_NAME", objStudent.StudName);
                        objParams[1] = new SqlParameter("@P_GATE_YEAR", objStudent.GATE_YEAR);
                        objParams[2] = new SqlParameter("@P_GATE_REG", objStudent.GATE_REG);
                        objParams[3] = new SqlParameter("@P_GATE_SCORE", objStudent.GATE_SCORE);
                        objParams[4] = new SqlParameter("@P_GATE_PAPER", objStudent.GATE_PAPER);
                        objParams[5] = new SqlParameter("@P_DOB", objStudent.Dob);
                        objParams[6] = new SqlParameter("@P_GENDER", objStudent.Sex);
                        objParams[7] = new SqlParameter("@P_MOBILE", objStudent.StudentMobile);
                        objParams[8] = new SqlParameter("@P_APPLICANT_CATEGORYNO", objStudent.CategoryNo);
                        objParams[9] = new SqlParameter("@P_ALLOTTED_CATEGORYNO", objStudent.AdmCategoryNo);
                        objParams[10] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                        objParams[11] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                        objParams[12] = new SqlParameter("@P_ROLL_NO", objStudent.RollNo);
                        objParams[13] = new SqlParameter("@P_AIR_OVERALL", objStudent.ALLINDIARANK);
                        objParams[14] = new SqlParameter("@P_YEAR_OF_EXAM", objStudent.YearOfExam);
                        objParams[15] = new SqlParameter("@P_QUOTA", objStudent.ADMQUOTANO);
                        objParams[16] = new SqlParameter("@P_PH", objStudent.PH);
                        objParams[17] = new SqlParameter("@P_FATHERS_NAME", objStudent.FatherName);
                        objParams[18] = new SqlParameter("@P_MOTHERS_NAME", objStudent.MotherName);
                        objParams[19] = new SqlParameter("@P_RELIGIONNO", objStudent.ReligionNo);
                        objParams[20] = new SqlParameter("@P_MARITAL_STATUS", objStudent.Married);
                        objParams[21] = new SqlParameter("@P_NATIONALITYNO", objStudent.NationalityNo);
                        objParams[22] = new SqlParameter("@P_EMAIL", objStudAddress.PEMAIL);
                        objParams[23] = new SqlParameter("@P_BLOOD_GROUPNO", objStudent.BloodGroupNo);
                        objParams[24] = new SqlParameter("@P_PERMANANT_ADDRESS", objStudent.PAddress);
                        objParams[25] = new SqlParameter("@P_CITY", objStudent.PCity);
                        objParams[26] = new SqlParameter("@P_STATENO", objStudent.StateNo);
                        objParams[27] = new SqlParameter("@P_PIN_CODE", objStudent.PPinCode);
                        objParams[28] = new SqlParameter("@P_CONTACT_NUMBER", objStudent.PMobile);
                        objParams[29] = new SqlParameter("@P_POSTAL_ADDRESS", objStudAddress.LADDRESS);
                        objParams[30] = new SqlParameter("@P_LOCAL_CITY", objStudAddress.LCITY);
                        objParams[31] = new SqlParameter("@P_LOCAL_STATE", objStudAddress.LSTATE);
                        objParams[32] = new SqlParameter("@P_GUARDIAN_PHONE", objStudAddress.LMOBILE);
                        objParams[33] = new SqlParameter("@P_PARENT_PHONE", objStudent.PMobile);
                        objParams[34] = new SqlParameter("@P_PARENT_EMAIL", objStudAddress.GEMAIL);
                        objParams[35] = new SqlParameter("@P_ADMBACTH", objStudent.AdmBatch);
                        objParams[36] = new SqlParameter("@P_DOCUMENTS", objStudent.DOCUMENTS);
                        objParams[37] = new SqlParameter("@P_PAYTYPENO", objStudent.PayTypeNO);
                        objParams[38] = new SqlParameter("@P_REMARK", objStudent.Remark);
                        objParams[39] = new SqlParameter("@P_HOSTEL", hostel);
                        objParams[40] = new SqlParameter("@P_SCORE", objStudent.Score);
                        objParams[41] = new SqlParameter("@P_CSAB_AMT", objStudent.CsabAmount);
                        objParams[42] = new SqlParameter("@P_OUT", SqlDbType.NVarChar, 40);
                        objParams[42].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_STUDENT_DATA_ENTRY", objParams, true);

                        //if (ret.ToString().Equals("-99"))
                        //    retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        //else
                        //    retStatus = Convert.ToInt32(ret);
                        retStatus = ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = "0";
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddStudentTempData-> " + ex.ToString());
                    }

                    return retStatus;
                }
                //public string AddStudentTempData(Student objStudent, StudentAddress objStudAddress)
                //{
                //    string retStatus = string.Empty;
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        //Add New student
                //        objParams = new SqlParameter[40];
                //        objParams[0] = new SqlParameter("@P_NAME", objStudent.StudName);
                //        objParams[1] = new SqlParameter("@P_GATE_YEAR", objStudent.GATE_YEAR);
                //        objParams[2] = new SqlParameter("@P_GATE_REG", objStudent.GATE_REG);
                //        objParams[3] = new SqlParameter("@P_GATE_SCORE", objStudent.GATE_SCORE);
                //        objParams[4] = new SqlParameter("@P_GATE_PAPER", objStudent.GATE_PAPER);
                //        objParams[5] = new SqlParameter("@P_DOB", objStudent.Dob);
                //        objParams[6] = new SqlParameter("@P_GENDER", objStudent.Sex);
                //        objParams[7] = new SqlParameter("@P_MOBILE", objStudent.StudentMobile);
                //        objParams[8] = new SqlParameter("@P_APPLICANT_CATEGORYNO", objStudent.CategoryNo);
                //        objParams[9] = new SqlParameter("@P_ALLOTTED_CATEGORYNO", objStudent.AdmCategoryNo);
                //        objParams[10] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                //        objParams[11] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                //        objParams[12] = new SqlParameter("@P_ROLL_NO", objStudent.RollNo);
                //        objParams[13] = new SqlParameter("@P_AIR_OVERALL", objStudent.ALLINDIARANK);
                //        objParams[14] = new SqlParameter("@P_YEAR_OF_EXAM", objStudent.YearOfExam);
                //        objParams[15] = new SqlParameter("@P_QUOTA", objStudent.ADMQUOTANO);
                //        objParams[16] = new SqlParameter("@P_PH", objStudent.PH);
                //        objParams[17] = new SqlParameter("@P_FATHERS_NAME", objStudent.FatherName);
                //        objParams[18] = new SqlParameter("@P_MOTHERS_NAME", objStudent.MotherName);
                //        objParams[19] = new SqlParameter("@P_RELIGIONNO", objStudent.ReligionNo);
                //        objParams[20] = new SqlParameter("@P_MARITAL_STATUS", objStudent.Married);
                //        objParams[21] = new SqlParameter("@P_NATIONALITYNO", objStudent.NationalityNo);
                //        objParams[22] = new SqlParameter("@P_EMAIL", objStudAddress.PEMAIL);
                //        objParams[23] = new SqlParameter("@P_BLOOD_GROUPNO", objStudent.BloodGroupNo);
                //        objParams[24] = new SqlParameter("@P_PERMANANT_ADDRESS", objStudent.PAddress);
                //        objParams[25] = new SqlParameter("@P_CITY", objStudent.PCity);
                //        objParams[26] = new SqlParameter("@P_STATENO", objStudent.StateNo);
                //        objParams[27] = new SqlParameter("@P_PIN_CODE", objStudent.PPinCode);
                //        objParams[28] = new SqlParameter("@P_CONTACT_NUMBER", objStudent.PMobile);
                //        objParams[29] = new SqlParameter("@P_POSTAL_ADDRESS", objStudAddress.LADDRESS);
                //        objParams[30] = new SqlParameter("@P_LOCAL_CITY", objStudAddress.LCITY);
                //        objParams[31] = new SqlParameter("@P_LOCAL_STATE", objStudAddress.LSTATE);
                //        objParams[32] = new SqlParameter("@P_GUARDIAN_PHONE", objStudAddress.LMOBILE);
                //        objParams[33] = new SqlParameter("@P_PARENT_PHONE", objStudent.PMobile);
                //        objParams[34] = new SqlParameter("@P_PARENT_EMAIL", objStudAddress.GEMAIL);
                //        objParams[35] = new SqlParameter("@P_ADMBACTH", objStudent.AdmBatch);
                //        objParams[36] = new SqlParameter("@P_DOCUMENTS", objStudent.DOCUMENTS);
                //        objParams[37] = new SqlParameter("@P_PAYTYPENO", objStudent.PayTypeNO);
                //        objParams[38] = new SqlParameter("@P_REMARK", objStudent.Remark);

                //        objParams[39] = new SqlParameter("@P_OUT", SqlDbType.NVarChar, 38);
                //        objParams[39].Direction = ParameterDirection.Output;

                //        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_STUDENT_DATA_ENTRY", objParams, true);

                //        //if (ret.ToString().Equals("-99"))
                //        //    retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                //        //else
                //        //    retStatus = Convert.ToInt32(ret);
                //        retStatus = ret.ToString();

                //    }
                //    catch (Exception ex)
                //    {
                //        retStatus = "0";
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddStudentTempData-> " + ex.ToString());
                //    }

                //    return retStatus;
                //}

                public DataTableReader GetStudentDetailsForCheck(int idno)
                {
                    DataTableReader dtr = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        dtr = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_BYID_FOR_CHECK", objParams).Tables[0].CreateDataReader();

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return dtr;
                }

                public DataSet GetStudentsDocuments(int idno, string documentno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_DOCUMNETNO", documentno);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_STUDENT_DOCUMENTS_LIST", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentFeesDetails-> " + ex.ToString());
                    }
                    return ds;
                }
                //added by sandeep on 10-02-2018
                public DataSet RetrieveStudentCurrentResultFORGRADE(int idno, int SemesterNo, int SessionNo)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SEMESTERNO", SemesterNo);
                        objParams[2] = new SqlParameter("@P_SESSIONNO", SessionNo);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_STUD_CURRENT_RESULT_FOR_GRADE", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentCurrentRegDetails-> " + ex.ToString());
                    }
                    return ds;
                }
                public DataSet RetrieveStudentSemesterNumberResult(int idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_STUD_CURRENT_SEMESTER__RESULT", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentCurrentRegDetails-> " + ex.ToString());
                    }
                    return ds;
                }

                //end
                public DataSet RetrieveStudentClassTestMarks(int idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_MARKS_DETAILS_BY_ID", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentCurrentRegDetails-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetStudentListForIdentityCard(int schemetypeno, int degreeno, int branchno, int semesterno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_SCHEMETYPE", schemetypeno);
                        objParams[1] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[2] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[3] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_IDENTITY_CARD", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }

                public int UpdateStudSign(Student objstud)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //UpdateFaculty Reference
                        objParams = new SqlParameter[2];

                        objParams[0] = new SqlParameter("@P_IDNO", objstud.IdNo);
                        objParams[1] = new SqlParameter("@P_STUD_SIGN", objstud.StudSign);


                        if (objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_SP_UPD_STUDENT_SIGN", objParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentSign-> " + ex.ToString());
                    }
                    return retStatus;
                }


                public int UpdateStudPhoto(Student objstud)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //UpdateFaculty Reference
                        objParams = new SqlParameter[2];

                        objParams[0] = new SqlParameter("@P_IDNO", objstud.IdNo);
                        objParams[1] = new SqlParameter("@P_STUD_PHOTO", objstud.StudPhoto);


                        if (objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_SP_UPD_STUDENT_PHOTO", objParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentPhoto-> " + ex.ToString());
                    }
                    return retStatus;
                }


                //public DataSet GetStudentDetailsExam(int idno)
                //{
                //    DataSet ds = null;

                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        objParams = new SqlParameter[1];
                //        objParams[0] = new SqlParameter("@P_IDNO", idno);

                //        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_BYID_FOR_EXAM", objParams);

                //    }
                //    catch (Exception ex)
                //    {
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                //    }
                //    return ds;
                //}

                public DataSet GetStudentDetailsExam(int idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_BYID_FOR_EXAM", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }


                public DataSet RetrieveStudentCurrentRegDetails(int sessionno, int idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_EXAM_DETAILS_BY_ID", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentCurrentRegDetails-> " + ex.ToString());
                    }
                    return ds;
                }


                //public DataSet GetStudentFailExamSubjects(int idno, int sessionno)
                //{
                //    DataSet ds = null;

                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        objParams = new SqlParameter[2];
                //        objParams[0] = new SqlParameter("@P_IDNO", idno);
                //        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);

                //        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_FAIL_STUDENT_LIST", objParams);

                //    }
                //    catch (Exception ex)
                //    {
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                //    }
                //    return ds;
                //}

                public DataSet GetStudentFailExamSubjects(int idno, int sessionno, int semesterno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_FAIL_STUDENT_LIST", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }

                // methohd user to show appered subject for current term
                public DataSet GetStudentFailExamSubjects_For_Revalution(int idno, int sessionno, int semesterno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_FAIL_STUDENT_LIST_FOR_REVALUATION", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }

                public int UpdateStudentCategory(string studids, string categorys, int fieldID, string paddress)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_STUDID", studids);
                        objParams[1] = new SqlParameter("@P_CATEGORYNO", categorys);
                        objParams[2] = new SqlParameter("@P_FIELDID", fieldID);
                        objParams[3] = new SqlParameter("@P_PADDRESS", paddress);
                        objParams[4] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[4].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_BULK_CATEGORY_ALLOTMENT", objParams, false);
                        if (ret != null)
                            if (ret.ToString() != "-99")
                                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentCategory-> " + ex.ToString());
                    }
                    return retStatus;
                }


                /// <summary>
                /// added by abhishek 
                /// date : 14-06-2019
                /// </summary>

                public int UpdateStudentCategory(string studids, string categorys, int fieldID)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_STUDID", studids);
                        objParams[1] = new SqlParameter("@P_CATEGORYNO", categorys);
                        objParams[2] = new SqlParameter("@P_FIELDID", fieldID);
                        objParams[3] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[3].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_BULK_CATEGORY_ALLOTMENT", objParams, false);
                        if (ret != null)
                            if (ret.ToString() != "-99")
                                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentCategory-> " + ex.ToString());
                    }
                    return retStatus;
                }

                public DataSet RetrieveStudentrRegisteredBackExamList(int sessionno, int idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_REGIST_SP_REPORT_EXAM_REGISTERED_BACK_SUBJECTS", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentCurrentRegDetails-> " + ex.ToString());
                    }
                    return ds;
                }



                public int UpdateStudentExamRegister(int idno, int sessionno, string dcrno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //UpdateFaculty Reference
                        objParams = new SqlParameter[3];

                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[2] = new SqlParameter("@P_DCRNOS", dcrno);


                        if (objSQLHelper.ExecuteNonQuerySP("PKG_REGIST_SP_UPDATE_EXAM_REGISTRATION", objParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateRegisteredCourse-> " + ex.ToString());
                    }
                    return retStatus;
                }

                public int UpdateRegisteredCourse(int idno, int sessionno, int courseno, int semesterno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //UpdateFaculty Reference
                        objParams = new SqlParameter[4];

                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[2] = new SqlParameter("@P_COURSENO", courseno);
                        objParams[3] = new SqlParameter("@P_SEMESTERNO", semesterno);

                        if (objSQLHelper.ExecuteNonQuerySP("PKG_ACD_UPDATE_EXAM_REGISTERED_COURSES", objParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateRegisteredCourse-> " + ex.ToString());
                    }
                    return retStatus;
                }
                /// <summary>
                /// THis controller is used to Update Detention of student.
                /// Page : DetentionAndCancelation.aspx
                /// </summary>
                /// <param name="sessionNo"></param>
                /// <param name="idNos"></param>
                /// <param name="semesterNo"></param>
                /// <param name="sectionNo"></param>
                /// <param name="provDetentions"></param>
                /// <param name="finalDetentions"></param>
                /// <param name="detentionRemarks"></param>
                /// <param name="finalDetentionRemarks"></param>
                /// <param name="provDetentionDate"></param>
                /// <param name="finalDetentionDate"></param>
                /// <param name="undo_DetainRemark"></param>
                /// <param name="undoDetainDate"></param>
                /// <param name="collageCode"></param>
                /// <returns></returns>

                //METHOD FOR DETAINING THE STUDENTS
                //METHOD FOR DETAINING THE STUDENTS
                public int UpdateDetention(int sessionNo, string idNos, int SCHEMENO, int semesterNo, string provDetentions, string finalDetentions, string collageCode, int DETAINED_BY, string REMARKS, int UA_NO, string STATUS)
                {
                    int retStatus = 0;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[11];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[1] = new SqlParameter("@P_IDNO", idNos);
                        objParams[2] = new SqlParameter("@P_SCHEMENO", SCHEMENO);
                        objParams[3] = new SqlParameter("@P_SEMESTERNO", semesterNo);
                        objParams[4] = new SqlParameter("@P_PROV_DETAIN", provDetentions);
                        objParams[5] = new SqlParameter("@P_FINAL_DETAIN", finalDetentions);
                        objParams[6] = new SqlParameter("@P_COLLEGE_CODE", collageCode);
                        objParams[7] = new SqlParameter("@P_DETAINED_BY", DETAINED_BY);
                        objParams[8] = new SqlParameter("@P_REMARKS", REMARKS);
                        objParams[9] = new SqlParameter("@P_UA_NO", UA_NO);
                        objParams[10] = new SqlParameter("@P_STATUS", STATUS);


                        if (objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_INS_DETENTION_NEW", objParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.updateDetention->" + ex.ToString());
                    }
                    return retStatus;

                }
                /// <summary>
                /// This controller is used to Get Detained Student List
                /// Page : DetentionAndCancelation.aspx
                /// </summary>
                /// <param name="sesionno"></param>
                /// <param name="degreeno"></param>
                /// <param name="branchno"></param>
                /// <param name="semno"></param>
                /// <param name="DetainStatus"></param>
                /// <returns></returns>

                public DataSet GetDetainedList(int sesionno, int degreeno, int branchno, int semno, string DetainStatus)
                {

                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sesionno);
                        objParams[1] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semno);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[4] = new SqlParameter("@P_DETAIN_STATUS", DetainStatus);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_STUDENT_DETENTION_LIST", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.GetDetainedList-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetStudentDetained(int idno, int sessionno, int semesterno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_EXM_REGISTRATIONFORIMPROVEMENT", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetained->" + ex.ToString());
                    }
                    return ds;
                }




                //public DataSet GetStudentListForAdmitCard(int degreeno, int branchno, int semesterno)
                //{
                //    DataSet ds = null;

                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        objParams = new SqlParameter[3];
                //        objParams[0] = new SqlParameter("@P_DEGREENO", degreeno);
                //        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                //        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                //        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_ADMIT_CARD", objParams);

                //    }
                //    catch (Exception ex)
                //    {

                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                //    }
                //    return ds;
                //}


                public int DeleteCourseRegistered(int idno, int sessionno, int semesterno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[3].Direction = ParameterDirection.Output;

                        object ret = Convert.ToInt32(objSQLHelper.ExecuteNonQuerySP("PKG_ACD_DELETE_COURSE_REGISTERED", objParams, true));
                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordDeleted);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.DeleteCourseRegistered-> " + ex.ToString());
                    }
                    return retStatus;
                }


                public DataTableReader GetProStudentDetails(int idno)
                {
                    DataTableReader dtr = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        dtr = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_PRO_STUDENT", objParams).Tables[0].CreateDataReader();

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return dtr;
                }

                //Retrive Student Details
                public DataTableReader GetCopyCaseStudentDetails(int idno, int sessionno, int semesterno)
                {
                    DataTableReader dtr = null;
                    try
                    {
                        SQLHelper objSH = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        dtr = objSH.ExecuteDataSetSP("PKG_STUDENT_GET_COPY_CASE_DETAILS", objParams).Tables[0].CreateDataReader();
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.GetCopyCaseStudentDetails()-> " + ex.ToString());
                    }
                    return dtr;
                }
                ////public DataSet GetCopyCaseData(int idno, int sessionno, int semesterno)
                ////{
                ////    DataSet ds = null;

                ////    try
                ////    {
                ////        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                ////        SqlParameter[] objParams = null;
                ////        objParams = new SqlParameter[3];
                ////        objParams[0] = new SqlParameter("@P_IDNO", idno);
                ////        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                ////        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                ////        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_GET_COPY_CASE_DETAILS", objParams);

                ////    }
                ////    catch (Exception ex)
                ////    {

                ////        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetCopyCaseData-> " + ex.ToString());
                ////    }
                ////    return ds;
                ////}

                public DataSet GetCopyCaseData(int idno, int sessionno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_GET_COPY_CASE_DETAILS", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetCopyCaseData-> " + ex.ToString());
                    }
                    return ds;
                }

                //get student for Consolidate Report
                public DataSet GetStudentDetailsForConsolidated(int sessionNo, int schemeNo, int semesterno, int examtype, int absorption_status, int sectionNo)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeNo);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_EXAMTYPE", examtype);
                        objParams[4] = new SqlParameter("@P_ABSORPTION_STATUS", absorption_status);
                        objParams[5] = new SqlParameter("@P_SECTIONNO", sectionNo);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_GAZETE_RECORD", objParams);
                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails()-> " + ex.ToString());
                    }
                    return ds;
                }
                //*//


                //Retrive Student Details
                public DataTableReader GetWithHeldStudentDetails(int idno, int sessionno, int semesterno)
                {
                    DataTableReader dtr = null;
                    try
                    {
                        SQLHelper objSH = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        dtr = objSH.ExecuteDataSetSP("PKG_PREREG_RET_STUDDETAILS", objParams).Tables[0].CreateDataReader();
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.WithHeldEntry.GetWithHeldStudentDetails-> " + ex.ToString());
                    }
                    return dtr;
                }

                //Add WithHeld Deatils
                public int AddWithHeld(Student_Acd objStud)
                {

                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[] 
                        { 
                             
                             new SqlParameter("@P_SESSIONNO",objStud.SessionNo),
                             new SqlParameter("@P_IDNO",objStud.IdNo),
                             new SqlParameter("@P_SEATNO",objStud.Seatno),                         
                             new SqlParameter("@P_SEMESTERNO",objStud.SemesterNo),
                             new SqlParameter("@P_SCHEMENO",objStud.SchemeNo),
                             new SqlParameter("@P_REMARK ",objStud.Remark),
                             new SqlParameter("@P_STATUS ",objStud.Status),
                             new SqlParameter("@P_OUT",SqlDbType.Int)
                                                      
                        };
                        objParams[objParams.Length - 1].Direction = ParameterDirection.Output;
                        if (objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_INS_WITHHELD_DETAILS", objParams, false) != null)

                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.AddWithHeld --> " + ex.ToString());
                    }
                    return retStatus;
                }

                //Update The WithHeld Entry Status
                public int UpadteWithHeldEntryStatus(Student_Acd objStud)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {

                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[] 
                        {
                        //update

                             new SqlParameter("@P_SESSIONNO",objStud.SessionNo),
                             new SqlParameter("@P_IDNO",objStud.IdNo),
                             new SqlParameter("@P_SEATNO",objStud.Seatno),                         
                             new SqlParameter("@P_SEMESTERNO",objStud.SemesterNo),
                             new SqlParameter("@P_SCHEMENO",objStud.SchemeNo),
                             new SqlParameter("@P_REMARK ",objStud.Remark),
                             new SqlParameter("@P_STATUS ",objStud.Status)                                        
                        };


                        if (objSQLHelper.ExecuteNonQuerySP("PKG_UPD_WITHHELD_DETAILS", sqlParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessEntities.StudentController.UpadteWithHeldEntryStatus() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return retStatus;
                }


                //Get All Details Of Withheld Entry
                public DataSet GetWithHeldData(int idno, int sessionno, int semesterno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GETALL_WITHHELD_DETAILS", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.GetWithHeldData --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                //Get WithHeld Details Info By Id
                public SqlDataReader GetWithHeldDetailsById(int idno, int sessionno)
                {
                    SqlDataReader dr = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);

                        dr = objSQLHelper.ExecuteReaderSP("PKG_RET_WITHHELD_DETAILS_BYID", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessEntities.StudentController.GetWithHeldDetailsById() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return dr;
                }

                //Add Checkers 
                public int AddCheckersDetail(Student objStudent)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Add
                        objParams = new SqlParameter[13];
                        objParams[0] = new SqlParameter("@P_CHECKERNO1", objStudent.CollatorNo1);
                        objParams[1] = new SqlParameter("@P_CHECKERNO2", objStudent.CollatorNo2);
                        objParams[2] = new SqlParameter("@P_SESSIONNO", objStudent.SessionNo);
                        objParams[3] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                        objParams[4] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                        objParams[5] = new SqlParameter("@P_SCHEMENO", objStudent.SchemeNo);
                        objParams[6] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[7] = new SqlParameter("@P_CHECKERNAME1", objStudent.CheckerName1);
                        objParams[8] = new SqlParameter("@P_CHECKERNAME2", objStudent.CheckerName2);
                        objParams[9] = new SqlParameter("@P_COLLATORNO1", objStudent.CollatorNo1);
                        objParams[10] = new SqlParameter("@P_COLLATORNO2", objStudent.CollatorNo2);
                        objParams[11] = new SqlParameter("@P_COLLEGE_CODE", objStudent.CollegeCode);
                        objParams[12] = new SqlParameter("@P_CHECKERDETAILNO", SqlDbType.Int);
                        objParams[12].Direction = ParameterDirection.Output;



                        if (objSQLHelper.ExecuteNonQuerySP("PKG_CHECK_SP_INS_CHECKER", objParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddCheckersDetail-> " + ex.ToString());
                    }

                    return retStatus;
                }

                //Get Checkers
                public DataSet GetChekers(int sessionno, int degreeno, int branchno, int semesterno, int schemeno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[2] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[3] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[4] = new SqlParameter("@P_SCHEMENO", schemeno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_CHECKER_DETAILS", objParams);
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetChekers-> " + ex.ToString());
                    }
                    return ds;
                }

                public string UpdatePHDStudent(Student objStudent)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    //int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update Student
                        objParams = new SqlParameter[21];
                        //First Add Student Parameter
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_ENROLLNO", objStudent.EnrollNo);
                        objParams[2] = new SqlParameter("@P_STUDNAME", objStudent.StudName);
                        objParams[3] = new SqlParameter("@P_FATHERNAME", objStudent.FatherName);

                        objParams[4] = new SqlParameter("@P_ADMDATE", objStudent.AdmDate);
                        objParams[5] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                        objParams[6] = new SqlParameter("@P_PHDSUPERVISORNO", objStudent.PhdSupervisorNo);
                        objParams[7] = new SqlParameter("@P_PHDCOSUPERVISORNO1", objStudent.PhdCoSupervisorNo1);

                        objParams[8] = new SqlParameter("@P_SUPERVISORNO", objStudent.SupervisorNo);
                        objParams[9] = new SqlParameter("@P_SUPERVISORMEMBERNO", objStudent.SupervisormemberNo);
                        objParams[10] = new SqlParameter("@P_JOINTSUPERVISORNO", objStudent.JoinsupervisorNo);
                        objParams[11] = new SqlParameter("@P_JOINSUPERVISORMEMBERNO", objStudent.JoinsupervisormemberNo);
                        objParams[12] = new SqlParameter("@P_INSTITUTEFACULTYNO", objStudent.InstitutefacultyNo);
                        objParams[13] = new SqlParameter("@P_INSTITUTEFACMEMBERNO", objStudent.InstitutefacmemberNo);
                        objParams[14] = new SqlParameter("@P_DRCNO", objStudent.DrcNo);
                        objParams[15] = new SqlParameter("@P_DRCMEMBERNO", objStudent.DrcmemberNo);
                        objParams[16] = new SqlParameter("@P_ADMBATCH", objStudent.AdmBatch);
                        objParams[17] = new SqlParameter("@P_PHDSTATUSCAT", objStudent.Phdstatuscat);
                        objParams[18] = new SqlParameter("@P_COLLEGE_CODE", objStudent.CollegeCode);
                        objParams[19] = new SqlParameter("@P_CREDITS", objStudent.Credits);
                        objParams[20] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[20].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_PHD_STUD_SP_UPD_STUDENT", objParams, true);

                        if (objStudent.LastQualifiedExams != null)
                        {
                            foreach (QualifiedExam qualExam in objStudent.LastQualifiedExams)
                            {
                                this.UpdateLastQualExams(qualExam);
                            }
                        }
                        retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        return ret.ToString();


                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent-> " + ex.ToString());
                    }
                }


                public DataTableReader GetStudentPHDDetails(int idno)
                {
                    DataTableReader dtr = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        dtr = objSQLHelper.ExecuteDataSetSP("PKG_PHD_STUDENT_SP_RET_STUDENT_BYID", objParams).Tables[0].CreateDataReader();

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return dtr;
                }


                //Update Drc status
                public string UpdateDRCStatus(Student objStudent, string Status)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update drc 
                        objParams = new SqlParameter[3];

                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_STATUS", Status);
                        objParams[2] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[2].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_PHD_DRC_UPDATE", objParams, true);

                        retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        return ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent-> " + ex.ToString());
                    }
                }



                public DataSet RetrieveStudentDetailsPHD(string search, string category, string branchno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_SEARCHSTRING", search);
                        objParams[1] = new SqlParameter("@P_SEARCH", category);
                        objParams[2] = new SqlParameter("@P_BRANCHNO", branchno);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_SEARCH_PHD_STUDENT", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.RetrieveEmpDetails-> " + ex.ToString());
                    }
                    return ds;
                }



                //Update Supervisor status and Authority to the DGC member status
                public string UpdateDGCSupervisor(Student objStudent, string noofdgc)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    //int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update Student
                        objParams = new SqlParameter[16];
                        //First Add Student Parameter
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_SUPERVISORNO", objStudent.SupervisorNo);
                        objParams[2] = new SqlParameter("@P_SUPERVISORMEMBERNO", objStudent.SupervisormemberNo);
                        objParams[3] = new SqlParameter("@P_JOINTSUPERVISORNO", objStudent.JoinsupervisorNo);
                        objParams[4] = new SqlParameter("@P_JOINSUPERVISORMEMBERNO", objStudent.JoinsupervisormemberNo);
                        objParams[5] = new SqlParameter("@P_INSTITUTEFACULTYNO", objStudent.InstitutefacultyNo);
                        objParams[6] = new SqlParameter("@P_INSTITUTEFACMEMBERNO", objStudent.InstitutefacmemberNo);
                        objParams[7] = new SqlParameter("@P_DRCNO", objStudent.DrcNo);
                        objParams[8] = new SqlParameter("@P_DRCMEMBERNO", objStudent.DrcmemberNo);
                        objParams[9] = new SqlParameter("@P_DRCCHNO", objStudent.DrcChairNo);
                        objParams[10] = new SqlParameter("@P_DRCCHMEMBERNO", objStudent.DrcChairmemberNo);
                        objParams[11] = new SqlParameter("@P_COLLEGE_CODE", objStudent.CollegeCode);
                        objParams[12] = new SqlParameter("@P_NOOFDGC", noofdgc);
                        objParams[13] = new SqlParameter("@P_SECONDJOINTSUPERVISORNO", objStudent.Secondjoinsupervisorno);
                        objParams[14] = new SqlParameter("@P_SECONDJOINSUPERVISORMEMBERNO", objStudent.Secondjoinsupervisormemberno);
                        objParams[15] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[15].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_PHD_SUPERVISOR_SP_UPD_DGCMEMBER", objParams, true);

                        if (objStudent.LastQualifiedExams != null)
                        {
                            foreach (QualifiedExam qualExam in objStudent.LastQualifiedExams)
                            {
                                this.UpdateLastQualExams(qualExam);
                            }
                        }
                        retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        return ret.ToString();


                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent-> " + ex.ToString());
                    }
                }

                //Update HOD status
                public string UpdateHODStatus(Student objStudent)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update drc 
                        objParams = new SqlParameter[2];

                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[1].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_PHD_HOD_UPDATE", objParams, true);

                        retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        return ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateHODStatus-> " + ex.ToString());
                    }
                }





                //show registered confirm backlog subject
                public DataSet RetrieveStudentrConfirmedBackExamList(int sessionno, int idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_EXAM_REGISTERED_BACK_SUBJECTS_BY_STUDID", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentCurrentRegDetails-> " + ex.ToString());
                    }
                    return ds;
                }


                //Update phd student Result
                public string UpdatePHDStudentResult(Student objStudent)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    //int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update Student
                        objParams = new SqlParameter[8];
                        //First Add Student Parameter
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_PHDSUPERVISORNO", objStudent.PhdSupervisorNo);
                        objParams[2] = new SqlParameter("@P_TOPICS", objStudent.Topics);
                        objParams[3] = new SqlParameter("@P_WORKDONE", objStudent.Workdone);
                        objParams[4] = new SqlParameter("@P_REMARK", objStudent.Remark);
                        objParams[5] = new SqlParameter("@P_GRADE", objStudent.Grade);
                        objParams[6] = new SqlParameter("@P_COLLEGE_CODE", objStudent.CollegeCode);
                        objParams[7] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[7].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_PHD_UPD_STUDENT_RESULT", objParams, true);

                        if (objStudent.LastQualifiedExams != null)
                        {
                            foreach (QualifiedExam qualExam in objStudent.LastQualifiedExams)
                            {
                                this.UpdateLastQualExams(qualExam);
                            }
                        }
                        retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        return ret.ToString();


                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdatePHDStudentResult-> " + ex.ToString());
                    }
                }

                //Update Supervisor Remark status

                public string UpdateSupervisorRemarkStatus(Student objStudent)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update drc 
                        objParams = new SqlParameter[4];

                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_REMARK", objStudent.Remark);
                        objParams[2] = new SqlParameter("@P_GRADE", objStudent.Grade);
                        objParams[3] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[3].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_PHD_SUPERVISOR_REMARK_UPDATE", objParams, true);

                        retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        return ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateSupervisorRemarkStatus-> " + ex.ToString());
                    }
                }

                //Update phd student Annexure-B data

                public string InsUpdatePHDStudentAnnexureB(Student objStudent)
                {

                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    //int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;


                        //Update Student
                        objParams = new SqlParameter[9];
                        //First Add Student Parameter
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_PHDSUPERVISORNO", objStudent.PhdSupervisorNo);
                        objParams[2] = new SqlParameter("@P_ATTEMPT1DATE_WRITTEN", objStudent.Attempt1DateWritten);
                        objParams[3] = new SqlParameter("@P_ATTEMPT2DATE_WRITTEN", objStudent.Attempt2DateWritten);
                        objParams[4] = new SqlParameter("@P_ATTEMPT1DATE_ORAL", objStudent.Attempt1DateOral);
                        objParams[5] = new SqlParameter("@P_ATTEMPT2DATE_ORAL", objStudent.Attempt2DateOral);
                        //objParams[6] = new SqlParameter("@P_APPROVAD_DATE", objStudent.ApprovedDate);
                        objParams[6] = new SqlParameter("@P_RESEARCH_PLAN", objStudent.Workdone);
                        objParams[7] = new SqlParameter("@P_COLLEGE_CODE", objStudent.CollegeCode);
                        objParams[8] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[8].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_PHD_INS_UPD_STUDENT_ANNEXURE_B", objParams, true);

                        if (objStudent.LastQualifiedExams != null)
                        {
                            foreach (QualifiedExam qualExam in objStudent.LastQualifiedExams)
                            {
                                this.UpdateLastQualExams(qualExam);
                            }
                        }
                        retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        return ret.ToString();


                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdatePHDStudentResult-> " + ex.ToString());
                    }
                }


                //Supervisor Update Annexure-B approved date and status also...


                public string UpdateSupervisorAnnexureBStatus(Student objStudent, int result, int res_plan_status, int ua_no, string ipaddress)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update drc 
                        objParams = new SqlParameter[9];

                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_APPROVED_DATE", objStudent.ApprovedDate);
                        objParams[2] = new SqlParameter("@P_COURSECOME", objStudent.AccNo);
                        objParams[3] = new SqlParameter("@P_RESULT_STATUS", result);
                        objParams[4] = new SqlParameter("@P_RES_PLAN_STATUS", res_plan_status);
                        objParams[5] = new SqlParameter("@P_UANO", ua_no);
                        objParams[6] = new SqlParameter("@P_IPADDRESS", ipaddress);
                        objParams[7] = new SqlParameter("@P_DESCTIPTION", objStudent.Workdone);
                        objParams[8] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[8].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_PHD_SUPERVISOR_ANNEXUREB_STATUS", objParams, true);

                        retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        return ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateSupervisorRemarkStatus-> " + ex.ToString());
                    }
                }
                public DataSet GetStudentDetailsForPublishresult(int sessionNo, int schemeNo, int semesterno, int examtype, int prev_status, int College_ID)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeNo);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_EXAMTYPE", examtype); // added on 15-06-2020 by Vaishali

                        //objParams[3] = new SqlParameter("@P_SECTIONNO", sectionNo);
                        //objParams[4] = new SqlParameter("@P_EXAM", exam);

                        objParams[4] = new SqlParameter("@P_PREV_STATUS", prev_status);
                        objParams[5] = new SqlParameter("@P_COLLEGE_ID", College_ID);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_STUDENT_FOR_PUBLISHRESULT", objParams);
                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetailsForPublishresult()-> " + ex.ToString());
                    }
                    return ds;
                }

                //Add branch change info 


                public DataSet GetStudentApplyBranch(int idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_BRANCHSLIDING_ELIGIBILITY_CRITERIA", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentApplyBranch->" + ex.ToString());
                    }
                    return ds;
                }

                //Update Phd information
                public string UpdateStudentSupervisorInfo(Student objStudent)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update drc 
                        objParams = new SqlParameter[8];

                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_PHDSUPERVISORNO", objStudent.PhdSupervisorNo);
                        objParams[2] = new SqlParameter("@P_PHDCOSUPERVISORNO1", objStudent.PhdCoSupervisorNo1);
                        objParams[3] = new SqlParameter("@P_PHDCOSUPERVISORNO2", objStudent.PhdCoSupervisorNo2);
                        objParams[4] = new SqlParameter("@P_PHDSUPERVISORTYPE", objStudent.TypeSupervisorNo);
                        objParams[5] = new SqlParameter("@P_PHDCOSUPERVISORTYPE1", objStudent.TypeCoSupervisorNo1);
                        objParams[6] = new SqlParameter("@P_PHDCOSUPERVISORTYPE2", objStudent.TypeCoSupervisorNo2);
                        objParams[7] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[7].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_PHD_STUD_SUPERVISOR_UPD", objParams, true);

                        retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        return ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent-> " + ex.ToString());
                    }
                }
                //update confirm document
                public int AddStudentDocumentsconfirm(int idno, int docno, string col_code)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {

                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_DOCUMENTNO", docno);
                        objParams[2] = new SqlParameter("@P_COLLEGE_CODE", col_code);

                        if (objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_SP_ADD_STUD_DOC_LIST_CONFIRM", objParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.AddStudentDocuments->" + ex.ToString());
                    }

                    return retStatus;
                }
                //Delete  document
                public int DeleteStudentDocument(int idno, int docno, string col_code)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {

                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_DOCUMENTNO", docno);
                        objParams[2] = new SqlParameter("@P_COLLEGE_CODE", col_code);

                        if (objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_SP_DELETE_STUD_DOC_LIST", objParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.AddStudentDocuments->" + ex.ToString());
                    }

                    return retStatus;
                }
                public DataSet GetStudentDocListConfirm(int idno, int degreeno, int paymentType)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[2] = new SqlParameter("@P_PTYPE", paymentType);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_STUD_DOCUMENT_LIST_CONFIRM", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.GetStudentDocListConfirm-> " + ex.ToString());


                    }
                    return ds;
                }

                ////public string GetRegNoForBranchChange(int degreeNo, int branchNo, int semesterNo, int admBatch)
                ////{
                ////    string retStatus = string.Empty;
                ////    try
                ////    {
                ////        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                ////        SqlParameter[] objParams = null;

                ////        //SEND OUPT PARAMETER
                ////        objParams = new SqlParameter[5];
                ////        objParams[0] = new SqlParameter("@P_DEGREENO", degreeNo);
                ////        objParams[1] = new SqlParameter("@P_BRANCHNO", branchNo);
                ////        objParams[2] = new SqlParameter("@P_SEMNO", semesterNo);
                ////        objParams[3] = new SqlParameter("@P_ADMBATCH", admBatch);
                ////        objParams[4] = new SqlParameter("@P_OUT", SqlDbType.NVarChar, 25);
                ////        objParams[4].Direction = ParameterDirection.Output;

                ////        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_STU_REGNO", objParams, true);

                ////        retStatus = ret.ToString();

                ////    }
                ////    catch (Exception ex)
                ////    {
                ////        retStatus = "0";
                ////        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.AddStudent-> " + ex.ToString());
                ////    }

                ////    return retStatus;
                ////}

                ////public string GetRegNoForBranchChange(int degreeNo, int branchNo, int semesterNo, int admBatch, string enrollno)
                public string GetRegNoForBranchChange(int degreeNo, int branchNo, int admBatch, string enrollno)
                {
                    string retStatus = string.Empty;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //SEND OUPT PARAMETER
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeNo);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchNo);
                        ////objParams[2] = new SqlParameter("@P_SEMNO", semesterNo);
                        objParams[2] = new SqlParameter("@P_ADMBATCH", admBatch);
                        objParams[3] = new SqlParameter("@P_ENROLLNO", enrollno);
                        objParams[4] = new SqlParameter("@P_OUT", SqlDbType.NVarChar, 25);
                        objParams[4].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_STU_REGNO", objParams, true);

                        retStatus = ret.ToString();
                    }
                    catch (Exception ex)
                    {
                        retStatus = "0";
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.AddStudent-> " + ex.ToString());
                    }

                    return retStatus;
                }

                public DataSet GetStudentListForIssueCertBona(int idNo)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idNo);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_LIST_CERT_BONAFIDE", objParams);
                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.CertificateMasterController.GetStudentListForIssueCert-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetCancelCourseData(int idno, int sessionno, int semesterno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);




                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GETALL_CANCEL_COURSE_DETAILS", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.GetCancelCourseData() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }


                public int UpdateCancelCourse(Student_Acd objStud)
                {

                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[] 
                        { 
                             
                             new SqlParameter("@P_SESSIONNO",objStud.SessionNo),
                             new SqlParameter("@P_IDNO",objStud.IdNo),
                             new SqlParameter("@P_ROLLNO",objStud.RollNo),
                             new SqlParameter("@P_SEMESTERNO",objStud.SemesterNo),
                             new SqlParameter("@P_SCHEMENO",objStud.SchemeNo),
                             new SqlParameter("@P_COURSENOS",objStud.Coursenos),
                             new SqlParameter("@P_UA_NO",objStud.UA_No),
                             new SqlParameter("@P_REASON",objStud.Reason),
                             new SqlParameter("@P_IPADDRESS",objStud.Ipaddress),
                             new SqlParameter("@P_OUT",SqlDbType.Int)
                                                      
                        };
                        objParams[objParams.Length - 1].Direction = ParameterDirection.Output;
                        if (objSQLHelper.ExecuteNonQuerySP("PKG_CANCEL_COURSE", objParams, false) != null)

                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.AddCopyCase --> " + ex.ToString());
                    }
                    return retStatus;
                }
                public int UpdateStudentname(int idno, string name, string StudEmail, string StudMobile, string StudIndusEmail, string FMob, string FEmail, string MMob, string MEmail)
                {

                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[] 
                        {  
                             new SqlParameter("@P_IDNO",idno),
                             new SqlParameter("@P_name",name),
                             new SqlParameter("@P_StudEmail",StudEmail),
                             new SqlParameter("@P_StudMobile",StudMobile),
                             new SqlParameter("@P_StudIndusEmail",StudIndusEmail),
                             new SqlParameter("@P_FMob",FMob),
                             new SqlParameter("@P_FEmail",FEmail),
                             new SqlParameter("@P_MMob",MMob),
                             new SqlParameter("@P_MEmail",MEmail),
                             new SqlParameter("@P_OUT",SqlDbType.Int)
                                                      
                        };
                        objParams[objParams.Length - 1].Direction = ParameterDirection.Output;
                        if (objSQLHelper.ExecuteNonQuerySP("PKG_UPDATE_NAME", objParams, false) != null)

                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.AddCopyCase --> " + ex.ToString());
                    }
                    return retStatus;
                }


                public int InsertOperatorAllot(Student_Acd objStudent, int OP)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[7];

                        objParams[0] = new SqlParameter("@P_SESSIONNO", objStudent.SessionNo);
                        objParams[1] = new SqlParameter("@P_COLLEGE_ID", objStudent.COLLEGE_ID);
                        objParams[2] = new SqlParameter("@P_COURSENO", objStudent.CourseNo);
                        objParams[3] = new SqlParameter("@P_UA_NO", objStudent.UA_No);
                        objParams[4] = new SqlParameter("@P_OPERATOR", OP);
                        objParams[5] = new SqlParameter("@P_INTEXT", objStudent.INTEXT);
                        objParams[6] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[6].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_INST_OPERATOR", objParams, false);
                        if (ret != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent_TeachAllot-> " + ex.ToString());
                    }
                    return retStatus;
                }

                public int InsertOperatorAllot(Student_Acd objStudent, int OP, int examtype, int schemeno, int semesterno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[10];

                        objParams[0] = new SqlParameter("@P_SESSIONNO", objStudent.SessionNo);
                        objParams[1] = new SqlParameter("@P_COLLEGE_ID", objStudent.COLLEGE_ID);
                        objParams[2] = new SqlParameter("@P_COURSENO", objStudent.CourseNo);
                        objParams[3] = new SqlParameter("@P_UA_NO", objStudent.UA_No);
                        objParams[4] = new SqlParameter("@P_OPERATOR", OP);
                        objParams[5] = new SqlParameter("@P_INTEXT", objStudent.INTEXT);
                        objParams[6] = new SqlParameter("@P_EXAMTYPE", examtype);   // added on 18-03-2020 by Vaishali
                        objParams[7] = new SqlParameter("@P_SCHEMENO", schemeno);   // added on 18-03-2020 by Vaishali
                        objParams[8] = new SqlParameter("@P_SEMESTERNO", semesterno);   // added on 18-03-2020 by Vaishali
                        objParams[9] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[9].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_INST_OPERATOR", objParams, false);
                        if (ret != null && Convert.ToInt32(ret) == 1)
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        else if (ret != null && Convert.ToInt32(ret) == 2)                  // added on 23-03-2020 by Vaishali
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent_TeachAllot-> " + ex.ToString());
                    }
                    return retStatus;
                }

                public int UpdateOperatorAllot(Student_Acd objStudent, int OP)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[7];

                        objParams[0] = new SqlParameter("@P_SESSIONNO", objStudent.SessionNo);
                        objParams[1] = new SqlParameter("@P_COLLEGE_ID", objStudent.COLLEGE_ID);
                        objParams[2] = new SqlParameter("@P_COURSENO", objStudent.CourseNo);
                        objParams[3] = new SqlParameter("@P_UA_NO", objStudent.UA_No);
                        objParams[4] = new SqlParameter("@P_OPERATOR", OP);
                        objParams[5] = new SqlParameter("@P_INTEXT", objStudent.INTEXT);
                        objParams[6] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[6].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_upd_OPERATOR", objParams, false);
                        if (ret != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent_TeachAllot-> " + ex.ToString());
                    }
                    return retStatus;
                }

                public int UpdateStudentSelection(int sessionno, string usernos, string selected, string SelectedMeritNo, string WaitingMeritNo)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_USERNOS", usernos);
                        objParams[2] = new SqlParameter("@P_SELECTED", selected);
                        objParams[3] = new SqlParameter("@P_SELECTEDMERITNO", SelectedMeritNo);
                        objParams[4] = new SqlParameter("@P_WAITINGNO", WaitingMeritNo);
                        objParams[5] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[5].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_SELECTED", objParams, false);
                        if (ret != null)
                            if (ret.ToString() != "-99")
                                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentSelection-> " + ex.ToString());
                    }
                    return retStatus;
                }
                public DataSet GetStudentsBySchemeBACK(int admbatch, int schemeno, int degreeno, int schemetype, int semno, int college_id)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_SCHEMETYPE", schemetype);
                        objParams[4] = new SqlParameter("@P_SEM", semno);
                        objParams[5] = new SqlParameter("@P_COLLEGEID", college_id);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_BY_SCHEME1_BACK", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForScheme-> " + ex.ToString());
                    }

                    return ds;
                }
                public SqlDataReader GetStudentDetailsBySelection(int sessionno, int degreeno, int branchno, int selected)
                {
                    SqlDataReader dtr = null;
                    try
                    {
                        SQLHelper objSH = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[2] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[3] = new SqlParameter("@P_SELECTED", selected);

                        dtr = objSH.ExecuteReaderSP("PKG_ACD_SELECTED_STUDENTS_OFFER_LATTER", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentRegistration.GetStudentDetails-> " + ex.ToString());
                    }
                    return dtr;
                }
                public SqlDataReader GetUserDetails(int ua_no)
                {
                    SqlDataReader dtr = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_UANO", ua_no);
                        dtr = objSQLHelper.ExecuteReaderSP("PKG_STUDENT_TEACHER_ON_GET_USER", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return dtr;
                }
                public DataSet RetrieveStudentDetailsForRegistration(string search, string category, string val)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_SEARCHSTRING", search);
                        objParams[1] = new SqlParameter("@P_SEARCH", category);
                        objParams[2] = new SqlParameter("@P_ADMBATCH", val);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_SEARCH_STUDENT_FOR_REGISTRATION", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.RetrieveEmpDetails-> " + ex.ToString());
                    }
                    return ds;
                }
                public DataSet GetStudentDetailsForRegistration(int idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        //objParams[1] = new SqlParameter("@P_ADMBATCH", admbatch);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_STUDENT_DETAILSBY_NAME", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetailsForRegistration-> " + ex.ToString());
                    }
                    return ds;
                }
                public string UpdateNewRegistrationStudentDetails(Student objStudent, StudentQualExm objStudQExm, CertificateMaster objCertMaster)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    //int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update Student
                        objParams = new SqlParameter[21];
                        //First Add Student Parameter
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_STUDNAME", objStudent.StudName);
                        objParams[2] = new SqlParameter("@P_MOTHERNAME", objStudent.MotherName);
                        objParams[3] = new SqlParameter("@P_FATHERNAME", objStudent.FatherName);
                        objParams[4] = new SqlParameter("@P_SEX", objStudent.Sex);
                        objParams[5] = new SqlParameter("@P_DOB", objStudent.Dob);
                        objParams[6] = new SqlParameter("@P_SSCROLLNO", objStudQExm.SSCRollNo);
                        //objParams[7] = new SqlParameter("@P_SSCYEAR", objStudQExm.SSCYear);
                        objParams[7] = new SqlParameter("@P_BOARD", objStudQExm.BOARD);
                        objParams[8] = new SqlParameter("@P_LASTCOLLEGE", objStudQExm.SCHOOL_COLLEGE_NAME);
                        objParams[9] = new SqlParameter("@P_LASTROLLNO", objStudQExm.QEXMROLLNO);
                        objParams[10] = new SqlParameter("@P_LASTYEAR", objStudQExm.YEAR_OF_EXAMHSSC);
                        objParams[11] = new SqlParameter("@P_STUDMOBILE", objStudent.StudentMobile);
                        objParams[12] = new SqlParameter("@P_EMAIL", objStudent.EmailID);
                        objParams[13] = new SqlParameter("@P_STATEOFDOMECIAL", objStudent.Stateof_domecial);
                        objParams[14] = new SqlParameter("@P_NATIONALITYNO", objStudent.NationalityNo);
                        objParams[15] = new SqlParameter("@P_MIGRATIONSTATUS", objCertMaster.MigrationStatus);
                        objParams[16] = new SqlParameter("@P_ENROLLNO", objStudent.EnrollNo);
                        objParams[17] = new SqlParameter("@P_REGSTATUS", objCertMaster.RegStatus);
                        objParams[18] = new SqlParameter("@P_CARDNO", objCertMaster.CardNo);
                        objParams[19] = new SqlParameter("@P_ADMBATCH", objStudent.AdmBatch);
                        objParams[20] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[20].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_GENERATE_REGNO_AND_SAVE_STUDENT_DETAILS", objParams, true);

                        if (objStudent.LastQualifiedExams != null)
                        {
                            foreach (QualifiedExam qualExam in objStudent.LastQualifiedExams)
                            {
                                this.UpdateLastQualExams(qualExam);
                            }
                        }
                        retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        return ret.ToString();

                        //int status = (Int32)objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUDENT", objParams, true);
                        //if (status != -99 && objStudent.LastQualifiedExams != null)
                        //{
                        //    foreach (QualifiedExam qualExam in objStudent.LastQualifiedExams)
                        //    {
                        //        this.UpdateLastQualExams(qualExam);
                        //    }
                        //}
                        //retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        //return retStatus;  

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateNewRegistrationStudentDetails-> " + ex.ToString());
                    }
                }
                public DataSet RetrieveStudentDetailsRegistrationNoAllotted(string search, string category)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_SEARCHSTRING", search);
                        objParams[1] = new SqlParameter("@P_SEARCH", category);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_SP_STUDENT_SEARCH_BY_ENROLLNO", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.RetrieveEmpDetails-> " + ex.ToString());
                    }
                    return ds;
                }
                public DataSet GetStudentDetailsForMigration(int idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        //objParams[1] = new SqlParameter("@P_ADMBATCH", admbatch);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_STUDENT_DETAILS_FOR_MIGRATION", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetailsForRegistration-> " + ex.ToString());
                    }
                    return ds;
                }
                public string UpdateMigrationStudentDetails(Student objStudent, StudentQualExm objStudQExm, CertificateMaster objCertMaster)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    //int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update Student
                        objParams = new SqlParameter[13];
                        //First Add Student Parameter
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_STUDNAME", objStudent.StudName);
                        objParams[2] = new SqlParameter("@P_FATHERNAME", objStudent.FatherName);
                        objParams[3] = new SqlParameter("@P_LASTCOLLEGE", objStudQExm.SCHOOL_COLLEGE_NAME);
                        objParams[4] = new SqlParameter("@P_LASTROLLNO", objStudQExm.QEXMROLLNO);
                        objParams[5] = new SqlParameter("@P_LASTYEAR", objStudQExm.YEAR_OF_EXAMHSSC);
                        objParams[6] = new SqlParameter("@P_STUDMOBILE", objStudent.StudentMobile);
                        objParams[7] = new SqlParameter("@P_EMAIL", objStudent.EmailID);
                        objParams[8] = new SqlParameter("@P_PADDRESS", objStudent.PAddress);
                        objParams[9] = new SqlParameter("@P_MIGRATION_ORG_DUPLICT", objCertMaster.Migration_org_duplct);
                        objParams[10] = new SqlParameter("@P_CARDNO", objCertMaster.CardNo);
                        objParams[11] = new SqlParameter("@P_ADMBATCH", objStudent.AdmBatch);
                        objParams[12] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[12].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_SAVE_MIGRATION_DETAILS", objParams, true);

                        if (objStudent.LastQualifiedExams != null)
                        {
                            foreach (QualifiedExam qualExam in objStudent.LastQualifiedExams)
                            {
                                this.UpdateLastQualExams(qualExam);
                            }
                        }
                        retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        return ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateMigrationStudentDetails-> " + ex.ToString());
                    }
                }

                //public int bulkStudentSemPromo(Student objStudent, int sessionNo, string ipadd)
                //{
                //    int retStatus = Convert.ToInt32(CustomStatus.Others);
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;

                //        //Update Student semester Rtm
                //        objParams = new SqlParameter[6];
                //        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                //        objParams[1] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                //        objParams[2] = new SqlParameter("@P_UA_NO", objStudent.Uano);
                //        objParams[3] = new SqlParameter("@P_IPADDRESS", ipadd);
                //        objParams[4] = new SqlParameter("@P_SESSIONNO", sessionNo);
                //        objParams[5] = new SqlParameter("@P_OUT", SqlDbType.Int);
                //        objParams[5].Direction = ParameterDirection.Output;

                //        int status = (Int32)objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_INS_SEM_PROMOTION_NEW", objParams, true);
                //        if (status != -99)
                //            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                //        else
                //            retStatus = Convert.ToInt32(CustomStatus.Error);
                //        return retStatus;
                //    }
                //    catch (Exception ex)
                //    {
                //        retStatus = Convert.ToInt32(CustomStatus.Error);
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent-> " + ex.ToString());
                //    }
                //}

                /// <summary>
                /// //******ADDED BY: M. REHBAR SHEIKH ON 18-06-2019******
                /// </summary>
                public int bulkStudentSemPromo(Student objStudent, int sessionNo, string ipadd, int yearID)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update Student semester Rtm
                        objParams = new SqlParameter[7];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[2] = new SqlParameter("@P_UA_NO", objStudent.Uano);
                        objParams[3] = new SqlParameter("@P_IPADDRESS", ipadd);
                        objParams[4] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[5] = new SqlParameter("@P_ACADEMIC_YEAR_ID", yearID);
                        objParams[6] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[6].Direction = ParameterDirection.Output;

                        int status = (Int32)objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_INS_SEM_PROMOTION_NEW", objParams, true);
                        if (status != -99)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);
                        return retStatus;
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent-> " + ex.ToString());
                    }
                }


                //******ADDED BY: M. REHBAR SHEIKH ON 18-06-2019******
                public DataSet GetBulkSemesterPromotionData(int sessionno, int schemeno, int semesterno, int degreeno, int branchno, int collegeid)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[2] = new SqlParameter("@P_SEMESTER_NO", semesterno);
                        objParams[3] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[4] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[5] = new SqlParameter("@P_COLLEGE_ID", collegeid);
                        if (Convert.ToInt32(System.Web.HttpContext.Current.Session["OrgId"]) == 1 || Convert.ToInt32(System.Web.HttpContext.Current.Session["OrgId"]) == 6)
                        {
                            ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_DETAILS_BULK_SEMESTER_PROMOTION_RCPIT", objParams);
                        }
                        else if (Convert.ToInt32(System.Web.HttpContext.Current.Session["OrgId"]) == 8)
                        {
                            ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_DETAILS_BULK_SEMESTER_PROMOTION_MITAOE", objParams);
                        }
                        else
                        {
                            ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_DETAILS_BULK_SEMESTER_PROMOTION", objParams);
                        }

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetBulkSemesterPromotionData->" + ex.ToString());
                    }
                    return ds;
                }

                //Added by Mr.Manish Walde on date 05/04/2016
                //public DataSet GetCourseFor_Reval(int idno, int sessionno, int semesterno, int select)
                //{
                //    DataSet ds = null;

                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        objParams = new SqlParameter[4];
                //        objParams[0] = new SqlParameter("@P_IDNO", idno);
                //        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                //        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                //        objParams[3] = new SqlParameter("@P_OPERATION_FLAG ", select);

                //        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_COURSE_FOR_REVALUATION", objParams);

                //    }
                //    catch (Exception ex)
                //    {
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                //    }
                //    return ds;
                //}

                public DataSet getseatcount(int DEGREENO, int QUALIFYNO, int ROUNDNO, int admcat, int admBatch)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_DEGREENO", DEGREENO);
                        objParams[1] = new SqlParameter("@P_QUALIFYNO", QUALIFYNO);
                        objParams[2] = new SqlParameter("@P_ROUNDNO", ROUNDNO);
                        objParams[3] = new SqlParameter("@P_ALLOTCAT", admcat);
                        objParams[4] = new SqlParameter("@P_ADMBATCH", admBatch);

                        //  ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_USER_SEATCOUNT", objParams);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_BRANCHWISE_ALLOTMENT_STATUS", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.getseatcount-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetEligibleStudents(int ADMBAT, int DEGREENO, int QULIFYNO)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@ADMBAT", ADMBAT);
                        objParams[1] = new SqlParameter("@DEGREENO", DEGREENO);
                        objParams[2] = new SqlParameter("@QULIFYNO", QULIFYNO);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_USER_ELIGIBLE_STUDENT_LIST", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetEligibleStudents-> " + ex.ToString());
                    }
                    return ds;
                }

                public string UpdateApplicantBranchPref(int SESSIONNO, int USERNO, string branchpref, string ipaddress, string appid, int idno)
                {

                    string retStatus = string.Empty;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;


                        objParams = new SqlParameter[7];

                        objParams[0] = new SqlParameter("@P_SESSIONNO", SESSIONNO);
                        objParams[1] = new SqlParameter("@P_USERNO", USERNO);

                        objParams[2] = new SqlParameter("@P_BRANCHPREF", branchpref);
                        objParams[3] = new SqlParameter("@P_IPADDRESS", ipaddress);
                        objParams[4] = new SqlParameter("@P_APPLICATIONID", appid);
                        objParams[5] = new SqlParameter("@P_IDNO", idno);
                        objParams[6] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[6].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_MODIFY_NEWUSER_BRANCHPREF", objParams, true);
                        retStatus = ret.ToString();

                        return retStatus;

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic-> " + ex.ToString());
                    }
                    return retStatus;
                }

                public int AllotStudentBranch(int sessionno, string usernos, string ipaddress, int DEGREENO, int QUALIFYNO)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[]
                        {
                      
                        new SqlParameter("@P_SESSIONNO", sessionno),
                        new SqlParameter("@P_USERNO", usernos),
                        new SqlParameter("@P_IPADDRESS", ipaddress),
                        new SqlParameter("@P_DEGREENO", DEGREENO),
                        new SqlParameter("@P_QUALIFYNO", QUALIFYNO),
                        new SqlParameter("@P_OUT", SqlDbType.Int)

                        };

                        objParams[objParams.Length - 1].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_ALLOT_BRANCHPREF_BULK", objParams, true);

                        if (ret != null && ret.ToString() != "-99")

                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AllotStudentBranch-> " + ex.ToString());
                    }
                    return retStatus;
                }

                public DataSet GetBranchAllotementList(int SESSIONNO, int DEGREENO, int QUALIFYNO)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", SESSIONNO);
                        objParams[1] = new SqlParameter("@P_DEGREENO", DEGREENO);
                        objParams[2] = new SqlParameter("@P_QUALIFYNO", QUALIFYNO);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_STUD_BRANCHPREF_STATUS", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetBranchAllotementList() -->" + ex.ToString());

                    }
                    return ds;
                }
                public DataSet GetStudentDetailsRtm(int idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_SEM_PROMOTION", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }
                public DataSet GetStudenRegList_DateWise(int ADMBATCH)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_ADMBATCH", ADMBATCH);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_REPORT_REGISTRATION_COUNT_DATEWISE", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentList_DateWise() -->" + ex.ToString());

                    }
                    return ds;
                }
                public DataSet GetConfirmWaitingbothStudents(int ADMBATCH, int STATUS, int DEGREE, int ENTERANCE, int ROUND)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_ADMBATCH", ADMBATCH);
                        objParams[1] = new SqlParameter("@P_STATUS", STATUS);
                        objParams[2] = new SqlParameter("@P_DEGREE", DEGREE);
                        objParams[3] = new SqlParameter("@P_ENTERANCE", ENTERANCE);
                        objParams[4] = new SqlParameter("@P_ROUND", ROUND);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_USER_SEAT_CONFIRM_WAITING", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetEligibleStudents-> " + ex.ToString());
                    }
                    return ds;
                }

                //public int InsertJoiningDetails(int joined, int userno, int ADMBATCH, string document_list)
                //{
                //    int retStatus = Convert.ToInt32(CustomStatus.Others);
                //    try
                //    {

                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = new SqlParameter[5];
                //        objParams[0] = new SqlParameter("@P_JOINED", joined);
                //        objParams[1] = new SqlParameter("@P_USERNO", userno);
                //        objParams[2] = new SqlParameter("@P_ADMBATCH", ADMBATCH);
                //        objParams[3] = new SqlParameter("@P_DOCUMENT_LIST", document_list);
                //        objParams[4] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                //        objParams[4].Direction = ParameterDirection.Output;

                //        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_INSERT_APPLICANT_JOINING_DETAILS", objParams, true);
                //        retStatus = Convert.ToInt32(ret);
                //        return retStatus;
                //    }
                //    catch (Exception ex)
                //    {
                //        retStatus = Convert.ToInt32(CustomStatus.Error);
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.InsertJoiningDetails() -->" + ex.ToString());
                //    }
                //}

                public int InsertJoiningDetails(int userno, string docno, string path, string filename, string document_status)// Modify by Maithili [5/2/2020]
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {

                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_USERNO", userno);
                        objParams[1] = new SqlParameter("@P_DOCTYPENO", docno);
                        objParams[2] = new SqlParameter("@P_PATH", path);
                        objParams[3] = new SqlParameter("@P_FILENAME", filename);
                        objParams[4] = new SqlParameter("@P_DOCUMENT_STATUS", document_status);
                        objParams[5] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[5].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_DOCUMENTENTRY_INS", objParams, true);
                        retStatus = Convert.ToInt32(ret);
                        return retStatus;
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.InsertJoiningDetails() -->" + ex.ToString());
                    }
                }

                //added by reena
                //public DataSet GetAdmittedStudents(int admbatch, int degreeno, int semesterno)
                //{
                //    DataSet ds = null;

                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        objParams = new SqlParameter[3];
                //        objParams[0] = new SqlParameter("@P_ADMBATCH", admbatch);
                //        objParams[1] = new SqlParameter("@P_DEGREENO", degreeno);
                //        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                //        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_ADM_CONFIRM_STUDENT", objParams);

                //    }
                //    catch (Exception ex)
                //    {

                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                //    }
                //    return ds;
                //}
                public int UpdateAdmStatus(string idno)
                {
                    //DataSet ds = null;
                    int retStatus = Convert.ToInt32(IITMS.UAIMS.CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        {
                            objParams[0] = new SqlParameter("@P_IDNO", idno);
                            objParams[1] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                            objParams[1].Direction = ParameterDirection.Output;
                        };
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_UPD_STUDENT_ADM_STATUS", objParams, false);

                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(IITMS.UAIMS.CustomStatus.TransactionFailed);
                        else
                            retStatus = Convert.ToInt32(IITMS.UAIMS.CustomStatus.RecordSaved);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic-> " + ex.Message + " " + ex.StackTrace);
                    }
                    return retStatus;
                }
                public DataSet GetAdmittedStudents(int admbatch, int degreeno, int branch)
                {
                    DataSet ds = null;



                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[1] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[2] = new SqlParameter("@P_BRANCHNO", branch);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_ADM_CONFIRM_STUDENT", objParams);



                    }
                    catch (Exception ex)
                    {



                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }
                //FOR BRANCH PREFRENCE ALLOTMENT ROUND-2

                public DataSet GetEligibleStudents_ForRountTwo(int ADMBAT, int DEGREENO, int QULIFYNO)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@ADMBAT", ADMBAT);
                        objParams[1] = new SqlParameter("@DEGREENO", DEGREENO);
                        objParams[2] = new SqlParameter("@QULIFYNO", QULIFYNO);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_USER_ELIGIBLE_STUDENT_LIST_RND2", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetEligibleStudents-> " + ex.ToString());
                    }
                    return ds;
                }

                public int AllotStudentBranch_ForRoundTwo(int sessionno, string usernos, string ipaddress, int DEGREENO, int QUALIFYNO)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[]
                        {
                      
                        new SqlParameter("@P_SESSIONNO", sessionno),
                        new SqlParameter("@P_USERNO", usernos),
                        new SqlParameter("@P_IPADDRESS", ipaddress),
                        new SqlParameter("@P_DEGREENO", DEGREENO),
                        new SqlParameter("@P_QUALIFYNO", QUALIFYNO),
                        new SqlParameter("@P_OUT", SqlDbType.Int)

                        };

                        objParams[objParams.Length - 1].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_ALLOT_BRANCHPREF_BULK_ROUND2", objParams, true);

                        if (ret != null && ret.ToString() != "-99")

                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AllotStudentBranch-> " + ex.ToString());
                    }
                    return retStatus;
                }
                //public int AllotStudentBranch_ForSVDET(int sessionno, string usernos, string ipaddress, int DEGREENO, int QUALIFYNO)
                //{
                //    int retStatus = Convert.ToInt32(CustomStatus.Others);
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = new SqlParameter[]
                //        {

                //        new SqlParameter("@P_SESSIONNO", sessionno),
                //        new SqlParameter("@P_USERNO", usernos),
                //        new SqlParameter("@P_IPADDRESS", ipaddress),
                //        new SqlParameter("@P_DEGREENO", DEGREENO),
                //        new SqlParameter("@P_QUALIFYNO", QUALIFYNO),
                //        new SqlParameter("@P_OUT", SqlDbType.Int)

                //        };

                //        objParams[objParams.Length - 1].Direction = ParameterDirection.Output;

                //        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_ALLOT_BRANCHPREF_BULK_SVDET", objParams, true);

                //        if (ret != null && ret.ToString() != "-99")

                //            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                //        else
                //            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);

                //    }
                //    catch (Exception ex)
                //    {

                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AllotStudentBranch-> " + ex.ToString());
                //    }
                //    return retStatus;
                //}

                public int AllotStudentBranch_ForSVDET(int sessionno, string usernos, string ipaddress, int DEGREENO, int QUALIFYNO, int Roundno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[]
                        {
                      
                        new SqlParameter("@P_SESSIONNO", sessionno),
                        new SqlParameter("@P_USERNO", usernos),
                        new SqlParameter("@P_IPADDRESS", ipaddress),
                        new SqlParameter("@P_DEGREENO", DEGREENO),
                        new SqlParameter("@P_QUALIFYNO", QUALIFYNO),
                        new SqlParameter("@P_ROUNDNO", Roundno),
                        new SqlParameter("@P_OUT", SqlDbType.Int)

                        };

                        objParams[objParams.Length - 1].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_ALLOT_BRANCHPREF_BULK_SVDET", objParams, true);

                        if (ret != null && ret.ToString() != "-99")

                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AllotStudentBranch-> " + ex.ToString());
                    }
                    return retStatus;
                }

                public int AllotStudentBranch_ForBranchPREF(int sessionno, string usernos, string ipaddress, int DEGREENO, int QUALIFYNO, int ROUND, int ALLOTCAT)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[]
                        {
                      
                        new SqlParameter("@P_SESSIONNO", sessionno),
                        new SqlParameter("@P_USERNO", usernos),
                        new SqlParameter("@P_IPADDRESS", ipaddress),
                        new SqlParameter("@P_DEGREENO", DEGREENO),
                        new SqlParameter("@P_QUALIFYNO", QUALIFYNO),
                        new SqlParameter("@P_ALLOTCAT", ALLOTCAT),
                        new SqlParameter("@P_ROUNDNO", ROUND),
                        new SqlParameter("@P_OUT", SqlDbType.Int)

                        };

                        objParams[objParams.Length - 1].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_ALLOT_BRANCHPREF_BULK_ALLOTMENT", objParams, true);

                        if (ret != null && ret.ToString() != "-99")

                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AllotStudentBranch-> " + ex.ToString());
                    }
                    return retStatus;
                }


                public int AddStudentApplication(int idno, int Sessionno, string COM_CODE, int AppId, string Reason, int AppStatus, string txtcorrname, string txtcorrfatname, string txtcorrmotname, string mailaddress, int noofcopies)
                {

                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[] 
                        {                             
                             new SqlParameter("@P_IDNO",idno),
                             new SqlParameter("@P_SESSIONNO",Sessionno),
                             new SqlParameter("@P_COM_CODE",COM_CODE),
                             new SqlParameter("@P_APPID",AppId),  
                             new SqlParameter("@P_REASON",Reason), 
                             new SqlParameter("@P_APPSTATUS",AppStatus), 
                             new SqlParameter("@P_CORRSTUDNAME",txtcorrname),  
                             new SqlParameter("@P_CORRFATNAME",txtcorrfatname), 
                             new SqlParameter("@P_CORRMOTNAME",txtcorrmotname), 
                             new SqlParameter("@P_MAILINGADDRESS",mailaddress), 
                             new SqlParameter("@P_NOOFCOPIES",noofcopies), 
                             new SqlParameter("@P_OUT",SqlDbType.Int)                                                      
                        };
                        objParams[objParams.Length - 1].Direction = ParameterDirection.Output;
                        object obj = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_ADD_STUDENT_APPLICATION_LIST", objParams, true);

                        if (obj != null && obj.ToString() != "-99" && obj.ToString() != "-1001")
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.AddStudentApplication --> " + ex.ToString());
                    }
                    return retStatus;
                }
                public DataSet GetStudentApplicationsForModfication(int APPIDADMIN)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_APPIDADMIN", APPIDADMIN);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_STUDENT_APPLICATION_FOR_MODIFICATION", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.ElectionController.GetApplicationsForElePost() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                public int Insert_Payment_StudentApplicationForm(int idno, int sessionno, int SEMESTERNO, string ORDER_ID, int PAYMENTTYPE, int APNO, string REGUGLAR_COURSE_AMOUNT,
            string BACKLOG_COURSE_AMOUNT, string SUPPLY_COURSE_AMOUNT, string MAKEUP_COURSE_AMOUNT, string PaperSeeingFee, string ReadressalFee, string NameCorrectionFee,
            string DuplicategradeCardFee, string OfficailTranscriptFee, string ConsolidatedgcswFee, string ProvisionalDegreeFee, string LATE_FEES_AMOUNT, string amount,
            string COM_CODE1)//int dmno, , string AMOUNT,Int64 customerRef, string APTRANSACTIONID)
                {
                    int retStatus = 0;
                    try
                    {
                        SQLHelper objSqlHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] param = new SqlParameter[]
                        {                         
                            new SqlParameter("@P_IDNO", idno),
                            new SqlParameter("@P_SESSIONNO", sessionno),
                            new SqlParameter("@P_SEMESTERNO", SEMESTERNO),
                            new SqlParameter("@P_ORDER_ID", ORDER_ID),
                            new SqlParameter("@P_PAYMENTTYPE", PAYMENTTYPE),
                            new SqlParameter("@P_APNO", APNO),
                            new SqlParameter("@P_COM_CODE", COM_CODE1),
                            new SqlParameter("@P_REGUGLAR_COURSE_AMOUNT", REGUGLAR_COURSE_AMOUNT),
                            new SqlParameter("@P_BACKLOG_COURSE_AMOUNT", BACKLOG_COURSE_AMOUNT),
                            new SqlParameter("@P_SUPPLY_COURSE_AMOUNT", SUPPLY_COURSE_AMOUNT),
                            new SqlParameter("@P_MAKEUP_COURSE_AMOUNT", MAKEUP_COURSE_AMOUNT),
                            new SqlParameter("@P_PAPER_SEEING_AMOUNT", PaperSeeingFee),
                            new SqlParameter("@P_READRESSAL_AMOUNT", ReadressalFee),                  
                            new SqlParameter("@P_NAME_CORRECTION_AMOUNT", NameCorrectionFee),
                            new SqlParameter("@P_DUPLICATEGRADECARD_AMOUNT", DuplicategradeCardFee),
                            new SqlParameter("@P_OFFICIALTRANSCRIPT_AMOUNT", OfficailTranscriptFee),
                            new SqlParameter("@P_CONSOLIDATEDGRADECSW_AMOUNT", ConsolidatedgcswFee),
                            new SqlParameter("@P_PROVISIONALDEGREE_AMOUNT", ProvisionalDegreeFee),
                            new SqlParameter("@P_LATE_FEES_AMOUNT", LATE_FEES_AMOUNT),
                            new SqlParameter("@P_TOTAL_AMOUNT", amount),
                          
                            new SqlParameter("@P_OUTPUT", SqlDbType.Int)                        
                        };
                        param[param.Length - 1].Direction = ParameterDirection.Output;
                        object ret = objSqlHelper.ExecuteNonQuerySP("PR_INS_ONLINE_PAYMENT_FOR_STUDENT_APPLICATION", param, true);

                        if (ret != null && ret.ToString() != "-99")
                            retStatus = Convert.ToInt32(ret);
                        else
                            retStatus = -99;
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdatePaymenttypeofStudents-> " + ex.ToString());
                    }
                    return retStatus;
                }

                public int StudentApplicationFormApprove(int apidno, int idno, int approve_status, string Remark, int UserNo)
                {
                    int status = 0;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[] 
                { 
                   
                    new SqlParameter("@P_APP_TRANS_ID", idno) ,
                    new SqlParameter("@P_IDNO", idno) ,
                    new SqlParameter("@P_APP_STATUS", approve_status) ,
                      new SqlParameter("@P_REMARK", Remark) ,
                      new SqlParameter("@P_USER_NO", UserNo) ,
                    new SqlParameter("@P_OUT", status) 
                };
                        objParams[objParams.Length - 1].Direction = ParameterDirection.InputOutput;

                        object obj = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_STUDENT_APPLICATION_FORM_APPROVAL", objParams, true);

                        if (obj != null && obj.ToString() != "-99" && obj.ToString() != "-1001")
                            status = Convert.ToInt32(CustomStatus.RecordSaved);
                        else
                            status = Convert.ToInt32(CustomStatus.Error);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.BatchController.GetBatchByNo() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return status;
                }
                public DataSet GetStudentRecieptInformation(int idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        //objParams[1] = new SqlParameter("@P_APNO", AppId);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GETS_PAID_FEES_DETAILS_FOR_STUDENT_APPLICATION_REGISRATION", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }

                public DataSet getseatcount_ForSVDET(int DEGREENO, int QUALIFYNO, int roundno, int admBatch)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_DEGREENO", DEGREENO);
                        objParams[1] = new SqlParameter("@P_QUALIFYNO", QUALIFYNO);
                        objParams[2] = new SqlParameter("@P_ROUNDNO", roundno);
                        objParams[3] = new SqlParameter("@P_ADMBATCH", admBatch);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_BRANCHWISE_ALLOTMENT_STATUS_SVDET", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.getseatcount-> " + ex.ToString());
                    }
                    return ds;
                }
                //public DataSet getseatcount_ForSVDET(int DEGREENO, int QUALIFYNO)
                //{
                //    DataSet ds = null;
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        objParams = new SqlParameter[2];
                //        objParams[0] = new SqlParameter("@P_DEGREENO", DEGREENO);
                //        objParams[1] = new SqlParameter("@P_QUALIFYNO", QUALIFYNO);


                //        //  ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_USER_SEATCOUNT", objParams);
                //        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_BRANCHWISE_ALLOTMENT_STATUS_SVDET", objParams);

                //    }
                //    catch (Exception ex)
                //    {

                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.getseatcount-> " + ex.ToString());
                //    }
                //    return ds;
                //}

                //public DataSet getseatcount(int DEGREENO, int QUALIFYNO)
                //               {
                //                   DataSet ds = null;
                //                   try
                //                   {
                //                       SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //                       SqlParameter[] objParams = null;
                //                       objParams = new SqlParameter[2];
                //                       objParams[0] = new SqlParameter("@P_DEGREENO", DEGREENO);
                //                       objParams[1] = new SqlParameter("@P_QUALIFYNO", QUALIFYNO);

                //                       //  ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_USER_SEATCOUNT", objParams);
                //                       ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_BRANCHWISE_ALLOTMENT_STATUS", objParams);

                //                   }
                //                   catch (Exception ex)
                //                   {

                //                       throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.getseatcount-> " + ex.ToString());
                //                   }
                //                   return ds;
                //               }



                //for both SVDET n JEEE

                public int AllotStudentBranch_ForSVDETnJEEE(int sessionno, string usernos, string ipaddress, int DEGREENO, int QUALIFYNO, int roundno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[]
                        {
                        new SqlParameter("@P_SESSIONNO", sessionno),
                        new SqlParameter("@P_USERNO", usernos),
                        new SqlParameter("@P_IPADDRESS", ipaddress),
                        new SqlParameter("@P_DEGREENO", DEGREENO),
                        new SqlParameter("@P_QUALIFYNO", QUALIFYNO),
                        new SqlParameter("@p_roundno", roundno),
                        new SqlParameter("@P_OUT", SqlDbType.Int)

                        };

                        objParams[objParams.Length - 1].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_ALLOT_BRANCHPREF_BULK_new", objParams, true);

                        if (ret != null && ret.ToString() != "-99")

                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AllotStudentBranch-> " + ex.ToString());
                    }
                    return retStatus;
                }


                //for both SVDET n JEEE
                //public DataSet GetEligibleStudents_ForRountTwo_SVDETnJEEE(int ADMBAT, int DEGREENO, int QULIFYNO)
                //{
                //    DataSet ds = null;
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        objParams = new SqlParameter[3];
                //        objParams[0] = new SqlParameter("@ADMBAT", ADMBAT);
                //        objParams[1] = new SqlParameter("@DEGREENO", DEGREENO);
                //        objParams[2] = new SqlParameter("@QULIFYNO", QULIFYNO);

                //        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_USER_ELIGIBLE_STUDENT_LIST_NEW", objParams);

                //    }
                //    catch (Exception ex)
                //    {

                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetEligibleStudents-> " + ex.ToString());
                //    }
                //    return ds;
                //}

                public DataSet GetEligibleStudents_ForRountTwo_SVDETnJEEE(int ADMBATCH, int DEGREENO, int QULIFYNO, int Round, int ResCat)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@ADMBATCH", ADMBATCH);
                        objParams[1] = new SqlParameter("@DEGREENO", DEGREENO);
                        objParams[2] = new SqlParameter("@QULIFYNO", QULIFYNO);
                        objParams[3] = new SqlParameter("@ROUNDNO", Round);
                        objParams[4] = new SqlParameter("@ALLOTCAT", ResCat);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_USER_ELIGIBLE_STUDENT_LIST_NEW", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetEligibleStudents-> " + ex.ToString());
                    }
                    return ds;
                }


                //----------------- used for RESET round in Branch counseling ------------------------
                public int ResetCounselingRound(int admbatch, int DEGREENO, int QUALIFYNO, int ROUND)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[]
                        {
                      
                        new SqlParameter("@P_SESSIONNO", admbatch),
                        new SqlParameter("@P_DEGREENO", DEGREENO),
                        new SqlParameter("@P_QUALIFYNO", QUALIFYNO),
                        new SqlParameter("@P_ROUNDNO", ROUND),
                        new SqlParameter("@P_OUT", SqlDbType.Int)

                        };

                        objParams[objParams.Length - 1].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_RESETROUND_BRANCHPREF_ALLOTMENT", objParams, true);

                        if (ret != null && ret.ToString() != "-99")

                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.ResetCounselingRound-> " + ex.ToString());
                    }
                    return retStatus;
                }

                //----------------- used for LOCK Branch counseling ------------------------
                public int LockBranchCounseling(int admbatch, int DEGREENO, int QUALIFYNO, int ROUND)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[]
                        {
                      
                        new SqlParameter("@P_SESSIONNO", admbatch),
                        new SqlParameter("@P_DEGREENO", DEGREENO),
                        new SqlParameter("@P_QUALIFYNO", QUALIFYNO),
                        new SqlParameter("@P_ROUNDNO", ROUND),
                        new SqlParameter("@P_OUT", SqlDbType.Int)

                        };

                        objParams[objParams.Length - 1].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_LOCK_BRANCHPREF_ALLOTMENT", objParams, true);

                        if (ret != null && ret.ToString() != "-99")

                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.LockBranchCounseling-> " + ex.ToString());
                    }
                    return retStatus;
                }

                //----------------- used for Close Branch counseling ------------------------
                public int CloseBranchCounseling(int admbatch, int DEGREENO, int QUALIFYNO, int ROUND)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[]
                        {
                      
                        new SqlParameter("@P_SESSIONNO", admbatch),
                        new SqlParameter("@P_DEGREENO", DEGREENO),
                        new SqlParameter("@P_QUALIFYNO", QUALIFYNO),
                        new SqlParameter("@P_ROUNDNO", ROUND),
                        new SqlParameter("@P_OUT", SqlDbType.Int)

                        };

                        objParams[objParams.Length - 1].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_CLOSE_BRANCHPREF_ALLOTMENT", objParams, true);

                        if (ret != null && ret.ToString() != "-99")

                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.CloseBranchCounseling-> " + ex.ToString());
                    }
                    return retStatus;
                }



                //FOR JEEE-SVDET EXCEL
                public DataSet GetBranchAllotementList_JEEENSVDET(int SESSIONNO, int DEGREENO, int QUALIFYNO, int ROUNDNO)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", SESSIONNO);
                        objParams[1] = new SqlParameter("@P_DEGREENO", DEGREENO);
                        objParams[2] = new SqlParameter("@P_QUALIFYNO", QUALIFYNO);
                        objParams[3] = new SqlParameter("@P_ROUNDNO", ROUNDNO);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_STUD_BRANCHPREF_STATUS_ROUND3", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetBranchAllotementList() -->" + ex.ToString());

                    }
                    return ds;
                }
                //GET STUDENT LIST FOR DOCUMENTS VERIFICATION
                public DataSet GetStudents_ForDocumentsVerification(string USERNAME)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_USERNAME", USERNAME);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_STUDENT_FOR_DOCS_VERIFICATION", objParams);
                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetEligibleStudents-> " + ex.ToString());
                    }
                    return ds;
                }
                //METHOD TO GET THE STUDENTS LIST FOR DETAIN[27-09-2016]
                public DataSet GetStudentListForDetention(int SESSIONNO, int SCHEMENO, int SEMESTERNO, int DETAINBY)
                {

                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", SESSIONNO);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", SCHEMENO);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", SEMESTERNO);
                        objParams[3] = new SqlParameter("@P_DETAINBY", DETAINBY);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_STUDENT_LIST_FOR_DETENTION", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.GetDetainedList-> " + ex.ToString());
                    }
                    return ds;
                }

                ////public int AddCopyCaseForExam(Student_Acd objStud, string offcourse)
                ////{

                ////    int retStatus = Convert.ToInt32(CustomStatus.Others);
                ////    try
                ////    {
                ////        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                ////        SqlParameter[] objParams = new SqlParameter[] 
                ////        { 

                ////             new SqlParameter("@P_SESSIONNO",objStud.SessionNo),
                ////             new SqlParameter("@P_IDNO",objStud.IdNo),  
                ////             new SqlParameter("@P_SEATNO",objStud.Seatno),  
                ////             new SqlParameter("@P_SEMESTERNO",objStud.SemesterNo),
                ////             new SqlParameter("@P_SCHEMENO",objStud.SchemeNo),
                ////             new SqlParameter("@P_DEGREENO",objStud.DegreeNo),
                ////             new SqlParameter("@P_SECTIONNO",objStud.Sectionno ),
                ////             new SqlParameter("@P_STATUS",objStud.Status),
                ////             new SqlParameter("@P_COURSENO",objStud.CourseNo),
                ////             new SqlParameter("@P_PUNISHMENTNO",objStud.PUNISHMENTNO),
                ////              new SqlParameter("@P_JUNIORNAME",objStud.Juniorname),
                ////             new SqlParameter("@P_SENIORNAME",objStud.Seniorname),
                ////             new SqlParameter("@P_UFMDETAIL",objStud.Ufmdetails),
                ////             new SqlParameter("@P_REMARKS",objStud.Remarks),
                ////             new SqlParameter("@P_OUT",SqlDbType.Int)

                ////        };
                ////        objParams[objParams.Length - 1].Direction = ParameterDirection.Output;
                ////        if (objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_PUNISHMENET_APPLIED_STUD_LIST", objParams, false) != null)

                ////            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);

                ////    }
                ////    catch (Exception ex)
                ////    {
                ////        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.AddCopyCase --> " + ex.ToString());
                ////    }
                ////    return retStatus;
                ////}

                public int AddCopyCaseForExam(Student_Acd objStud, string offcourse)
                {

                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[] 
                        { 
                             
                             new SqlParameter("@P_SESSIONNO",objStud.SessionNo),
                             new SqlParameter("@P_IDNO",objStud.IdNo),  
                             new SqlParameter("@P_SEATNO",objStud.Seatno),  
                             new SqlParameter("@P_SEMESTERNO",objStud.SemesterNo),
                             new SqlParameter("@P_SCHEMENO",objStud.SchemeNo),
                             new SqlParameter("@P_DEGREENO",objStud.DegreeNo),
                             new SqlParameter("@P_SECTIONNO",objStud.Sectionno ),
                             new SqlParameter("@P_STATUS",objStud.Status),
                             new SqlParameter("@P_COURSENO",objStud.CourseNo),
                             new SqlParameter("@P_PUNISHMENTNO",objStud.PUNISHMENTNO),
                              new SqlParameter("@P_JUNIORNAME",objStud.Juniorname),
                             new SqlParameter("@P_SENIORNAME",objStud.Seniorname),
                             new SqlParameter("@P_UFMDETAIL",objStud.Ufmdetails),
                             new SqlParameter("@P_REMARKS",objStud.Remarks),
                             new SqlParameter("@P_OUT",SqlDbType.Int)
                                                      
                        };
                        objParams[objParams.Length - 1].Direction = ParameterDirection.Output;
                        if (objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_PUNISHMENET_APPLIED_STUD_LIST", objParams, false) != null)

                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.AddCopyCase --> " + ex.ToString());
                    }
                    return retStatus;
                }

                //public int UpdateStudentAddressDetails(Student objStudent, StudentAddress objStudAddress, int usertype)
                //{
                //    int retStatus = Convert.ToInt32(CustomStatus.Others);
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        //Update Student Local Address
                //        objParams = new SqlParameter[29];
                //        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                //        objParams[1] = new SqlParameter("@P_LADDRESS", objStudAddress.LADDRESS);
                //        objParams[2] = new SqlParameter("@P_LCITY", objStudAddress.LCITY);
                //        objParams[3] = new SqlParameter("@P_LSTATE", objStudAddress.LSTATE);
                //        objParams[4] = new SqlParameter("@P_LDISTRICT", objStudAddress.LDISTRICT);
                //        objParams[5] = new SqlParameter("@P_LPINCODE", objStudAddress.LPINCODE);
                //        objParams[6] = new SqlParameter("@P_LTELEPHONE", objStudAddress.LTELEPHONE);
                //        objParams[7] = new SqlParameter("@P_LMOBILE", objStudAddress.LMOBILE);
                //        objParams[8] = new SqlParameter("@P_LPOSTOFF", objStudAddress.LPOSTOFF);
                //        objParams[9] = new SqlParameter("@P_LPOLICESTATION", objStudAddress.LPOLICESTATION);
                //        //Update Student Permenant Address
                //        objParams[10] = new SqlParameter("@P_PADDRESS", objStudAddress.PADDRESS);
                //        objParams[11] = new SqlParameter("@P_PCITY", objStudAddress.PCITY);
                //        objParams[12] = new SqlParameter("@P_PSTATE", objStudAddress.PSTATE);
                //        objParams[13] = new SqlParameter("@P_PDISTRICT", objStudAddress.PDISTRICT);
                //        objParams[14] = new SqlParameter("@P_PPINCODE", objStudAddress.PPINCODE);
                //        objParams[15] = new SqlParameter("@P_PTELEPHONE", objStudAddress.PTELEPHONE);
                //        objParams[16] = new SqlParameter("@P_PMOBILE", objStudAddress.PMOBILE);
                //        objParams[17] = new SqlParameter("@P_LTEHSIL", objStudAddress.LTEHSIL);
                //        objParams[18] = new SqlParameter("@P_PPOSTOFF", objStudAddress.PPOSTOFF);
                //        objParams[19] = new SqlParameter("@P_PPOLICEOFF", objStudAddress.PPOLICESTATION);
                //        //Update Student Guardian Address
                //        objParams[20] = new SqlParameter("@P_GADDRESS", objStudAddress.GADDRESS);
                //        objParams[21] = new SqlParameter("@P_GUARDIANNAME", objStudAddress.GUARDIANNAME);
                //        objParams[22] = new SqlParameter("@P_GPHONE", objStudAddress.GPHONE);
                //        objParams[23] = new SqlParameter("@P_ANNUAL_INCOME", objStudAddress.ANNUAL_INCOME);
                //        objParams[24] = new SqlParameter("@P_RELATION_GUARDIAN", objStudAddress.RELATION_GUARDIAN);
                //        objParams[25] = new SqlParameter("@P_GOCCUPATIONNAME", objStudAddress.GOCCUPATIONNAME);
                //        objParams[26] = new SqlParameter("@P_GUARDIANDESIG", objStudAddress.GUARDIANDESIGNATION);
                //        objParams[27] = new SqlParameter("@P_USER_TYPE ", usertype);
                //        objParams[28] = new SqlParameter("@P_OUT", SqlDbType.Int);
                //        objParams[28].Direction = ParameterDirection.Output;
                //        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUD_ADDRESS_DETAILS", objParams, true);

                //        if (Convert.ToInt32(ret) == 1)
                //        {
                //            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                //        }
                //        else
                //            retStatus = Convert.ToInt32(CustomStatus.Error);

                //    }
                //    catch (Exception ex)
                //    {
                //        retStatus = Convert.ToInt32(CustomStatus.Error);
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentAddressDetails-> " + ex.ToString());
                //    }

                //    return retStatus;

                //}
                public int UpdateStudentAdmissionDetails(Student objStudent, int usertype)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Update Student Local Address
                        objParams = new SqlParameter[17];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        //if (objStudent.AdmDate == DateTime.MinValue)
                        //    objParams[1] = new SqlParameter("@P_ADMDATE", DBNull.Value);
                        //else
                        //    objParams[1] = new SqlParameter("@P_ADMDATE", objStudent.AdmDate);
                        if (objStudent.AdmDate == null)///Added by Rita on 20190729
                            objParams[1] = new SqlParameter("@P_ADMDATE", DBNull.Value);
                        else
                            objParams[1] = new SqlParameter("@P_ADMDATE", objStudent.AdmDate);

                        objParams[2] = new SqlParameter("@P_COLLEGE_ID", objStudent.College_ID);
                        objParams[3] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                        objParams[4] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                        objParams[5] = new SqlParameter("@P_YEAR", objStudent.Year);
                        objParams[6] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[7] = new SqlParameter("@P_PTYPE", objStudent.PType);
                        objParams[8] = new SqlParameter("@P_BATCHNO", objStudent.BatchNo);
                        objParams[9] = new SqlParameter("@P_USER_TYPE", usertype);
                        objParams[10] = new SqlParameter("@P_CLAIM_TYPE", objStudent.ClaimType);
                        objParams[11] = new SqlParameter("@P_SEAT_TYPE", objStudent.SeatType);
                        objParams[12] = new SqlParameter("@P_ADMCENTRE", objStudent.AdmissionCentre);
                        objParams[13] = new SqlParameter("@P_DEFENCEQUOTA", objStudent.DefenceQuota);
                        objParams[14] = new SqlParameter("@P_MINORITYQUOTA", objStudent.MinorityQuota);
                        objParams[15] = new SqlParameter("@P_ADMROUNDNO", objStudent.AdmroundNo);
                        objParams[16] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[16].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUD_ADMISSION_DETAILS", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentAddressDetails-> " + ex.ToString());
                    }

                    return retStatus;

                }
                public int UpdateStudentDASAInformation(Student objStudent, int usertype)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Update Student Local Address
                        objParams = new SqlParameter[12];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_VISA_EXPIRY_DATE", objStudent.VisaExpiryDate);
                        objParams[2] = new SqlParameter("@P_PASSPORT_EXPIRY_DATE", objStudent.PassportExpiryDate);
                        objParams[3] = new SqlParameter("@P_PASSPORT_ISSUE_DATE", objStudent.PassportIssueDate);
                        objParams[4] = new SqlParameter("@P_STAY_PERMIT_DATE", objStudent.StayPermitDate);
                        objParams[5] = new SqlParameter("@P_INDIAN_ORIGIN", objStudent.IndianOrigin);
                        objParams[6] = new SqlParameter("@P_SCHOL_SCHEME", objStudent.ScholarshipScheme);
                        objParams[7] = new SqlParameter("@P_AGENCY", objStudent.Agency);
                        objParams[8] = new SqlParameter("@P_PASSPORT_ISSUE_PLACE", objStudent.PassportIssuePlace);
                        objParams[9] = new SqlParameter("@P_CITIZENSHIP", objStudent.Citizenship);
                        objParams[10] = new SqlParameter("@P_USER_TYPE ", usertype);
                        objParams[11] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[11].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUD_DASA_INFORMATION", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentDASAInformation-> " + ex.ToString());
                    }

                    return retStatus;

                }
                //public int UpdateStudentOtherInformation(Student objStudent, int usertype)
                //{
                //    int retStatus = Convert.ToInt32(CustomStatus.Others);
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        //Update Student Local Address
                //        objParams = new SqlParameter[18];
                //        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                //        objParams[1] = new SqlParameter("@P_BIRTH_PLACE", objStudent.BirthPlace);
                //        objParams[2] = new SqlParameter("@P_MTOUNGENO", objStudent.MToungeNo);
                //        objParams[3] = new SqlParameter("@P_OTHER_LANGUAGE", objStudent.OtherLanguage);
                //        objParams[4] = new SqlParameter("@P_BIRTH_VILLAGE", objStudent.Birthvillage);
                //        objParams[5] = new SqlParameter("@P_BIRTH_TALUKA", objStudent.Birthtaluka);
                //        objParams[6] = new SqlParameter("@P_BIRTH_DISTRICT", objStudent.Birthdistrict);
                //        objParams[7] = new SqlParameter("@P_BIRTH_STATE", objStudent.Birthdistate);
                //        objParams[8] = new SqlParameter("@P_BIRTH_PINCODE", objStudent.BirthPinCode);
                //        objParams[9] = new SqlParameter("@P_HEIGHT", objStudent.Height);
                //        objParams[10] = new SqlParameter("@P_WEIGHT", objStudent.Weight);
                //        objParams[11] = new SqlParameter("@P_URBAN", objStudent.Urban);
                //        objParams[12] = new SqlParameter("@P_IDENTI_MARK", objStudent.IdentyMark);
                //        objParams[13] = new SqlParameter("@P_BANKNO", objStudent.BankNo);
                //        objParams[14] = new SqlParameter("@P_ACC_NO", objStudent.AccNo);
                //        objParams[15] = new SqlParameter("@P_PASSPORTNO", objStudent.PassportNo);
                //        objParams[16] = new SqlParameter("@P_USER_TYPE", usertype);
                //        objParams[17] = new SqlParameter("@P_OUT", SqlDbType.Int);
                //        objParams[17].Direction = ParameterDirection.Output;
                //        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUD_OTHER_INFORMATION", objParams, true);

                //        if (Convert.ToInt32(ret) == 1)
                //        {
                //            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                //        }
                //        else
                //            retStatus = Convert.ToInt32(CustomStatus.Error);

                //    }
                //    catch (Exception ex)
                //    {
                //        retStatus = Convert.ToInt32(CustomStatus.Error);
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentDASAInformation-> " + ex.ToString());
                //    }

                //    return retStatus;

                //}

                public int UpdateStudentOtherInformation(Student objStudent, int usertype)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Update Student Local Address
                        objParams = new SqlParameter[21];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_BIRTH_PLACE", objStudent.BirthPlace);
                        objParams[2] = new SqlParameter("@P_MTOUNGENO", objStudent.MToungeNo);
                        objParams[3] = new SqlParameter("@P_OTHER_LANGUAGE", objStudent.OtherLanguage);
                        objParams[4] = new SqlParameter("@P_BIRTH_VILLAGE", objStudent.Birthvillage);
                        objParams[5] = new SqlParameter("@P_BIRTH_TALUKA", objStudent.Birthtaluka);
                        objParams[6] = new SqlParameter("@P_BIRTH_DISTRICT", objStudent.Birthdistrict);
                        objParams[7] = new SqlParameter("@P_BIRTH_STATE", objStudent.Birthdistate);
                        objParams[8] = new SqlParameter("@P_BIRTH_PINCODE", objStudent.BirthPinCode);
                        objParams[9] = new SqlParameter("@P_HEIGHT", objStudent.Height);
                        objParams[10] = new SqlParameter("@P_WEIGHT", objStudent.Weight);
                        objParams[11] = new SqlParameter("@P_URBAN", objStudent.Urban);
                        objParams[12] = new SqlParameter("@P_IDENTI_MARK", objStudent.IdentyMark);
                        objParams[13] = new SqlParameter("@P_BANKNO", objStudent.BankNo);
                        objParams[14] = new SqlParameter("@P_ACC_NO", objStudent.AccNo);
                        objParams[15] = new SqlParameter("@P_PASSPORTNO", objStudent.PassportNo);
                        objParams[16] = new SqlParameter("@P_USER_TYPE", usertype);
                        //Added by Nikhil V.Lambe on 10/02/2021
                        objParams[17] = new SqlParameter("@P_IFSC", objStudent.IfscCode);
                        objParams[18] = new SqlParameter("@P_BANKADDRESS", objStudent.BankAddress);
                        objParams[19] = new SqlParameter("@P_ANTI_RAGGING", objStudent.Anti_Ragging);   //Added by sachin on 22-07-2022

                        //-------------------------------------------------------------------------
                        objParams[20] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[20].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUD_OTHER_INFORMATION", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentDASAInformation-> " + ex.ToString());
                    }

                    return retStatus;

                }
                //Added by Shrikant W on 28-09-2023
                public int UpdateStudentFinalInformation(Student objStudent)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[1].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUD_FINAL_INFORMATION", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentFinalInformation-> " + ex.ToString());
                    }

                    return retStatus;

                }
                /// <summary>
                /// Updated by Swapnil.......
                /// </summary>
                /// <param name="objStudent"></param>
                /// <param name="objStudAddress"></param>
                /// <param name="objStudPhoto"></param>
                /// <param name="objStudQExm"></param>
                /// <param name="MotherMobile"></param>
                /// <param name="MotherOfficeNo"></param>
                /// <param name="IndusEmail"></param>
                /// <param name="usertype"></param>
                /// <returns></returns>

                //public int UpdateStudentPersonalInformation(Student objStudent, StudentAddress objStudAddress, StudentPhoto objStudPhoto, StudentQualExm objStudQExm, string MotherMobile, string MotherOfficeNo, string IndusEmail, int usertype)
                //{
                //    int retStatus = Convert.ToInt32(CustomStatus.Others);
                //    //int retStatus = Convert.ToInt32(CustomStatus.Others);
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        //Update Student
                //        objParams = new SqlParameter[47];
                //        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                //        objParams[1] = new SqlParameter("@P_REGNO", objStudent.RegNo);
                //        objParams[2] = new SqlParameter("@P_ENROLLNO", objStudent.EnrollNo);
                //        objParams[3] = new SqlParameter("@P_STUDFULLNAME", objStudent.StudName);
                //        objParams[4] = new SqlParameter("@P_STUDFIRSTNAME", objStudent.firstName);
                //        objParams[5] = new SqlParameter("@P_STUDMIDDLENAME", objStudent.MiddleName);
                //        objParams[6] = new SqlParameter("@P_STUDLASTNAME", objStudent.LastName);
                //        objParams[7] = new SqlParameter("@P_FATHERFULLNAME", objStudent.FatherName);
                //        objParams[8] = new SqlParameter("@P_FATHERFIRSTNAME", objStudent.fatherfirstName);
                //        objParams[9] = new SqlParameter("@P_FATHERMIDDLENAME", objStudent.FatherMiddleName);
                //        objParams[10] = new SqlParameter("@P_FATHERLASTNAME", objStudent.FatherLastName);
                //        objParams[11] = new SqlParameter("@P_FATHERMOBILE", objStudent.FatherMobile);
                //        objParams[12] = new SqlParameter("@P_FATHEROFFICENO", objStudent.FatherOfficeNo);
                //        objParams[13] = new SqlParameter("@P_FATHER_DESIG", objStudAddress.FATHER_DESIG);
                //        objParams[14] = new SqlParameter("@P_FATHEROCCUPATIONNO", objStudAddress.OCCUPATION);
                //        objParams[15] = new SqlParameter("@P_FATHEREMAIL", objStudent.Fatheremail);
                //        objParams[16] = new SqlParameter("@P_MOTHERNAME", objStudent.MotherName);
                //        objParams[17] = new SqlParameter("@P_MOTHERMOBILE", MotherMobile);
                //        objParams[18] = new SqlParameter("@P_MOTHEREMAIL", objStudent.Motheremail);
                //        objParams[19] = new SqlParameter("@P_MOTHER_DESIG", objStudAddress.MOTHERDESIGNATION);
                //        objParams[20] = new SqlParameter("@P_MOTHEROFFICENO", MotherOfficeNo);
                //        objParams[21] = new SqlParameter("@P_MOTHER_OCCUPATIONNO", objStudAddress.MOTHEROCCUPATION);
                //        objParams[22] = new SqlParameter("@P_CASTE", objStudent.Caste);
                //        objParams[23] = new SqlParameter("@P_SUB_CASTE", objStudent.Subcaste);
                //        objParams[24] = new SqlParameter("@P_DOB", objStudent.Dob);
                //        objParams[25] = new SqlParameter("@P_BLOODGRPNO", objStudent.BloodGroupNo);
                //        objParams[26] = new SqlParameter("@P_CLAIMID", objStudent.ClaimType);
                //        objParams[27] = new SqlParameter("@P_RELIGIONNO", objStudent.ReligionNo);
                //        objParams[28] = new SqlParameter("@P_NATIONALITYNO", objStudent.NationalityNo);
                //        objParams[29] = new SqlParameter("@P_CATEGORYNO", objStudent.ClaimType);
                //        objParams[30] = new SqlParameter("@P_MARRIED", objStudent.Married);
                //        objParams[31] = new SqlParameter("@P_ADDHARCARDNO", objStudent.AddharcardNo);
                //        objParams[32] = new SqlParameter("@P_TYPE_OF_PHYSICALLY_HANDICAP", objStudent.Physical_Handicap);
                //        objParams[33] = new SqlParameter("@P_SEX", objStudent.Sex);
                //        objParams[34] = new SqlParameter("@P_INDUSEMAIL", IndusEmail);
                //        objParams[35] = new SqlParameter("@P_STUDENTMOBILE", objStudent.StudentMobile);
                //        objParams[36] = new SqlParameter("@P_EMAILID", objStudent.EmailID);
                //        objParams[37] = new SqlParameter("@P_USERTYPE", usertype);
                //        objParams[38] = new SqlParameter("@P_UANO", objStudent.Uano);
                //        objParams[39] = new SqlParameter("@P_PHOTOPATH", objStudPhoto.PhotoPath);
                //        objParams[40] = new SqlParameter("@P_ANNUAL_INCOME", objStudent.Annual_income);
                //        objParams[41] = new SqlParameter("@P_PHOTOSIZE", objStudPhoto.PhotoSize);

                //        if (objStudPhoto.Photo1 == null)
                //            objParams[42] = new SqlParameter("@P_PHOTO", DBNull.Value);
                //        else
                //            objParams[42] = new SqlParameter("@P_PHOTO", objStudPhoto.Photo1);

                //        objParams[42].SqlDbType = SqlDbType.Image;
                //        objParams[43] = new SqlParameter("@P_PTYPE", objStudent.PayTypeNO);
                //        objParams[44] = new SqlParameter("@P_PASSPORTNO", objStudent.PassportNo);
                //        objParams[45] = new SqlParameter("@P_CITIZENSHIPNO", objStudent.Citizenship);
                //        objParams[46] = new SqlParameter("@P_OUT", SqlDbType.Int);
                //        objParams[46].Direction = ParameterDirection.Output;
                //        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUDENT_PERSONAL_INFORMATION", objParams, true);

                //        if (Convert.ToInt32(ret) == 1)
                //        {
                //            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                //        }
                //        else
                //            retStatus = Convert.ToInt32(CustomStatus.Error);

                //    }
                //    catch (Exception ex)
                //    {
                //        retStatus = Convert.ToInt32(CustomStatus.Error);
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentPersonalInformation-> " + ex.ToString());
                //    }

                //    return retStatus;

                //}

                //public int UpdateStudentQualifyingExamInformation(Student objStudent, StudentQualExm objStudQExm, int usertype, string Vocational_Sub, int diplomastatus)
                //{
                //    int retStatus = Convert.ToInt32(CustomStatus.Others);
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        //Update Student Local Address
                //        objParams = new SqlParameter[66];
                //        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                //        objParams[1] = new SqlParameter("@P_SCHOOL_COLLEGE_NAMESSC", objStudQExm.SchoolCollegeNameSsc);
                //        objParams[2] = new SqlParameter("@P_BOARDSSC", objStudQExm.BoardSsc);
                //        objParams[3] = new SqlParameter("@P_YEAR_OF_EXAMSSC", objStudQExm.YearOfExamSsc);
                //        objParams[4] = new SqlParameter("@P_SSC_MEDIUM", objStudQExm.SSC_medium);
                //        objParams[5] = new SqlParameter("@P_MARKS_OBTAINEDSSC", objStudQExm.MarksObtainedSsc);
                //        objParams[6] = new SqlParameter("@P_OUT_OF_MRKSSSC", objStudQExm.OutOfMarksSsc);
                //        objParams[7] = new SqlParameter("@P_PERSSC", objStudQExm.PercentageSsc);
                //        objParams[8] = new SqlParameter("@P_QEXMROLLNOSSC", objStudQExm.QEXMROLLNOSSC);
                //        objParams[9] = new SqlParameter("@P_PERCENTILESSC", objStudQExm.PercentileSsc);
                //        objParams[10] = new SqlParameter("@P_GRADESSC", objStudQExm.GradeSsc);
                //        objParams[11] = new SqlParameter("@P_ATTEMPTSSC", objStudQExm.AttemptSsc);
                //        objParams[12] = new SqlParameter("@P_COLLEGE_ADD_SSC", objStudQExm.colg_address_SSC);

                //        objParams[13] = new SqlParameter("@P_SCHOOL_COLLEGE_NAMEHSSC", objStudQExm.SCHOOL_COLLEGE_NAME);
                //        objParams[14] = new SqlParameter("@P_BOARDHSSC", objStudQExm.BOARD);
                //        objParams[15] = new SqlParameter("@P_YEAR_OF_EXAMHSSC", objStudQExm.YEAR_OF_EXAMHSSC);
                //        objParams[16] = new SqlParameter("@P_HSSC_MEDIUM", objStudQExm.HSSC_medium);
                //        objParams[17] = new SqlParameter("@P_MARKS_OBTAINEDHSSC", objStudQExm.MARKOBTAINED);
                //        objParams[18] = new SqlParameter("@P_OUT_OF_MRKSHSSC", objStudQExm.OUTOFMARK);
                //        objParams[19] = new SqlParameter("@P_PERHSSC", objStudQExm.PERCENTAGE);
                //        objParams[20] = new SqlParameter("@P_QEXMROLLNOHSSC", objStudQExm.QEXMROLLNOHSSC);
                //        objParams[21] = new SqlParameter("@P_PERCENTILEHSSC", objStudQExm.PercentileHSsc);
                //        objParams[22] = new SqlParameter("@P_GRADEHSSC", objStudQExm.GRADE);
                //        objParams[23] = new SqlParameter("@P_ATTEMPTHSSC", objStudQExm.ATTEMPT);
                //        objParams[24] = new SqlParameter("@P_COLLEGE_ADD_HSSC", objStudQExm.colg_address_HSSC);

                //        objParams[25] = new SqlParameter("@P_HSC_CHE", objStudQExm.HSCCHE);
                //        objParams[26] = new SqlParameter("@P_HSC_CHE_MAX", objStudQExm.HSCCHEMAX1);
                //        objParams[27] = new SqlParameter("@P_HSC_PHY", objStudQExm.HSCPHY1);
                //        objParams[28] = new SqlParameter("@P_HSC_PHY_MAX", objStudQExm.HSCPHYMAX1);
                //        objParams[29] = new SqlParameter("@P_HSC_ENG", objStudQExm.ENG);
                //        objParams[30] = new SqlParameter("@P_HSC_ENG_MAX", objStudQExm.HSCENGMAX);
                //        objParams[31] = new SqlParameter("@P_HSC_MAT", objStudQExm.MATHS);
                //        objParams[32] = new SqlParameter("@P_HSC_MAT_MAX", objStudQExm.MATHSMAX);

                //        objParams[33] = new SqlParameter("@P_QUALIFYNO", objStudQExm.QUALIFYNO);
                //        objParams[34] = new SqlParameter("@P_QEXMROLLNO", objStudent.QexmRollNo);
                //        objParams[35] = new SqlParameter("@P_YEAR_OF_EXAM", objStudent.YearOfExam);
                //        objParams[36] = new SqlParameter("@P_PERCENTAGE", objStudent.Percentage);
                //        objParams[37] = new SqlParameter("@P_PERCENTILE", objStudQExm.PERCENTILE);
                //        objParams[38] = new SqlParameter("@P_ALL_INDIA_RANK", objStudQExm.ALLINDIARANK);
                //        objParams[39] = new SqlParameter("@P_SCORE", objStudent.Score);

                //        objParams[40] = new SqlParameter("@P_OTHERQUALIFYNO", objStudent.PGQUALIFYNO);
                //        objParams[41] = new SqlParameter("@P_OTHERQEXMROLLNO", objStudent.PGENTROLLNO);
                //        objParams[42] = new SqlParameter("@P_OTHER_YEAR_OF_EXAM", objStudent.pgyearOfExam);
                //        objParams[43] = new SqlParameter("@P_OTHERPERCENTAGE", objStudent.pgpercentage);
                //        objParams[44] = new SqlParameter("@P_OTHERPERCENTILE", objStudent.pgpercentile);
                //        objParams[45] = new SqlParameter("@P_OTHER_ALL_INDIA_RANK", objStudent.PGRANK);
                //        objParams[46] = new SqlParameter("@P_OTHER_SCORE", objStudent.pgscore);

                //        objParams[47] = new SqlParameter("@P_SCHOOL_COLLEGE_NAME_DIPLOMA", objStudQExm.SchoolCollegeNameDiploma);
                //        objParams[48] = new SqlParameter("@P_BOARDDIPLOMA", objStudQExm.BoardDiploma);
                //        objParams[49] = new SqlParameter("@P_YEAR_OF_EXAMDIPLOMA", objStudQExm.YearOfExamDiploma);
                //        objParams[50] = new SqlParameter("@P_DIPLOMA_MEDIUM", objStudQExm.Diploma_medium);
                //        objParams[51] = new SqlParameter("@P_MARKS_OBTAINEDDIPLOMA", objStudQExm.MarksObtainedDiploma);
                //        objParams[52] = new SqlParameter("@P_OUT_OF_MRKSDIPLOMA", objStudQExm.OutOfMarksDiploma);
                //        objParams[53] = new SqlParameter("@P_PERDIPLOMA", objStudQExm.PercentageDiploma);
                //        objParams[54] = new SqlParameter("@P_QEXMROLLNODIPLOMA", objStudQExm.QEXMROLLNODiploma);
                //        objParams[55] = new SqlParameter("@P_PERCENTILEDIPLOMA", objStudQExm.PercentileDiploma);
                //        objParams[56] = new SqlParameter("@P_GRADEDIPLOMA", objStudQExm.GradeDiploma);
                //        objParams[57] = new SqlParameter("@P_ATTEMPTDIPLOMA", objStudQExm.AttemptDiploma);
                //        objParams[58] = new SqlParameter("@P_COLLEGE_ADD_DIPLOMA", objStudQExm.colg_address_Diploma);
                //        objParams[59] = new SqlParameter("@P_USER_TYPE", usertype);
                //        objParams[60] = new SqlParameter("@P_OTHER_SUB", Vocational_Sub);
                //        objParams[61] = new SqlParameter("@P_HSC_PCM", objStudQExm.HSCPCM);
                //        objParams[62] = new SqlParameter("@P_HSC_PCM_PERCENTAGES", objStudQExm.HSCPCMPercentage);
                //        objParams[63] = new SqlParameter("@P_NATA_MARKS", objStudent.NataMarks);
                //        objParams[64] = new SqlParameter("@P_DIPLOMASTAUS", diplomastatus);
                //        objParams[65] = new SqlParameter("@P_OUT", SqlDbType.Int);
                //        objParams[65].Direction = ParameterDirection.Output;
                //        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUD_QUALIFYING_EXAM_INFORMATION", objParams, true);

                //        if (Convert.ToInt32(ret) == 1)
                //        {
                //            if (objStudent.LastQualifiedExams != null)
                //            {
                //                foreach (QualifiedExam qualExam in objStudent.LastQualifiedExams)
                //                {
                //                    this.UpdateLastQualExams(qualExam);
                //                }
                //            }

                //            if (objStudent.EntranceExams != null)
                //            {
                //                foreach (QualifiedExam EntranceExam in objStudent.EntranceExams)
                //                {
                //                    this.InsertUpdateEntranceExams(EntranceExam);
                //                }
                //            }
                //            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                //        }
                //        else
                //            retStatus = Convert.ToInt32(CustomStatus.Error);

                //    }
                //    catch (Exception ex)
                //    {
                //        retStatus = Convert.ToInt32(CustomStatus.Error);
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentDASAInformation-> " + ex.ToString());
                //    }

                //    return retStatus;

                //}

                public int UpdateStudentWorkexp(Student objStudent, int expno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[7];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_WORK_EXP", objStudent.WorkExp);
                        objParams[2] = new SqlParameter("@P_ORG_LAST_WORK", objStudent.OrgLastWork);
                        objParams[3] = new SqlParameter("@P_DESIGNATION", objStudent.Designation);
                        objParams[4] = new SqlParameter("@P_EXPNO", expno);
                        objParams[5] = new SqlParameter("@P_EPFNO", objStudent.EpfNo);
                        objParams[6] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[6].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_INS_STUD_WORK_INFORMATION", objParams, true);
                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        }
                        else if (Convert.ToInt32(ret) == 2)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }

                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentDASAInformation-> " + ex.ToString());
                    }

                    return retStatus;
                }
                public DataSet GetStudentExpDetails(int idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_EXPDETAILS_BYID", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }
                public int GetdeleteDataRow(int idno, int expno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_expno", expno);
                        objParams[2] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[2].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_INS_DELETE_WORK_INFORMATION", objParams, true);
                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordDeleted);
                        }

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentDASAInformation-> " + ex.ToString());
                    }

                    return retStatus;
                }
                public DataSet GetStudentsBySchemeElective(int admbatch, int schemeno, int degreeno, int schemetype, int semno, int college_id, int sectionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[7];
                        objParams[0] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_SCHEMETYPE", schemetype);
                        objParams[4] = new SqlParameter("@P_SEM", semno);
                        objParams[5] = new SqlParameter("@P_COLLEGEID", college_id);
                        objParams[6] = new SqlParameter("@P_SECTIONNO", sectionno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_BY_SCHEME1_ELECTIVE", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForScheme-> " + ex.ToString());
                    }

                    return ds;
                }

                /// <summary>
                /// Modified by SP - 27012022
                /// </summary>
                /// <param name="facno"></param>
                /// <param name="clsAdv"></param>
                /// <param name="deptno"></param>
                /// <param name="sem"></param>
                /// <param name="degreeno"></param>
                /// <param name="branchno"></param>
                /// <param name="collegeid"></param>
                /// <param name="sectionno"></param>
                /// <returns></returns>
                public DataSet GetStudentForFacultyAdvisor(int facno, int clsAdv, int deptno, int sem, int degreeno, int branchno, int collegeid, int sectionno, int admbatch)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[9];
                        objParams[0] = new SqlParameter("@P_FAC", facno);
                        objParams[1] = new SqlParameter("@P_DEPTNO", deptno);
                        objParams[2] = new SqlParameter("@P_SEM", sem);
                        objParams[3] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[4] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[5] = new SqlParameter("@P_COLLEGE_ID", collegeid);
                        objParams[6] = new SqlParameter("@P_CLS_ADV", clsAdv);
                        objParams[7] = new SqlParameter("@P_SEC", sectionno);
                        objParams[8] = new SqlParameter("@P_ADM_BATCH", admbatch);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_FOR_FA", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentForFaculty-> " + ex.ToString());
                    }
                    return ds;
                }

                // add by hemant on 28-12-2018
                public int UpdateStudentCourseWiseSection(int sessiono, int college_id, int degreeno, int branchno, int schemeno, int semesterno, int courseno, string studids, string sectionnos, int userno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[11];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessiono);
                        objParams[1] = new SqlParameter("@P_COLLEGE_ID", college_id);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[4] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[5] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[6] = new SqlParameter("@P_COURSENO", courseno);
                        objParams[7] = new SqlParameter("@P_STUDIDS", studids);
                        objParams[8] = new SqlParameter("@P_SECTIONNO", sectionnos);
                        objParams[9] = new SqlParameter("@P_UA_NO", userno);
                        objParams[10] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[10].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_UPDATE_COURSE_WISE_SECTION_ALLOTMENT", objParams, false);
                        if (ret != null)
                            if (ret.ToString() != "-99")
                                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentCourseWiseSection-> " + ex.ToString());
                    }
                    return retStatus;
                }

                /// <summary>
                /// Added by Rita munde - 06042019
                /// </summary>
                /// <param name="searchText"></param>
                /// <param name="searchBy"></param>
                /// <returns></returns>
                public DataSet SearchStudents(string searchText, string searchBy)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                { 
                    new SqlParameter("@P_SEARCHSTRING", searchText),
                    new SqlParameter("@P_SEARCH", searchBy), 
                   // new SqlParameter("@P_COLLEGENOS", collegecode)
                };
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_SEARCH_STUDENT_FOR_DOCUMENT_UPLOAD", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessEntities.AdmissionCancellationController.SearchStudents() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                /// <summary>
                /// Added by Rita Munde - 06042019 
                /// </summary>
                /// <param name="idno"></param>
                /// <returns></returns>
                public DataSet GetAllselectDocument(string idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_ALL_DOCUMENT_SELECT", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.CopySchemeBySem-> " + ex.ToString());
                    }

                    return ds;
                }

                /// <summary>
                /// Added by Rita Munde-06042019
                /// </summary>
                /// <param name="studid"></param>
                /// <param name="docid"></param>
                /// <param name="chkOriCopy"></param>
                /// <param name="chkTrueCopy"></param>
                /// <param name="chkNA"></param>
                /// <param name="image"></param>
                /// <param name="fileType"></param>
                /// <param name="flag"></param>
                /// <param name="docnm"></param>
                /// <param name="path"></param>
                /// <returns></returns>
                public int InsertScanDocument(string studid, int docid, int chkOriCopy, int chkTrueCopy, int chkNA, byte[] image, string fileType, int flag, string docnm, string path)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[11];

                        objParams[0] = new SqlParameter("@P_IDNO", studid);
                        objParams[1] = new SqlParameter("@P_DOCUMENTNO", docid);
                        //objParams[2] = new SqlParameter("@P_DOCUMENTNAME", docnames);
                        objParams[2] = new SqlParameter("@P_ORICOPY", chkOriCopy);
                        objParams[3] = new SqlParameter("@P_TRUECOPY", chkTrueCopy);
                        objParams[4] = new SqlParameter("@P_NOTAPP", chkNA);
                        objParams[5] = new SqlParameter("@P_FILETYPE", fileType);
                        objParams[6] = new SqlParameter("@P_FLAG", flag);
                        objParams[7] = new SqlParameter("@P_IMAGES", SqlDbType.Image);
                        objParams[7].Value = DBNull.Value;
                        objParams[8] = new SqlParameter("@P_DOCUMENT_NAME", docnm);
                        objParams[9] = new SqlParameter("@P_DOC_PATH", path);
                        objParams[10] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[10].Direction = ParameterDirection.Output;

                        object ret = Convert.IsDBNull(objSQLHelper.ExecuteNonQuerySP("PKG_ACD_UPDATE_DOCUMENT", objParams, true));

                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.ACADEMIC.ANSWERSHEET.InsertAnswerSheetMark-> " + ex.ToString());
                    }

                    return retStatus;
                }
                /// <summary>
                /// ROHIT KUMAR TIWARI ON 13-APRIL-2019
                /// </summary>
                /// <param name="idno"></param>
                /// <param name="sessionno"></param>
                /// <param name="semesterno"></param>
                /// <param name="schemeno"></param>
                /// <param name="degreeno"></param>
                /// <param name="branchno"></param>
                /// <returns></returns>
                public DataSet GetStudentFailExamSubjectSNew(int idno, int sessionno, int semesterno, int schemeno, int degreeno, int branchno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[4] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[5] = new SqlParameter("@P_SCHEMENO", schemeno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_EXAM_RESULT_FAIL_LIST_BACKLOG_SINGLE_STUD", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }

                ///ROHIT TIWARI ON 15/04/2019
                /// ADD GET STUDENT FOR RESIT EXAM REGISTRATION 
                /// </summary>
                /// <param name="objSA"></param>
                /// <returns></returns>

                public DataSet GetStudentFailListBacklog(Student_Acd objSA)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", objSA.SessionNo);
                        objParams[1] = new SqlParameter("@P_DEGREENO", objSA.DegreeNo);
                        objParams[2] = new SqlParameter("@P_BRANCHNO", objSA.BranchNo);
                        objParams[3] = new SqlParameter("@P_SCHEMENO", objSA.SchemeNo);
                        objParams[4] = new SqlParameter("@P_SEMESTERNO", objSA.SemesterNo);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_EXAM_RESULT_FAIL_LIST_BACKLOG", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.GetStudentForResit()-> " + ex.ToString());


                    }
                    return ds;
                }

                /// ROHIT TIWARI ON 15/04/2019
                /// ADD STUDENT COURSE FOR RESIT EXAM REGISTRATION 
                /// </summary>
                /// <param name="objStudent"></param>
                /// <param name="session"></param>
                /// <param name="idnos"></param>
                /// <returns></returns>
                public int AddStudBacklogCourses(Student_Acd objStudent, int session, string idnos)
                {
                    int retStatus = 0;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Add New student
                        objParams = new SqlParameter[8];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", objStudent.SessionNo);
                        objParams[1] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                        objParams[2] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                        objParams[3] = new SqlParameter("@P_SCHEMENO", objStudent.SchemeNo);
                        objParams[4] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[5] = new SqlParameter("@P_IPADDRESS", objStudent.IpAddress);
                        objParams[6] = new SqlParameter("@P_IDNOS", idnos);
                        objParams[7] = new SqlParameter("@P_OUT", SqlDbType.NVarChar, 4000);
                        objParams[7].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_EXAM_RESULT_FAIL_LIST_BACKLOG_INS", objParams, true);

                        if (ret.ToString() == "1" && ret != null)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        }
                        else
                        {
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        }
                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.AddStudBacklogCourses-> " + ex.ToString());
                    }

                    return retStatus;
                }

                /// <summary>
                /// ROHIT TIWARI ON 16/04/2019
                /// </summary>
                /// <param name="sessionno"></param>
                /// <param name="courseno"></param>
                /// <param name="lck"></param>
                /// <returns></returns>
                public int UpdateLockDecodeNo(int sessionno, int courseno, int lck)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {

                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[] 
                    {
                        new SqlParameter("@P_SESSIONNO", sessionno),
                        new SqlParameter("@P_COURSENO", courseno),
                        new SqlParameter("@P_LOCK", lck)
                    };

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_DECODE_NUMBER_LOCK", objParams, false);

                        if (ret != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.UpdateLockDecodeNo->" + ex.ToString());
                    }

                    return retStatus;
                }

                /// <summary>
                /// ROHIT TIWARI ON 22/04/2019
                /// </summary>
                /// <param name="idno"></param>
                /// <param name="sessionno"></param>
                /// <param name="semesterno"></param>
                /// <returns></returns>
                public DataSet GetCopyCaseData(int idno, int sessionno, int semesterno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GETALL_COPY_CASE_DETAILS", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.GetCopyCaseData() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }
                /// <summary>
                /// ROHIT TIWARI ON 22/04/2019
                /// </summary>
                /// <param name="copyno"></param>
                /// <returns></returns>
                public SqlDataReader GetCopyCaseDetailsbyId(int copyno)
                {
                    SqlDataReader dr = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_COPYNO", copyno);


                        dr = objSQLHelper.ExecuteReaderSP("PKG_ACD_EXAM_GET_BY_COPYNO", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessEntities.StudentController.GetCopyCaseDetailsbyId() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return dr;
                }
                /// <summary>
                /// ROHIT TIWARI ON 22/04/2019
                /// </summary>
                /// <param name="objStud"></param>
                /// <returns></returns>
                public int UpadteCopyCaseStatus(Student_Acd objStud)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {

                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[] 
                        {
                        //update

                             new SqlParameter("@P_COPYNO",objStud.Copyno),                           
                             new SqlParameter("@P_PUNISHMENT",objStud.Punishment),                         
                             new SqlParameter("@P_STATUS",objStud.Status),
                             new SqlParameter("@P_PUNISH_EXAMNO",objStud.Punish_ExamNo),
                             new SqlParameter("@P_UANO",objStud.UA_No),
                             new SqlParameter("@P_LOGIN_DATE",objStud.Date),
                             new SqlParameter("@P_ALLOW_SESSIONNO",objStud.Allow_sessionno)
                        };


                        if (objSQLHelper.ExecuteNonQuerySP("PKG_UPD_COPYCASE_DETAILS", sqlParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessEntities.StudentController.UpadteCopyCaseStatus() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return retStatus;
                }

                /// <summary>
                /// ROHIT TIWARI ON 23/04/2019
                /// </summary>
                /// <param name="objStud"></param>
                /// <returns></returns>
                public int AddCopyCase(Student_Acd objStud)
                {

                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[] 
                        { 
                             
                             new SqlParameter("@P_SESSIONNO",objStud.SessionNo),
                             new SqlParameter("@P_IDNO",objStud.IdNo),
                             new SqlParameter("@P_SEATNO",objStud.Seatno),                         
                             new SqlParameter("@P_SEMESTERNO",objStud.SemesterNo),
                             new SqlParameter("@P_SCHEMENO",objStud.SchemeNo),
                             new SqlParameter("@P_DEGREENO",objStud.DegreeNo),
                             new SqlParameter("@P_SECTIONNO",objStud.Sectionno),
                             new SqlParameter("@P_COURSE_NAME",objStud.CourseName),
                             new SqlParameter("@P_COURSENO",objStud.CourseNo),
                             new SqlParameter("@P_CCODE",objStud.CCODE),                             
                             new SqlParameter("@P_PUNISHMENT",objStud.Punish_ExamNo),
                             new SqlParameter("@P_REMARK",objStud.Punishment),
                             new SqlParameter("@P_PUNISHMENTEXAM", objStud.Punish_ExamNo),
                             new SqlParameter("@P_ALLOW_SESSIONNO",objStud.Allow_sessionno),
                             new SqlParameter("@P_UANO",objStud.UA_No),
                             new SqlParameter("@P_LOGIN_DATE",objStud.Date),

                             new SqlParameter("@P_OUT",SqlDbType.Int)
                        };
                        objParams[objParams.Length - 1].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_INS_COPY_CASE_DETAILS_NEW", objParams, true);

                        if (ret.ToString() == "1" && ret != null)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        }
                        else
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordExist);
                        }

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.AddCopyCase --> " + ex.ToString());
                    }
                    return retStatus;
                }

                ////Added by Pritish 06-05-2019
                //public int InsertProspectusInfo(Student objS)
                //{
                //    int retStatus = Convert.ToInt32(CustomStatus.Others);

                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;

                //        objParams = new SqlParameter[13];
                //        objParams[0] = new SqlParameter("@P_STUDENT_NAME", objS.StudName);
                //        objParams[1] = new SqlParameter("@P_MOBILE", objS.StudentMobile);
                //        objParams[2] = new SqlParameter("@P_EMAIL", objS.EmailID);
                //        objParams[3] = new SqlParameter("@P_COLLEGE_ID", objS.Collegeid);
                //        objParams[4] = new SqlParameter("@P_DEGREENO", objS.DegreeNo);
                //        objParams[5] = new SqlParameter("@P_BRANCHNO", objS.BranchNo);
                //        objParams[6] = new SqlParameter("@P_ADMISSION_BATCH", objS.AdmBatch);
                //        objParams[7] = new SqlParameter("@P_PROSPECTUSNO", objS.ProspectusNo);
                //        objParams[8] = new SqlParameter("@P_ENTRY_DATE", objS.EntryDate);
                //        objParams[9] = new SqlParameter("@P_UA_NO", objS.Uano);
                //        objParams[10] = new SqlParameter("@P_IPADDRESS", objS.IPADDRESS);
                //        objParams[11] = new SqlParameter("@P_COLLEGE_CODE", objS.CollegeCode);
                //        //  objParams[12] = new SqlParameter("@P_RECP_NO", objS.ReceiptNo);
                //        objParams[12] = new SqlParameter("@P_TOTAL_AMT", objS.TotalAmt);

                //        object ret = Convert.IsDBNull(objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INSERT_PROSPECTUS_INFO", objParams, true));

                //        if (Convert.ToInt32(ret) == -99)
                //            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                //        else
                //            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                //    }
                //    catch (Exception ex)
                //    {
                //        retStatus = Convert.ToInt32(CustomStatus.Error);
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.ACADEMIC.ANSWERSHEET.InsertAnswerSheetMark-> " + ex.ToString());
                //    }

                //    return retStatus;
                //}

                //Added by Pritish 06-05-2019
                /// <summary>
                /// updated by abhishek
                /// date : 06-06-2019
                /// </summary>
                /// <param name="objS"></param>
                /// <returns></returns>
                //Added by Pritish 06-05-2019
                /// <summary>
                /// updated by Rishabh - Added Organization ID
                /// date : 01/04/2022
                /// </summary>
                /// <param name="objS"></param>
                /// <returns></returns>
                public int InsertProspectusInfo(Student objS)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[16];
                        objParams[0] = new SqlParameter("@P_STUDENT_NAME", objS.StudName);
                        objParams[1] = new SqlParameter("@P_MOBILE", objS.StudentMobile);
                        objParams[2] = new SqlParameter("@P_EMAIL", objS.EmailID);
                        objParams[3] = new SqlParameter("@P_COLLEGE_ID", objS.Collegeid);
                        objParams[4] = new SqlParameter("@P_DEGREENO", objS.DegreeNo);
                        objParams[5] = new SqlParameter("@P_BRANCHNO", objS.BranchNo);
                        objParams[6] = new SqlParameter("@P_ADMISSION_BATCH", objS.AdmBatch);
                        objParams[7] = new SqlParameter("@P_PROSPECTUSNO", objS.ProspectusNo);
                        objParams[8] = new SqlParameter("@P_ENTRY_DATE", objS.EntryDate);
                        objParams[9] = new SqlParameter("@P_UA_NO", objS.Uano);
                        objParams[10] = new SqlParameter("@P_IPADDRESS", objS.IPADDRESS);
                        objParams[11] = new SqlParameter("@P_COLLEGE_CODE", objS.CollegeCode);
                        objParams[12] = new SqlParameter("@P_RECP_NO", objS.ReceiptNo);
                        objParams[13] = new SqlParameter("@P_TOTAL_AMT", objS.TotalAmt);
                        objParams[14] = new SqlParameter("@P_REMARK", objS.Remarks);
                        objParams[15] = new SqlParameter("@P_ORGANIZATIONID", Convert.ToInt32(System.Web.HttpContext.Current.Session["OrgId"])); //Added By Rishabh on 01/03/2022


                        object ret = Convert.IsDBNull(objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INSERT_PROSPECTUS_INFO", objParams, true));

                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.ACADEMIC.StudentController.InsertProspectusInfo-> " + ex.ToString());
                    }

                    return retStatus;
                }

                /// <summary>
                /// Added By Rita 27052019
                /// </summary>

                public DataSet GetStudentListForAdmitCardNoDues(int degreeno, int branchno, int semesterno, int prev_status, int sessionno, int colg)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_PREV_STATUS", prev_status);
                        objParams[4] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[5] = new SqlParameter("@P_COLLEGE_ID", colg);
                        // objParams[6] = new SqlParameter("@P_ADMBTCH", admbatch);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_ADMIT_CARD_NODUES", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }


                /// <summary>
                /// Added by Rita 27052019.................
                /// </summary>
                public string AddNoDuesStatusForAdmitCard(Student objStudent)
                {
                    string retStatus = string.Empty;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Add New student
                        objParams = new SqlParameter[11];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", objStudent.SessionNo);
                        objParams[2] = new SqlParameter("@P_COLLEGID", objStudent.College_ID);
                        objParams[3] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                        objParams[4] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                        objParams[5] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[6] = new SqlParameter("@P_STUDTYPE", objStudent.StudType);
                        objParams[7] = new SqlParameter("@P_UANO", objStudent.Uano);
                        objParams[8] = new SqlParameter("@P_NODUESTS", objStudent.NoDueStatus);
                        //objParams[9] = new SqlParameter("@P_NODUEDATE", objStudent.NoDueDate);
                        objParams[9] = new SqlParameter("@P_IPADDRESS", objStudent.IPADDRESS);
                        objParams[10] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[10].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_INSERT_NODUES_STATUS_FOR_ADMITCARD", objParams, true);

                        //if (ret.ToString().Equals("-99"))
                        //    retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        //else
                        //    retStatus = Convert.ToInt32(ret);
                        retStatus = ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = "0";
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddStudent-> " + ex.ToString());
                    }

                    return retStatus;
                }

                /// <summary>
                /// ADDED BY: M. REHBAR SHEIKH ON 22-05-2019
                /// </summary>
                public string GetNewRollNoForBranchChange(int admbatch, int degreeNo, int branchNo, int collegeId, int newBranchno, int idType, int idno)
                {
                    string retStatus = string.Empty;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //SEND OUPT PARAMETER
                        objParams = new SqlParameter[7];
                        objParams[0] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[1] = new SqlParameter("@P_COLLEGEID", collegeId);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeNo);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", branchNo);
                        objParams[4] = new SqlParameter("@P_NEWBRANCHNO", newBranchno);
                        objParams[5] = new SqlParameter("@P_IDTYPE", idType);
                        objParams[6] = new SqlParameter("@P_IDNO", idno);
                        //objParams[4] = new SqlParameter("@P_OUT", SqlDbType.NVarChar, 25);
                        //objParams[4].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteScalarSP("PKG_ACAD_GET_NEWROLLNO_BRANCHCHANGE", objParams);
                        //object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_GET_NEWROLLNO_BRANCHCHANGE", objParams, true);

                        retStatus = ret.ToString();
                    }
                    catch (Exception ex)
                    {
                        retStatus = "0";
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.GetNewRollNoForBranchChange-> " + ex.ToString());
                    }

                    return retStatus;
                }

                /// <summary>
                /// added by abhishek , date : 29/05/2019
                /// </summary>
                /// <param name="idno"></param>
                /// <returns></returns>

                public DataSet GetStuddetpros(int idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_PROSNO", idno);

                        //ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_PROSPECT_BYID", objParams).Tables[0].CreateDataReader();
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_PROSPECT_BYID", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }

                /// <summary>
                /// added by abhishek , date : 29/05/2019
                /// </summary>
                /// <param name="idno"></param>
                /// <returns></returns>
                public DataSet RetrieveStuddetpros(string search, string category)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_SEARCHSTRING", search);
                        objParams[1] = new SqlParameter("@P_SEARCH", category);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_PROSPECTUS_DETAILS", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.RetrieveEmpDetails-> " + ex.ToString());
                    }
                    return ds;
                }

                /// <summary>
                /// ADDED BY RITA M ON DATE 03062019.... FOR STUDENT WITHOUT NO DUES STATUS..
                /// </summary>

                public DataSet GetStudentListForAdmitCard_WithoutNoDuesStatus(int degreeno, int branchno, int semesterno, int prev_status, int sessionno, int colg)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_PREV_STATUS", prev_status);
                        objParams[4] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[5] = new SqlParameter("@P_COLLEGE_ID", colg);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_ADMIT_CARD_WITHOUT_NODUES_STATUS", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }

                /// <summary>
                /// ADDED BY - RITA MUNDE ON 01-JUNE-2019
                /// </summary>

                public int GetStudentIdByEnrollmentNo(string enrollNo)
                {
                    int studentId = 0;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                {
                    new SqlParameter("@P_ENROLLNO", enrollNo),
                    new SqlParameter("@P_IDNO", studentId)
                };
                        sqlParams[sqlParams.Length - 1].Direction = ParameterDirection.Output;
                        object studId = objDataAccess.ExecuteNonQuerySP("PKG_NODUESSTATUS_GET_STUDENTID_BY_ENROLLNO", sqlParams, true);
                        studentId = ((studId != null && studId.ToString() != string.Empty) ? Int32.Parse(studId.ToString()) : 0);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.FeeCollectionController.GetStudentIdByEnrollmentNo() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return studentId;
                }

                /// <summary>
                /// ADDED BY - RITA MUNDE ON 01-JUNE-2019
                /// </summary>
                public DataSet GetStudentDetails_No_Dues(int idno, int sessionno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_ADMIT_CARD_NODUES_BY_REGNO", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }


                /// <summary>
                /// added by abhishek 
                /// date : 06-06-2019
                /// </summary>
                /// <param name="idno"></param>
                /// <returns></returns>
                public DataSet GetStuddetprosprint(int idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_PROSNO", idno);

                        //ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_PROSPECT_BYID", objParams).Tables[0].CreateDataReader();
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_PROSPECT_PRINT__BYID", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }


                /// <summary>
                /// added by swapnil , date : 14/06/2019
                /// </summary>
                /// <param name="idno"></param>
                /// <returns></returns>

                public DataSet GetStudentBasicData(DateTime fromDate, DateTime toDate)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_ADMDATEFROM", fromDate);
                        objParams[1] = new SqlParameter("@P_ADMDATETO", toDate);

                        //ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_PROSPECT_BYID", objParams).Tables[0].CreateDataReader();
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_BASIC_STUDENT_DATA", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }



                /// <summary>
                /// added by swapnil , date : 14/06/2019
                /// </summary>
                /// <param name="fromDate"></param>
                /// <param name="toDate"></param>
                /// <returns></returns>
                public DataSet GetProspectusData(DateTime fromDate, DateTime toDate)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_START_DATE", fromDate);
                        objParams[1] = new SqlParameter("@P_END_DATE", toDate);

                        //ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_PROSPECT_BYID", objParams).Tables[0].CreateDataReader();
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_PROSPECTUS_REPORT", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }
                /// <summary>
                /// added by Rita , date : 17/06/2019
                /// </summary>
                /// <param name="fromDate"></param>
                /// <param name="toDate"></param>
                /// <returns></returns>
                public DataSet GetStudentBasicDataNOTConfirm(DateTime fromDate, DateTime toDate)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_ADMDATEFROM", fromDate);
                        objParams[1] = new SqlParameter("@P_ADMDATETO", toDate);

                        //ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_PROSPECT_BYID", objParams).Tables[0].CreateDataReader();
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_BASIC_STUDENT_DATA_ADMISSION_NOT_CONFIRM", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }


                /// <summary>
                /// Added By Rita 28062019
                /// </summary>

                public DataSet GetStudentListForTransportationStatus(int colg, int Admbatch, int degreeno, int branchno, int year, int semesterno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_COLLEGE_ID", colg);
                        objParams[1] = new SqlParameter("@P_ADMBATCHNO", Admbatch);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[4] = new SqlParameter("@P_YEAR", year);
                        objParams[5] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        // objParams[6] = new SqlParameter("@P_ADMBTCH", admbatch);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_TRANSPORTATION_STATUS_UPDATION", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }


                /// <summary>
                /// Added by Rita 28062019.................
                /// </summary>
                public string AddTransportStatusForStudent(Student objStudent)
                {
                    string retStatus = string.Empty;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Add New student
                        objParams = new SqlParameter[14];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_COLLEGE_ID", objStudent.College_ID);
                        objParams[2] = new SqlParameter("@P_ADMBATCHNO", objStudent.AdmBatch);
                        objParams[3] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                        objParams[4] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                        objParams[5] = new SqlParameter("@P_YEAR", objStudent.Year);
                        objParams[6] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[7] = new SqlParameter("@P_UANO", objStudent.Uano);
                        objParams[8] = new SqlParameter("@P_TRANSPORTATION", objStudent.Transportation);
                        objParams[9] = new SqlParameter("@P_TRANS_STATUS", objStudent.TransportSts);
                        objParams[10] = new SqlParameter("@P_HOSTELER", objStudent.Hosteler);
                        objParams[11] = new SqlParameter("@P_HOSTEL_STATUS", objStudent.HostelSts);
                        objParams[12] = new SqlParameter("@P_IPADDRESS", objStudent.IPADDRESS);
                        objParams[13] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[13].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_INSERT_TRANSPORTATION_BULK_UPDATE_STATUS", objParams, true);

                        //if (ret.ToString().Equals("-99"))
                        //    retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        //else
                        //    retStatus = Convert.ToInt32(ret);
                        retStatus = ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = "0";
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddStudent-> " + ex.ToString());
                    }

                    return retStatus;
                }

                /// <summary>
                /// Added by Rita 1072019.................
                /// </summary>
                public string AddLockTransportStatusForStudent(Student objStudent)
                {
                    string retStatus = string.Empty;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Add New student
                        objParams = new SqlParameter[16];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_COLLEGE_ID", objStudent.College_ID);
                        objParams[2] = new SqlParameter("@P_ADMBATCHNO", objStudent.AdmBatch);
                        objParams[3] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                        objParams[4] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                        objParams[5] = new SqlParameter("@P_YEAR", objStudent.Year);
                        objParams[6] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[7] = new SqlParameter("@P_UANO", objStudent.Uano);
                        objParams[8] = new SqlParameter("@P_TRANSPORTATION", objStudent.Transportation);
                        objParams[9] = new SqlParameter("@P_TRANS_STATUS", objStudent.TransportSts);
                        objParams[10] = new SqlParameter("@P_HOSTELER", objStudent.Hosteler);
                        objParams[11] = new SqlParameter("@P_HOSTEL_STATUS", objStudent.HostelSts);
                        objParams[12] = new SqlParameter("@P_IPADDRESS", objStudent.IPADDRESS);
                        objParams[13] = new SqlParameter("@P_LOCK", objStudent.Lock);
                        objParams[14] = new SqlParameter("@P_UNLOCK", objStudent.UnLock);
                        objParams[15] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[15].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_UPDATE_LOCK_UNLOCK_FORTRANSPORTATION", objParams, true);

                        //if (ret.ToString().Equals("-99"))
                        //    retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        //else
                        //    retStatus = Convert.ToInt32(ret);
                        retStatus = ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = "0";
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddStudent-> " + ex.ToString());
                    }

                    return retStatus;
                }

                /// <summary>
                /// Added By Rita 28062019
                /// </summary>
                public DataSet GetStudentListForRegistrationSlip(int colg, int Admbatch, int degreeno, int branchno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_COLLEGE_ID", colg);
                        objParams[1] = new SqlParameter("@P_ADMBATCHNO", Admbatch);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", branchno);
                        //objParams[4] = new SqlParameter("@P_YEAR", year);
                        //objParams[5] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        // objParams[6] = new SqlParameter("@P_ADMBTCH", admbatch);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_REGISTRATION_SLIP", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }

                /// <summary>
                /// Added by Rita - 18092019 -- to document submission excel report
                /// </summary>
                /// <param name="dcrReport"></param>
                /// <returns></returns>
                public DataSet GetDocumentSubmissionReport(Student dcrReport)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                {                                       
                    new SqlParameter("@P_DEGREENO", dcrReport.DegreeNo),
                    new SqlParameter("@P_BRANCHNO", dcrReport.BranchNo),
                    new SqlParameter("@P_ADMBATCHNO", dcrReport.BatchNo),
                    new SqlParameter("@P_COLLEGE_ID", dcrReport.College_ID)             
                };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_STUDENT_REPORT_FOR_DOCUMENT_SUBMISSION", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.FeeCollectionController.GetMeritList() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                ///// <summary>
                ///// Added by Rita - 18092019 -- to document submission excel report
                ///// </summary>
                ///// <param name="dcrReport"></param>
                ///// <returns></returns>
                //public DataSet GetDocumentSubmissionReport(Student dcrReport)
                //{
                //    DataSet ds = null;
                //    try
                //    {
                //        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] sqlParams = new SqlParameter[]
                //{                                       
                //    new SqlParameter("@P_DEGREENO", dcrReport.DegreeNo),
                //    new SqlParameter("@P_BRANCHNO", dcrReport.BranchNo),
                //    new SqlParameter("@P_ADMBATCHNO", dcrReport.BatchNo)                               
                //};
                //        ds = objDataAccess.ExecuteDataSetSP("PKG_STUDENT_REPORT_FOR_DOCUMENT_SUBMISSION", sqlParams);
                //    }
                //    catch (Exception ex)
                //    {
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.FeeCollectionController.GetMeritList() --> " + ex.Message + " " + ex.StackTrace);
                //    }
                //    return ds;
                //}

                /// <summary>
                /// Added By Rita 07102019
                /// </summary>
                public DataSet GetStudentListForNoDues(int colg, int Admbatch, int degreeno, int branchno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_COLLEGE_ID", colg);
                        objParams[1] = new SqlParameter("@P_ADMBATCHNO", Admbatch);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", branchno);
                        //objParams[4] = new SqlParameter("@P_YEAR", year);
                        //objParams[5] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        // objParams[6] = new SqlParameter("@P_ADMBTCH", admbatch);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_NO_DUES_FORM_GENERATION", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }

                /// <summary>
                /// Added By SUMIT 06112019
                ///use for fetching data into dropdown after click on edit button 
                /// </summary>
                public SqlDataReader GetDataForEditOperator(int opid)
                {
                    SqlDataReader dr = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_OPID", opid);
                        dr = objSQLHelper.ExecuteReaderSP("PKG_STUDENT_SP_EDIT_OPERATOR", objParams);
                    }
                    catch (Exception ex)
                    {
                        return dr;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.SessionController.GetSingleSession-> " + ex.ToString());
                    }
                    return dr;
                }


                /// <summary>
                /// Added by Dileep Kare
                /// Date:14-01-2020
                /// </summary>
                /// <param name="DEGREENO"></param>
                /// <param name="branchno"></param>
                /// <returns></returns>
                public DataSet GetSyllabus(int DEGREENO, int branchno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_DEGREENO", DEGREENO);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_SYLLABUS", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }


                /// <summary>
                /// Added by Dileep kare
                /// Date:11-01-2020
                /// </summary>
                /// <param name="degreeno"></param>
                /// <param name="branchno"></param>
                /// <param name="schemeno"></param>
                /// <param name="semesterno"></param>
                /// <param name="filename"></param>
                /// <param name="filepath"></param>
                /// <returns></returns>

                public int UploadSyllabus(int degreeno, int branchno, int schemeno, string filename, string filepath, int semesterno)
                {

                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[7];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[3] = new SqlParameter("@P_FILENAME", filename);
                        objParams[4] = new SqlParameter("@P_FILEPATH", filepath);
                        objParams[5] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[6] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[6].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteReaderSP("PKG_INS_UPLOAD_SYLLABUS", objParams);
                        if (ret != null)
                            if (ret.ToString() != "-99")
                                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.InsGradeTranscriptLog-> " + ex.ToString());
                    }
                    return retStatus;
                }

                /// <summary>
                /// Added by Dileep kare
                /// Date:14-01-2020
                /// </summary>
                /// <param name="usno)"></param>


                public int deleteSyllabus(int usno)
                {

                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_USNO", usno);
                        objParams[1] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[1].Direction = ParameterDirection.Output;

                        object obj = objSQLHelper.ExecuteNonQuerySP("PKG_DELETE_SYLLABUS", objParams, true);

                        if (Convert.ToInt32(obj) == -99)

                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);

                        if (Convert.ToInt32(obj) != 99)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordDeleted);
                        }

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentAttendanceController.deleteSyllabus-> " + ex.ToString());
                    }
                    return retStatus;
                }


                /// <summary>
                /// Added By Dileep Kare
                /// Date:13-01-2020
                /// </summary>
                /// <param name="IDNO"></param>
                /// <returns></returns>
                public DataSet GetUploadSyllabusByUaNo(int IDNO)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSH = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", IDNO);


                        ds = objSH.ExecuteDataSetSP("PKG_GET_UPLOAD_SYLLABUS", objParams);
                    }
                    catch (Exception ex)
                    {
                    }
                    return ds;
                }

                //ADDED ON 30-01-2020 BY VAISHALI TO CANCEL SEM PROMOTION WITHOUT CRITERIA
                public int bulkStudentCancelSemPromoWithoutCriteria(Student objStudent, int sessionNo, string ipadd)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update Student semester Rtm
                        objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[2] = new SqlParameter("@P_UA_NO", objStudent.Uano);
                        objParams[3] = new SqlParameter("@P_IPADDRESS", ipadd);
                        objParams[4] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[5] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[5].Direction = ParameterDirection.Output;

                        int status = (Int32)objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_CANCEL_SEM_PROMOTION_NEW_WITHOUT_CRITERIA", objParams, true);
                        if (status != -99)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);
                        return retStatus;
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.bulkStudentCancelSemPromoWithoutCriteria-> " + ex.ToString());
                    }
                }


                /// <summary>
                /// Added by Swapnil 26122019 for Semester promotion without criteria
                /// </summary>
                /// <param name="objStudent"></param>
                /// <param name="sessionNo"></param>
                /// <param name="ipadd"></param>
                /// <returns></returns>
                public int bulkStudentSemPromoWithoutCriteria(Student objStudent, int sessionNo, string ipadd, int yearID)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update Student semester Rtm
                        objParams = new SqlParameter[7];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[2] = new SqlParameter("@P_UA_NO", objStudent.Uano);
                        objParams[3] = new SqlParameter("@P_IPADDRESS", ipadd);
                        objParams[4] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[5] = new SqlParameter("@P_ACADEMIC_YEAR_ID", yearID);
                        objParams[6] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[6].Direction = ParameterDirection.Output;

                        int status = (Int32)objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_INS_SEM_PROMOTION_NEW_WITHOUT_CRITERIA", objParams, true);
                        if (status != -99)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);
                        return retStatus;
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent-> " + ex.ToString());
                    }
                }

                public int InsertPreCouncelingDetali(int userno, int entrance_examno, int scholarship_status, string ipaddress, int ua_no)// Add by Maithili [19/2/2020]
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {

                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_USERNO", userno);
                        objParams[1] = new SqlParameter("@P_ENTRANCE_EXAMNO", entrance_examno);
                        objParams[2] = new SqlParameter("@p_SCHOLARSHIP_STATUS", scholarship_status);
                        objParams[3] = new SqlParameter("@P_IPADDRESS", ipaddress);
                        objParams[4] = new SqlParameter("@P_UA_N0", ua_no);
                        objParams[5] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[5].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_INS_PRECOUNCEL_ONLINE_ADM", objParams, true);
                        retStatus = Convert.ToInt32(ret);
                        return retStatus;
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.InsertPreCouncelingDetali() -->" + ex.ToString());
                    }
                }

                //added on 24-02-2020 by Vaishali to get student result details
                public DataSet GetStudresultDetails(int idno, int sessionno, int semesterno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objShelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);

                        ds = objShelper.ExecuteDataSetSP("PKG_GET_STUD_RESULT_DETAILS_MAHESH", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudresultDetails-> " + ex.ToString());
                    }
                    return ds;
                }

                public int DeleteStudentQual(Student objStudent)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_QUALIFYNO", objStudent.QUALIFYNO);
                        objParams[2] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[2].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_QUALIFICATION_SP_DEL", objParams, true);

                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.DeleteStudentQual -> " + ex.ToString());
                    }

                    return retStatus;
                }



                //New Methods By Amit k on 19-02-2020
                //Updated by Saurabh S. 25082022
                public DataSet GetStudentScholershipDetails(int degreeno, int branchno, int year, int admbatch, int semesterno, int prev_status, int yearID, int colg, int Scholarshipid, int SchMode, int AmtPercent, int sort)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[12];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_YEAR", year);   //added by saurabh s
                        objParams[4] = new SqlParameter("@P_ADMBATCH", admbatch);

                        objParams[5] = new SqlParameter("@P_ACADEMIC_YEAR_ID", yearID);
                        objParams[6] = new SqlParameter("@P_COLLEGE_ID", colg);
                        objParams[7] = new SqlParameter("@P_SCHOLERSHIPTYPENO", Scholarshipid);//added by saurabh s
                        objParams[8] = new SqlParameter("@P_ORGANIZATIONID", Convert.ToInt32(System.Web.HttpContext.Current.Session["OrgId"]));
                        objParams[9] = new SqlParameter("@P_SCH_MODE", SchMode);
                        objParams[10] = new SqlParameter("@P_SCH_AMT_PER", AmtPercent);
                        objParams[11] = new SqlParameter("@P_SORTBY", sort);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_STUDENT_SCHOLARSHIP_DETAILS", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }

                // Modify by Saurabh sonar on dated 21062023
                public DataSet GetStudentScholershipDetailsSemWise(int degreeno, int branchno, int year, int admbatch, int semesterno, int prev_status, int yearID, int colg, int Scholarshipid, int SchMode, int AmtPercent, int sort)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[12];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_YEAR", year);   //added by saurabh s
                        objParams[4] = new SqlParameter("@P_ADMBATCH", admbatch);

                        objParams[5] = new SqlParameter("@P_ACADEMIC_YEAR_ID", yearID);
                        objParams[6] = new SqlParameter("@P_COLLEGE_ID", colg);
                        objParams[7] = new SqlParameter("@P_SCHOLERSHIPTYPENO", Scholarshipid);//added by saurabh s
                        objParams[8] = new SqlParameter("@P_ORGANIZATIONID", Convert.ToInt32(System.Web.HttpContext.Current.Session["OrgId"]));
                        objParams[9] = new SqlParameter("@P_SCH_MODE", SchMode);
                        objParams[10] = new SqlParameter("@P_SCH_AMT_PER", AmtPercent);
                        objParams[11] = new SqlParameter("@P_SORTBY", sort);



                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_STUDENT_SCHOLARSHIP_DETAILS", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }

                //New Methods By Amit k on 19-02-2020

                public string UpdateBulkStudentScholarshipDetails(Student objStudent, int yearID, int ScholarshipMode, int Percentage)
                {
                    string retStatus = string.Empty;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Add New student

                        objParams = new SqlParameter[16];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_COLLEGID", objStudent.College_ID);
                        objParams[2] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                        objParams[4] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[5] = new SqlParameter("@P_ADMBATCH", objStudent.AdmBatch);
                        objParams[6] = new SqlParameter("@P_ACDYEAR", yearID);
                        objParams[7] = new SqlParameter("@P_ScholershipTypeNo", objStudent.ScholershipTypeNo);
                        objParams[8] = new SqlParameter("@P_UANO", objStudent.Uano);
                        objParams[9] = new SqlParameter("@P_SEM_AMOUNT", objStudent.Amount);
                        objParams[10] = new SqlParameter("@P_IPADDRESS", objStudent.IPADDRESS);
                        objParams[11] = new SqlParameter("@P_YEAR", objStudent.Year);  //added by saurabh s

                        objParams[12] = new SqlParameter("@P_ORGANIZATIONID", Convert.ToInt32(System.Web.HttpContext.Current.Session["OrgId"]));  //added by saurabh s
                        objParams[13] = new SqlParameter("@P_SCHL_MODE", ScholarshipMode);
                        objParams[14] = new SqlParameter("@P_SCH_AMT_PER", Percentage);
                        objParams[15] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[15].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_UPD_BULK_STD_SCHOLARSHIP_DETAILS", objParams, true);
                        retStatus = ret.ToString();
                    }
                    catch (Exception ex)
                    {
                        retStatus = "0";
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddStudent-> " + ex.ToString());
                    }

                    return retStatus;
                }


                public string UpdateBulkStudentScholarshipDetailsSemWise(Student objStudent, int yearID, int ScholarshipMode, int Percentage)
                {
                    string retStatus = string.Empty;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Add New student

                        objParams = new SqlParameter[16];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_COLLEGID", objStudent.College_ID);
                        objParams[2] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                        objParams[4] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[5] = new SqlParameter("@P_ADMBATCH", objStudent.AdmBatch);
                        objParams[6] = new SqlParameter("@P_ACDYEAR", yearID);
                        objParams[7] = new SqlParameter("@P_ScholershipTypeNo", objStudent.ScholershipTypeNo);
                        objParams[8] = new SqlParameter("@P_UANO", objStudent.Uano);
                        objParams[9] = new SqlParameter("@P_SEM_AMOUNT", objStudent.Amount);
                        objParams[10] = new SqlParameter("@P_IPADDRESS", objStudent.IPADDRESS);
                        objParams[11] = new SqlParameter("@P_YEAR", objStudent.Year);  //added by saurabh s

                        objParams[12] = new SqlParameter("@P_ORGANIZATIONID", Convert.ToInt32(System.Web.HttpContext.Current.Session["OrgId"]));  //added by saurabh s
                        objParams[13] = new SqlParameter("@P_SCHL_MODE", ScholarshipMode);
                        objParams[14] = new SqlParameter("@P_SCH_AMT_PER", Percentage);
                        objParams[15] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[15].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_UPD_BULK_STD_SCHOLARSHIP_DETAILS_SEMWISE", objParams, true);
                        retStatus = ret.ToString();
                    }
                    catch (Exception ex)
                    {
                        retStatus = "0";
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddStudent-> " + ex.ToString());
                    }

                    return retStatus;
                }



                //New Methods By Amit k on 19-02-2020

                public DataSet GetStudentDetails_For_Scholarship(int idno, int sessionno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        //objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_FOR_SCHOLARSHIP_ALLOTMENT_BY_REGNO", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }


                //New Methods By Amit k on 19-02-2020
                public int GetTotalSemesterCount(int idno, int SchlWise)
                {
                    int TotalSemCount = 0;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_ORGANIZATIONID", Convert.ToInt32(System.Web.HttpContext.Current.Session["OrgId"]));//As per discussion with umesh sir, OrganizationId added By Dileep Kare on 01.04.2022
                        objParams[2] = new SqlParameter("@P_SCHLWISE", SchlWise);
                        objParams[3] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[3].Direction = ParameterDirection.Output;

                        TotalSemCount = (Int32)objSQLHelper.ExecuteNonQuerySP("PKG_ACD_GET_SEMESTER_COUNT", objParams, true);
                        return TotalSemCount;
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetTotalSemesterCount-> " + ex.ToString());
                    }
                }

                /// <summary>
                /// //New Methods By Amit k on 19-02-2020
                /// Updated by Saurabh S. 25082022
                /// </summary>
                /// <param name="objS"></param>
                /// <param name="academicyearid"></param>
                /// <param name="schlMode"></param>
                /// <returns></returns>
                public string InsertStudentScholershipDetails(Student objS, int academicyearid, int schlMode, int Percentage)
                {
                    string retStatus = string.Empty;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Add New student
                        objParams = new SqlParameter[14];
                        objParams[0] = new SqlParameter("@P_IDNO", objS.IdNo);
                        objParams[1] = new SqlParameter("@P_DEGREENO", objS.DegreeNo);
                        objParams[2] = new SqlParameter("@P_BRANCHNO", objS.BranchNo);
                        objParams[3] = new SqlParameter("@P_IPADDRESS", objS.IPADDRESS);
                        objParams[4] = new SqlParameter("@P_UANO", objS.Uano);
                        objParams[5] = new SqlParameter("@P_ADMBATCH", objS.AdmBatch);
                        objParams[6] = new SqlParameter("@P_SCHOLERSHIPTYPENO", objS.ScholershipTypeNo);
                        objParams[7] = new SqlParameter("@P_SEMESTERNO", objS.SemesterNo);
                        objParams[8] = new SqlParameter("@P_SEMESTERAMOUNT", objS.Amount);
                        objParams[9] = new SqlParameter("@P_ORGANIZATIONID", Convert.ToInt32(System.Web.HttpContext.Current.Session["OrgId"]));
                        objParams[10] = new SqlParameter("@P_ACADEMIC_YEAR_ID", academicyearid);
                        objParams[11] = new SqlParameter("@P_SCHL_MODE", schlMode);
                        objParams[12] = new SqlParameter("@P_SCH_AMT_PER", Percentage);
                        objParams[13] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[13].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INSERT_STUDENT_SCHOLERSHIP_DETAILS", objParams, true);

                        retStatus = ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = "0";
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.InsertStudentScholershipDetails-> " + ex.ToString());
                    }

                    return retStatus;
                }


                public string InsertStudentScholershipDetailsSemWise(Student objS, int academicyearid, int schlMode, int Percentage)
                {
                    string retStatus = string.Empty;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Add New student
                        objParams = new SqlParameter[14];
                        objParams[0] = new SqlParameter("@P_IDNO", objS.IdNo);
                        objParams[1] = new SqlParameter("@P_DEGREENO", objS.DegreeNo);
                        objParams[2] = new SqlParameter("@P_BRANCHNO", objS.BranchNo);
                        objParams[3] = new SqlParameter("@P_IPADDRESS", objS.IPADDRESS);
                        objParams[4] = new SqlParameter("@P_UANO", objS.Uano);
                        objParams[5] = new SqlParameter("@P_ADMBATCH", objS.AdmBatch);
                        objParams[6] = new SqlParameter("@P_SCHOLERSHIPTYPENO", objS.ScholershipTypeNo);
                        objParams[7] = new SqlParameter("@P_SEMESTERNO", objS.SemesterNo);
                        objParams[8] = new SqlParameter("@P_SEMESTERAMOUNT", objS.Amount);
                        objParams[9] = new SqlParameter("@P_ORGANIZATIONID", Convert.ToInt32(System.Web.HttpContext.Current.Session["OrgId"]));
                        objParams[10] = new SqlParameter("@P_ACADEMIC_YEAR_ID", academicyearid);
                        objParams[11] = new SqlParameter("@P_SCHL_MODE", schlMode);
                        objParams[12] = new SqlParameter("@P_SCH_AMT_PER", Percentage);
                        objParams[13] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[13].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INSERT_STUDENT_SCHOLERSHIP_DETAILS_SEMWISE", objParams, true);

                        retStatus = ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = "0";
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.InsertStudentScholershipDetails-> " + ex.ToString());
                    }

                    return retStatus;
                }


                public int DeleteScholarshipAllotment(Student objS, int Schlshipno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[10];
                        objParams[0] = new SqlParameter("@P_IDNO", objS.IdNo);
                        objParams[1] = new SqlParameter("@P_SCHLSHPNO", Schlshipno);
                        objParams[2] = new SqlParameter("@P_DEGREENO", objS.DegreeNo);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", objS.BranchNo);
                        objParams[4] = new SqlParameter("@P_SEMESTERNO", objS.SemesterNo);
                        objParams[5] = new SqlParameter("@P_ADMBATCH", objS.AdmBatch);
                        objParams[6] = new SqlParameter("@P_SCHOLERSHIPTYPENO", objS.ScholershipTypeNo);
                        objParams[7] = new SqlParameter("@P_UANO", objS.Uano);
                        objParams[8] = new SqlParameter("@P_IPADDRESS", objS.IPADDRESS);
                        objParams[9] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[9].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_DELETE_SCHOLARSHIP_ALLOTMENT", objParams, true);

                        if (Convert.ToInt32(ret) == 4)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentRegistration.AddFailSubjects-> " + ex.ToString());
                    }
                    return retStatus;
                }



                /// <summary>
                /// ADDED BY DILEEP KARE 
                /// Updated by Saurabh dated on 09-05-2022
                /// DATE:20022020
                /// </summary>
                /// <param name="degreeno"></param>
                /// <param name="branchno"></param>
                /// <param name="semesterno"></param>
                /// <param name="prev_status"></param>
                /// <param name="admbatch"></param>
                /// <param name="colg"></param>
                /// <returns></returns>
                public DataSet GetStudentScholershipAdjustment(int degreeno, int branchno, int year, int semesterno, int prev_status, int yearID, int colg, int ScholarshipId)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[7];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_YEAR", year); //Added by Saurabh
                        objParams[3] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        //objParams[4] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[4] = new SqlParameter("@P_ACADEMIC_YEAR_ID", yearID);
                        objParams[5] = new SqlParameter("@P_COLLEGE_ID", colg);
                        objParams[6] = new SqlParameter("@P_SCHOLARSHIP_ID", ScholarshipId);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_STUDENT_SCHOLARSHIP_ADJUSTMENT", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }



                public DataSet SearchOnlineAppliedStudents(int batchNo, int criteriaNo)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_BATCHNO", batchNo);
                        objParams[1] = new SqlParameter("@P_CRITERIANO", criteriaNo);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_APPLIED_STUDENTS_LIST_ONLINE_ADM", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetCoursewiseStudentsCount-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet SearchOnlineCouncelingData(int batchNo, int criteriaNo)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_BATCHNO", batchNo);
                        objParams[1] = new SqlParameter("@P_CRITERIANO", criteriaNo);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_COUNCELING_DATA_LIST_ONLINE_ADM", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetCoursewiseStudentsCount-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet ExportAllStudentDetails(int batchNo)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_BATCHNO", batchNo);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_APPLIED_STUDENTS_LIST_WITH_ALL_DETAILS_ONLINE_ADM", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetCoursewiseStudentsCount-> " + ex.ToString());
                    }
                    return ds;
                }

                //Get All Details Of Student Session wise History Added by Mr.Aman 23/04/2020
                public DataSet GetSessionHistoryDetails(int idno, int sessionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GETALL_SESSIONWISE_STUDDETAILS", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.GetSessionHistoryDetails() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                //Get Student Details by using idno, session  and semester Added by Mr.Aman on 23/04/2020
                public DataSet GetSessionwiseMarkDetails(int idno, int sessionno, int semesterno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objsqlhelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objparams = new SqlParameter[3];
                        objparams[0] = new SqlParameter("@P_IDNO", idno);
                        objparams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objparams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);

                        ds = objsqlhelper.ExecuteDataSetSP("PKG_ACD_GET_SESSIONWISE_STUD_DETAILS", objparams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BUSINESSLAYER.BUSINESSLOGIC.STUDENTCONTROLLER.GETSESSIONWISEMARKDETAILS -->" + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                /// <summary>
                /// Added By S.Patil
                /// </summary>
                /// <param name="sessionNo"></param>
                /// <param name="semesterNo"></param>
                /// <param name="schemeNo"></param>
                /// <param name="per"></param>
                /// <returns></returns>
                public DataSet GetStudentsForFineEntry(int sessionNo, int semesterNo, int schemeNo, string per)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[04];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        objParams[1] = new SqlParameter("@P_SEMESTERNO", semesterNo);
                        objParams[2] = new SqlParameter("@P_SCHEMENO", schemeNo);
                        objParams[3] = new SqlParameter("@P_PER", per);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_SHOW_STUD_FOR_ATTENDANCE_FINE", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForFineEntry-> " + ex.ToString());
                    }

                    return ds;
                }

                // ADDED ON 08-06-2020 BY VAISHALI TO GET THE USER MANUAL LIST
                public DataSet GetAllUserManual(int userno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_UA_NO", userno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_ALL_USERMANUAL", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetAllselectDocument-> " + ex.ToString());
                    }

                    return ds;
                }

                // ADDED ON 09-06-2020 BY VAISHALI TO INSERT THE USER MANUAL DETAILS
                public int InsertUserManual(int ASNO, string fileType, string fileName, string path, int flag)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[6];

                        objParams[0] = new SqlParameter("@P_ASNO", ASNO);
                        objParams[1] = new SqlParameter("@P_FILETYPE", fileType);
                        objParams[2] = new SqlParameter("@P_FILE_NAME", fileName);
                        objParams[3] = new SqlParameter("@P_FILE_PATH", path);
                        objParams[4] = new SqlParameter("@P_FLAG", flag);
                        objParams[5] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[5].Direction = ParameterDirection.Output;

                        object ret = Convert.IsDBNull(objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INS_USERMANUAL", objParams, true));

                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.ACADEMIC.StudentController.InsertUserManual-> " + ex.ToString());
                    }

                    return retStatus;
                }

                /// <summary>
                /// Added By Dileep 
                /// Date:07-08-2020
                /// </summary>
                /// <param name="Sessionno"></param>
                /// <returns></returns>
                public DataSet GetPromotedStudentListForExcel(int Sessionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", Sessionno);

                        ds = objHelper.ExecuteDataSetSP("PKG_GET_PROMOTED_STUDENT_LIST_FOR_EXCEL", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetPromotedStudentListForExcel()->" + ex.ToString());
                    }
                    return ds;
                }

                /// <summary>
                /// Added By Dileep 
                /// Date:07-08-2020
                /// </summary>
                /// <param name="Sessionno"></param>
                /// <returns></returns>

                public DataSet GetNotPromotedStudentListForExcel(int Sessionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", Sessionno);

                        ds = objHelper.ExecuteDataSetSP("PKG_GET_NOTPROMOTED_STUDENT_LIST_FOR_EXCEL", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetNotPromotedStudentListforExcel()->" + ex.ToString());
                    }
                    return ds;
                }


                // ADDED BY DEEPALI GIRI on DATE:18/09/2020

                public int DeleteScholarshipAdjustment(Student objS, int dcrno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;



                        objParams = new SqlParameter[10];
                        objParams[0] = new SqlParameter("@P_IDNO", objS.IdNo);
                        objParams[1] = new SqlParameter("@P_DEGREENO", objS.DegreeNo);
                        objParams[2] = new SqlParameter("@P_BRANCHNO", objS.BranchNo);
                        objParams[3] = new SqlParameter("@P_SEMESTERNO", objS.SemesterNo);
                        objParams[4] = new SqlParameter("@P_DCRNO", dcrno);
                        objParams[5] = new SqlParameter("@P_ADMBATCH", objS.AdmBatch);
                        objParams[6] = new SqlParameter("@P_SCHOLERSHIPTYPENO", objS.ScholershipTypeNo);
                        objParams[7] = new SqlParameter("@P_UANO", objS.Uano);
                        objParams[8] = new SqlParameter("@P_IPADDRESS", objS.IPADDRESS);
                        objParams[9] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[9].Direction = ParameterDirection.Output;



                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_DELETE_SCHOLARSHIP_ADJUSTMENT", objParams, true);



                        if (Convert.ToInt32(ret) == 4)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);



                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentRegistration.AddFailSubjects-> " + ex.ToString());
                    }



                    return retStatus;



                }
                public DataSet GetStudentDetails_For_FineAllotment(int idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        //objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_FOR_FINE_ALLOTMENT_BY_REGNO", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }

                //Added 90-Days on 26062020

                public DataTableReader TermsCondtionDetails(int idno)
                {
                    DataTableReader dtr = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        dtr = objSQLHelper.ExecuteDataSetSP("PKG_TERMSCONDTION_DETAILS_BYID", objParams).Tables[0].CreateDataReader();
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.ShowEmpDetails->" + ex.ToString());
                    }
                    return dtr;
                }

                public DataTableReader UserDetails(int idno)
                {
                    DataTableReader dtr = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_USERNO", idno);
                        dtr = objSQLHelper.ExecuteDataSetSP("PKG_USER_DETAILS_BYID", objParams).Tables[0].CreateDataReader();
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.ShowEmpDetails->" + ex.ToString());
                    }
                    return dtr;
                }

                // ADDED ON 15-10-2020 BY VAISHALI TO GET THE USER MANUAL LIST BY USERNO
                public DataSet GetAllUserManualByUserNo(int userno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_UA_NO", userno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_ALL_USERMANUAL_BY_USERNO", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetAllUserManualByUserNo-> " + ex.ToString());
                    }

                    return ds;
                }
                // ADDED ON 09-06-2020 BY VAISHALI TO INSERT THE USER MANUAL DETAILS
                public int InsertUserManual(int ASNO, string fileType, string fileName, string path, int flag, int SMID)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[7];

                        objParams[0] = new SqlParameter("@P_ASNO", ASNO);
                        objParams[1] = new SqlParameter("@P_FILETYPE", fileType);
                        objParams[2] = new SqlParameter("@P_FILE_NAME", fileName);
                        objParams[3] = new SqlParameter("@P_FILE_PATH", path);
                        objParams[4] = new SqlParameter("@P_FLAG", flag);
                        objParams[5] = new SqlParameter("@P_SMID", SMID);
                        objParams[6] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[6].Direction = ParameterDirection.Output;

                        object ret = Convert.IsDBNull(objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INS_USERMANUAL", objParams, true));

                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.ACADEMIC.StudentController.InsertUserManual-> " + ex.ToString());
                    }

                    return retStatus;
                }

                // ADDED ON 08-06-2020 BY VAISHALI TO GET THE USER MANUAL LIST
                public DataSet GetAllUserManual(int userno, int as_no)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_UA_NO", userno);
                        objParams[1] = new SqlParameter("@P_AS_NO", as_no);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_ALL_USERMANUAL", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetAllselectDocument-> " + ex.ToString());
                    }

                    return ds;
                }

                // added on 12-10-2020 by Vaishali
                public int UpdateSubModuleDetails(int SMID, int MID, string submodulename, string user_types)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Update sub module
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_SMID", SMID);
                        objParams[1] = new SqlParameter("@P_MID", MID);
                        objParams[2] = new SqlParameter("@P_SUBMODULENAME", submodulename);
                        objParams[3] = new SqlParameter("@P_USER_TYPES", user_types);
                        objParams[4] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[4].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_UPD_SUB_MODULE", objParams, true);

                        if (Convert.ToInt32(ret) == 2)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateSubModuleDetails-> " + ex.ToString());
                    }

                    return retStatus;
                }
                // added on 12-10-2020 by Vaishali
                public int InsertSubModuleDetails(int MID, string submodulename, string user_types)
                {
                    int retStatus = 0;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Add New sub module
                        objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_MID", MID);
                        objParams[1] = new SqlParameter("@P_SUBMODULENAME", submodulename);
                        objParams[2] = new SqlParameter("@P_USER_TYPES", user_types);
                        objParams[3] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[3].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_INS_SUB_MODULE", objParams, true);

                        retStatus = Convert.ToInt32(ret);

                    }
                    catch (Exception ex)
                    {
                        retStatus = -99;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.InsertSubModuleDetails-> " + ex.ToString());
                    }

                    return retStatus;
                }
                // added on 14-10-2020 by Vaishali
                public DataSet GetSubModuleDetails(int MID)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_MID", MID);

                        ds = objHelper.ExecuteDataSetSP("PKG_GET_SUBMODULE_DETAILS", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetSubModuleDetails()->" + ex.ToString());
                    }
                    return ds;
                }



                // ADDED ON 15-10-2020 BY VAISHALI TO GET THE Sub Module LIST
                public DataSet GetAllSubModuleDetails()
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[0];

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_SUBMODULE_ALL_DETAILS", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetAllSubModuleDetails-> " + ex.ToString());
                    }

                    return ds;
                }

                // To Get Admission Batch wise Students count
                public DataSet GetAdmissionDataForPrincipalDashboard()
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        ds = objSQLHelper.ExecuteDataSet("GET_ADMBATCH_WISE_STUDENT_COUNT_DASHBOARD");
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentCurrentRegDetails-> " + ex.ToString());
                    }
                    return ds;
                }
                //*********************************************************************************************************************************************************************
                // TO GET ACADEMIC ACTIVITY DETAILS 
                public DataSet GetAcdActivityDetailsForPrincipalDashboard()
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        ds = objSQLHelper.ExecuteDataSet("[dbo].[GET_ACADEMIC_ACTIVITY_DETAILS_DASHBOARD]");
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentCurrentRegDetails-> " + ex.ToString());
                    }
                    return ds;
                }
                //*********************************************************************************************************************************************************************
                // TO GET RESULT ANALYSIS DATA 
                public DataSet GetResultAnalysisForPrincipalDashboard()
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        ds = objSQLHelper.ExecuteDataSet("[dbo].[PKG_GET_RESULT_ANALYSIS_DASHBOARD]");
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentCurrentRegDetails-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet RetrieveFacultyTodaysTimeTable(int sessionno, int schemeno, int semesterno, int uano, int sectionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_UANO", uano);
                        objParams[4] = new SqlParameter("@P_SECTIONNO", sectionno);         // Added on 07-04-2020
                        objParams[5] = new SqlParameter("@P_DAY", System.DateTime.Now.DayOfWeek);   // to get day number of today.

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_SP_TIMETABLE_FACULTY_TODAY", objParams);                 // Added on 06-04-2020
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentCurrentRegDetails-> " + ex.ToString());
                    }
                    return ds;
                }
                //*********************************************************************************************************************************************************************
                public DataSet RetrieveFacultyTimeTableDetails(int sessionno, int schemeno, int semesterno, int uano, int sectionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_UANO", uano);
                        objParams[4] = new SqlParameter("@P_SECTIONNO", sectionno);                     // Added on 07-04-2020

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_FACULTY_DASHBOARD_TIMETABLE", objParams);    // Added on 06-04-2020
                        // ds = objSQLHelper.ExecuteDataSetSP("PKG_SP_TIMETABLE_FACULTY", objParams);      // Commented on 06-04-2020      

                        //  ds = objSQLHelper.ExecuteDataSetSP("PKG_SP_TIMETABLE_FACULTY_0104", objParams);  // Comment on 01-04-2020

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentCurrentRegDetails-> " + ex.ToString());
                    }
                    return ds;
                }
                //*********************************************************************************************************************************************************************
                public DataSet GetTaskForFacultyDashboard(int UserTypeId, int ua_no)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_usertype", UserTypeId);
                        objParams[1] = new SqlParameter("@P_userno", ua_no);
                        ds = objSQLHelper.ExecuteDataSetSP("[dbo].[GET_TASK_LINK_FACULTY_USERWISE]", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetTaskForFacultyDashboard-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet RetrieveStudentAttendanceDetailsForDashboard(int sessionno, int schemeno, int semesterno, int idno, int sectionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_IDNO", idno);
                        objParams[4] = new SqlParameter("@P_SECTIONNO", sectionno);                                     // Added on 07-04-2020

                        // ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_REPORT_STUDENT_ATTENDANCE", objParams);         // Commented on 07-04-2020
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_REPORT_STUDENT_ATTENDANCE_DASHBOARD", objParams);            // Added on 07-04-2020

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentAttendanceDetailsForDashboard-> " + ex.ToString());
                    }
                    return ds;
                }
                //*********************************************************************************************************************************************************************
                public DataSet RetrieveStudentTimeTableDetails(int sessionno, int schemeno, int semesterno, int idno, int sectionno) // procedure not available
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_IDNO", idno);
                        objParams[4] = new SqlParameter("@P_SECTIONNO", sectionno);                 // Added on 07-04-2020

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_SP_STUDENT_TIMETABLE", objParams);          // Added on 06-04-2020
                        //  ds = objSQLHelper.ExecuteDataSetSP("PKG_SP_TIMETABLE", objParams);                // Commented on 06-04-2020
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentTimeTableDetails-> " + ex.ToString());
                    }
                    return ds;
                }
                //*********************************************************************************************************************************************************************
                //TO GET TASK DATA FOR STUDENT DASHBOARD
                public DataSet GetTaskForStudentDashboard(int UserTypeId, int ua_no)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_usertype", UserTypeId);
                        objParams[1] = new SqlParameter("@P_userno", ua_no);
                        ds = objSQLHelper.ExecuteDataSetSP("[dbo].[GET_TASK_LINK_STUDENT_USERWISE]", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetTaskForStudentDashboard-> " + ex.ToString());
                    }
                    return ds;
                }
                //*********************************************************************************************************************************************************************
                //TO GET STUDENT ATTENDANCE PERCENTAGE FOR DASHBOARD
                public DataSet GetStudentAttPerDashboard(int ua_no)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_UANO", ua_no);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_STUDENT_ATTENDANCE_DASHBOARD", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentAttPerDashboard-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetQuickAccessForStudentDashboard(int UserTypeId)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_usertype", UserTypeId);
                        ds = objSQLHelper.ExecuteDataSetSP("[dbo].[GET_QUICK_LINK_USERWISE]", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentCurrentRegDetails-> " + ex.ToString());
                    }
                    return ds;
                }

                // added on 14-10-2020 by Vaishali
                public SqlDataReader GetSingleSubModuleDetails(int SMID)
                {
                    SqlDataReader dr = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_SMID", SMID);
                        dr = objSQLHelper.ExecuteReaderSP("PKG_GET_SUBMODULE_DETAILS_BY_SMID", objParams);
                    }
                    catch (Exception ex)
                    {
                        return dr;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.SchemeController.GetSingleSubModuleDetails-> " + ex.ToString());
                    }
                    return dr;
                }

                public DataSet GetSingleStudentScholarshipData(int idno, int Scholarshipid, int schMode, int PercentAmt)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[] 
                        {
                            
                            new SqlParameter("@P_IDNO", idno),
                            new SqlParameter("@P_ORGANIZATIONID", Convert.ToInt32(System.Web.HttpContext.Current.Session["OrgId"])),
                            new SqlParameter("@P_SCHOLARSHIP_ID", Scholarshipid),
                            new SqlParameter("@P_SCH_MODE", schMode),
                            new SqlParameter("@P_SCH_AMT_PER", PercentAmt)
                           
                        };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_GET_SINGLE_STUDENT_SCHOLARSHIP_DETAILS", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.FeeCollectionController.GetSingleStudentScholarshipData() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }


                public DataSet GetStudentListForBulkTanscriptReport(int sessionno, int degreeno, int branchno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[2] = new SqlParameter("@P_BRANCHNO", branchno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_STUDENT_FOR_TRANSCRIPT_REPORT", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }

                // Added by safal gupta 19012020 for detention report

                public DataSet Get_Detent_StudentData(int sessionno, int degreeno, int branchno, int schemeno, int semesterno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[] {
                    new SqlParameter("@P_SESSIONNO", sessionno),
                    new SqlParameter("@P_DEGREENO", degreeno),
                    new SqlParameter("@P_BRANCHNO",branchno),
                    new SqlParameter("@P_SCHEMENO", schemeno),
                    new SqlParameter("@P_SEMESTERNO", semesterno)
                };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_ACD_DETENTION_STUDENT_LIST", sqlParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.WinAddIn.BusinessLogic.StudentController.Get_Detent_StudentData() --> " + ex.Message);
                    }
                    return ds;
                }



                //Added by Safal Manoj gupta on 29012021
                public DataSet GetAllStudentDetentionFinalEXCEL(int session)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[1];

                        sqlParams[0] = new SqlParameter("@P_SESSIONNO", session);
                        ds = objDataAccess.ExecuteDataSetSP("PKG_ACD_DETENTION_STUDENT_LIST_EXCEL", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.StudentController.GetAllStudentDetentionFinalEXCEL() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }



                // Added by Safal manoj gupta on 23012021


                public DataSet GetAllStudentDetentionProEXCEL(int session)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[1];
                        sqlParams[0] = new SqlParameter("@P_SESSIONNO", session);
                        ds = objDataAccess.ExecuteDataSetSP("PKG_ACD_PROV_DETENTION_STUDENT_LIST_EXCEL", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.StudentController.GetAllStudentDetentionProEXCEL() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                // Added by Safal manoj gupta on 23012021

                public DataSet Get_Provisional_Detent_StudentList(int sessionno, int degreeno, int branchno, int schemeno, int semesterno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[] {
                    new SqlParameter("@P_SESSIONNO", sessionno),
                    new SqlParameter("@P_DEGREENO", degreeno),
                    new SqlParameter("@P_BRANCHNO",branchno),
                    new SqlParameter("@P_SCHEMENO", schemeno),
                    new SqlParameter("@P_SEMESTERNO", semesterno),
                    // new SqlParameter("@P_COURSENO", courseno)
                };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_ACD_PROV_DETENTION_STUDENT_LIST", sqlParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.WinAddIn.BusinessLogic.StudentController.Get_Detent_StudentData() --> " + ex.Message);
                    }
                    return ds;
                }
                /// <summary>
                /// Added by Deepali G. Dated on 11022021
                /// </summary>
                /// <param name="objstud"></param>
                /// <param name="year_12"></param>
                /// <param name="board"></param>
                /// <returns></returns>
                public int SaveExcelSheetDataInDataBase(Student objstud, string year_12, string board, int OrgID)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[36];
                        objParams[0] = new SqlParameter("@P_REGNO", objstud.RegNo);
                        objParams[1] = new SqlParameter("@P_ROLLNO", objstud.RollNo);
                        objParams[2] = new SqlParameter("@P_SEX", objstud.Sex);
                        objParams[3] = new SqlParameter("@P_IDTYPENO", objstud.IdType);
                        objParams[4] = new SqlParameter("@P_SEMESTERNO", objstud.SemesterNo);
                        objParams[5] = new SqlParameter("@P_YEAR", objstud.Year);
                        objParams[6] = new SqlParameter("@P_ADMBATCH", objstud.AdmBatch);
                        objParams[7] = new SqlParameter("@P_STUDNAME", objstud.StudName);

                        if (objstud.Dob == DateTime.MinValue)
                            objParams[8] = new SqlParameter("@P_DOB", DBNull.Value);
                        else
                            objParams[8] = new SqlParameter("@P_DOB", objstud.Dob);

                        objParams[9] = new SqlParameter("@P_FATHERNAME", objstud.FatherName);
                        objParams[10] = new SqlParameter("@P_CATEGORYNO", objstud.CategoryNo);
                        objParams[11] = new SqlParameter("@P_PH", objstud.PH);
                        objParams[12] = new SqlParameter("@P_STUDENTMOBILE", objstud.StudentMobile);
                        objParams[13] = new SqlParameter("@P_EMILID", objstud.EmailID);
                        objParams[14] = new SqlParameter("@P_COLLEGE_ID", objstud.Collegeid);
                        objParams[15] = new SqlParameter("@P_DEGREENO", objstud.DegreeNo);
                        objParams[16] = new SqlParameter("@P_BRANCHNO", objstud.BranchNo);
                        objParams[17] = new SqlParameter("@P_PADDRESS", objstud.Corres_address);
                        objParams[18] = new SqlParameter("@P_PSTATE", objstud.StateNo);
                        objParams[19] = new SqlParameter("@P_PDISTRICT", objstud.PDISTRICT);
                        objParams[20] = new SqlParameter("@P_PPINCODE", objstud.PPinCode);
                        objParams[21] = new SqlParameter("@P_BLOODGRPNO", objstud.BloodGroupNo);
                        objParams[22] = new SqlParameter("@P_YR_12", year_12);
                        objParams[23] = new SqlParameter("@P_PR_12", objstud.Percentage);
                        objParams[24] = new SqlParameter("@P_BOARD_12", board);
                        objParams[25] = new SqlParameter("@P_SECTIONNO", objstud.SectionNo);             //Added By Ruchika Dhakate on 07.09.2022     
                        objParams[26] = new SqlParameter("@P_UANO", objstud.Uano);                      //Added By Ruchika Dhakate on 07.09.2022  
                        if (objstud.AdmDate == DateTime.MinValue)
                            objParams[27] = new SqlParameter("@P_ADM_DATE", DBNull.Value);
                        else
                            objParams[27] = new SqlParameter("@P_ADM_DATE", objstud.AdmDate);

                        objParams[28] = new SqlParameter("@P_PAYTYPENO", objstud.PayTypeNO);
                        objParams[29] = new SqlParameter("@P_ORGANIZATIONID", OrgID);//As per discussion with umesh sir, OrganizationId added By Dileep Kare on 01.04.2022
                        objParams[30] = new SqlParameter("@P_COUNTRYNO", objstud.CountryNo);        //Added by sachin Lohakare on 21-03-2023
                        objParams[31] = new SqlParameter("@P_ACADEMICYEARNO", objstud.AcademicYearNo);
                        objParams[32] = new SqlParameter("@P_FATHERMOBILE", objstud.FatherMobile);
                        objParams[33] = new SqlParameter("@P_FATHEREMAIL", objstud.Fatheremail);
                        objParams[34] = new SqlParameter("@P_MOTHERNAME", objstud.MotherName);
                        objParams[35] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[35].Direction = ParameterDirection.Output;

                        object obj = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_UPLOAD_STUD_ADMISSION_DATA_EXCEL", objParams, true);
                        if (obj != null && obj.ToString() != "-99" && obj.ToString() != "-999")
                        {
                            if (obj.ToString() == "1")
                                retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                            else if (obj.ToString() == "-1001")
                                retStatus = Convert.ToInt32(CustomStatus.DuplicateRecord);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);
                    }

                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.LMController.SaveExcelSheetDataInDataBase() -> " + ex.ToString());
                    }
                    return retStatus;
                }

                public DataSet GetNewReceiptData(string modeOfReceipt, int userNo, string receipt_code)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                {
                    new SqlParameter("@P_MODE_OF_RECEIPT", modeOfReceipt),
                    new SqlParameter("@P_RECEIPT_CODE", receipt_code),
                    new SqlParameter("@P_USER_NO", userNo)
                };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_FEECOLLECT_NEW_RECEIPT_DATA", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.StudentController.GetNewReceiptData() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                //added new on date 27/02/2021
                public DataSet Get_StudentDataOnlinePayment(int idno, int sessionno, string rec_code, int semesterno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[] 
                        {
                    new SqlParameter("@P_IDNO", idno),
                    new SqlParameter("@P_SESSIONNO",sessionno),
                    new SqlParameter("@P_RECIEPT_CODE",rec_code),
                    new SqlParameter("@P_SEMESTERNO",semesterno),
                    //new SqlParameter("@P_DOB", DOB)   
                };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_GET_STUDENT_INFO_BY_IDNO_DATA_ONLINE_PAY", sqlParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.WinAddIn.BusinessLogic.StudentController.Get_Detent_StudentData() --> " + ex.Message);
                    }
                    return ds;
                }

                public int UpdateStudentAndFatherInfo(string studids, int fieldID, string FullName, string FirstName, string MiddleName, string LastName, string IpAddress, string Updated_Field, int ua_no)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[10];
                        objParams[0] = new SqlParameter("@P_STUDID", studids);
                        objParams[1] = new SqlParameter("@P_FIELDID", fieldID);
                        objParams[2] = new SqlParameter("@P_FULLNAME", FullName);
                        objParams[3] = new SqlParameter("@P_FIRSTNAME", FirstName);
                        objParams[4] = new SqlParameter("@P_MIDDLENAME", MiddleName);
                        objParams[5] = new SqlParameter("@P_LASTNAME", LastName);
                        objParams[6] = new SqlParameter("@P_UA_NO", ua_no);
                        objParams[7] = new SqlParameter("@P_UPDATEDFIELD", Updated_Field);
                        objParams[8] = new SqlParameter("@P_IPADDRESS", IpAddress);
                        objParams[9] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[9].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUD_FATHER", objParams, false);
                        if (ret != null)
                            if (ret.ToString() != "-99")
                                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentAndFatherInfo-> " + ex.ToString());
                    }
                    return retStatus;
                }

                /// <summary>
                /// NEW METHOD ADDED BY DILEEP KARE
                /// DATE:16-03-2021
                /// </summary>
                /// <param name="SESSIONNO"></param>
                /// <param name="semesterno"></param>
                /// <param name="audit_date"></param>
                /// <param name="Remark"></param>
                /// <returns></returns>
                public int InsAdmitCardLogStudent(int degreeNo, int branchno, string ids, string ipadd, int userid, string Remark, int SESSIONNO, int semesterno, DateTime audit_date)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[8];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeNo);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_IDNOS", ids);
                        objParams[3] = new SqlParameter("@P_IPADDRSS", ipadd);
                        objParams[4] = new SqlParameter("@P_USER_ID", userid);
                        objParams[5] = new SqlParameter("@P_REMARK", Remark);   //Dileep; 24-01-2020
                        objParams[6] = new SqlParameter("@P_SESSIONNO", SESSIONNO);//Dileep;24-01-2020
                        objParams[7] = new SqlParameter("@P_SEMESTERNO", semesterno);//Dileep;24-01-2020
                        object ret = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_ADMITCARD_LOG", objParams);
                        if (ret != null)
                            if (ret.ToString() != "-99")
                                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.InsGradeTranscriptLog-> " + ex.ToString());
                    }

                    return retStatus;
                }
                //added by safal gupta 01042021
                public DataSet GetWithHeldReport(int sessionno, int degree, int branch, int scheme, int sem, int idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[6];

                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_DEGREENO", degree);
                        objParams[2] = new SqlParameter("@P_BRANCHNO", branch);
                        objParams[3] = new SqlParameter("@P_SCHEMENO", scheme);
                        objParams[4] = new SqlParameter("@P_SEMESTERNO", sem);
                        objParams[5] = new SqlParameter("@P_IDNO", idno);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_REPORT_WITHHELD_DETAILS", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.GetWithHeldData --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                // ADDED ON 15-10-2020 BY Swapnil TO GET THE Masters Data
                public DataSet RetrieveMasterData()
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[0];

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_MASTER_DATA", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetAllSubModuleDetails-> " + ex.ToString());
                    }

                    return ds;
                }

                //Get Instalment Details:
                public DataSet GetStudentInfoInstalmentListByEnrollNo(int Semesterno, int idno, string Reciept_Code)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[] 
                { 
                    new SqlParameter("@P_SEMESTERNO ", Semesterno),
                    new SqlParameter("@P_IDNO ", idno),
                    new SqlParameter("@P_RECIEPT_CODE ", Reciept_Code)
                };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_STUDENT_INSTALMENT_LIST_GET_STUDENT_INFO", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.FeeCollectionController.GetStudentInfoDocumentListByEnrollNo() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                public int DeleteStudentInstalment(int idno, int Semesterno, string recieptcode)
                {
                    int status = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[] 
                     {
                           new SqlParameter("@P_IDNO", idno),
                           new SqlParameter("@P_SEMESTERNO", Semesterno),
                      
                           new SqlParameter("@P_RECIEPT_CODE", recieptcode),
                        
                           new SqlParameter("@P_OUT", SqlDbType.Int),
                    
                       };
                        sqlParams[sqlParams.Length - 1].Direction = ParameterDirection.Output;
                        status = (Int32)objDataAccess.ExecuteNonQuerySP("PKG_ACD_STUD_DELETE_INSTALMENT", sqlParams, true);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.SessionActivityController.AddSessionActivity() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return status;
                }


                //Insert Details:

                public int InsertStudentInstalment(int idno, int Semesterno, string DueDate, decimal Amount, decimal TotalAmount, int InstalmentNo, string Remark, int totalcount, int usertype, string recieptcode, int dmno, int recon, int userno, int Collegecode, string ipaddress)
                {
                    int status = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[] 
                     {
                           new SqlParameter("@P_IDNO", idno),
                           new SqlParameter("@P_SEMESTERNO", Semesterno),
                           new SqlParameter("@P_DUE_DATE", DueDate),
                           new SqlParameter("@P_AMOUNT", Amount),
                           new SqlParameter("@P_TOTALAMOUNT", TotalAmount),
                           new SqlParameter("@P_NO_OF_INSTALL", InstalmentNo),                    
                           new SqlParameter("@P_REMARK_BY_AUTHORITY", Remark),
                           new SqlParameter("@P_TOTAL_INSTALMENT", totalcount),
                           new SqlParameter("@P_UA_TYPE", usertype),
                           new SqlParameter("@P_RECIEPT_CODE", recieptcode),
                           new SqlParameter("@P_DMNO", dmno),
                           new SqlParameter("@P_RECON", recon),
                           new SqlParameter("@P_UA_NO", userno),
                           new SqlParameter("@P_COLLEGE_CODE", Collegecode),
                           new SqlParameter("@P_IPADDRESS", ipaddress),
                           new SqlParameter("@P_OUT", SqlDbType.Int),
                    
                       };
                        sqlParams[sqlParams.Length - 1].Direction = ParameterDirection.Output;
                        status = (Int32)objDataAccess.ExecuteNonQuerySP("PKG_ACD_STUD_INSERT_INSTALMENT_AMOUNT", sqlParams, true);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.SessionActivityController.AddSessionActivity() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return status;
                }

                // ADDED ON 31-05-2021 BY Deepali to get student list for Adm Approval
                public DataSet GetStudentForAdmApprove(int ADMBATCH, int COLLEGE_ID, int DEPARTMENTNO, int DEGREENO, int BRANCHNO)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                { 

                    new SqlParameter("@P_ADMBATCH",ADMBATCH),
                    new SqlParameter("@P_COLLEGE_ID",COLLEGE_ID),
                    new SqlParameter("@P_DEPTNO", DEPARTMENTNO),
                    new SqlParameter("@P_DEGREENO", DEGREENO),
                    new SqlParameter("@P_BRANCHNO", BRANCHNO)
                };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_GET_STUDENT_FOR_ADMISSION_APPROVAL", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.FeeCollectionController.GetMeritList() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                public int UpdateStudentAdmissionStatus(Student objStudent, int status, string reason, int admstatus)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[8];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_UANO", objStudent.Uano);
                        objParams[2] = new SqlParameter("@P_IP_ADDRESS", objStudent.IPADDRESS);
                        objParams[3] = new SqlParameter("@P_REMARK", objStudent.Remark);
                        objParams[4] = new SqlParameter("@P_STATUS", status);
                        objParams[5] = new SqlParameter("@P_REASON", reason);
                        objParams[6] = new SqlParameter("@P_ADMSTATUS", admstatus);
                        objParams[7] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[7].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUDENT_ADM_STATUS", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentPersonalInformation-> " + ex.ToString());
                    }

                    return retStatus;

                }

                // ADDED ON 28-05-2021 BY DEEPALI TO GET THE Masters Data FOR EXCEL
                public DataSet RetrieveMasterDataForExcel()
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[0];

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_MASTER_DATA_FOR_EXCEL", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetAllSubModuleDetails-> " + ex.ToString());
                    }

                    return ds;
                }

                public int SaveNewAdmExcelDataInDataBase(Student objstud, string year_12, string board, string college_rank)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[29];
                        objParams[0] = new SqlParameter("@P_REGNO", objstud.RegNo);
                        objParams[1] = new SqlParameter("@P_ROLLNO", objstud.RollNo);
                        objParams[2] = new SqlParameter("@P_SEX", objstud.Sex);
                        objParams[3] = new SqlParameter("@P_IDTYPENO", objstud.IdType);
                        objParams[4] = new SqlParameter("@P_SEMESTERNO", objstud.SemesterNo);
                        objParams[5] = new SqlParameter("@P_YEAR", objstud.Year);
                        objParams[6] = new SqlParameter("@P_ADMBATCH", objstud.AdmBatch);
                        objParams[7] = new SqlParameter("@P_STUDNAME", objstud.StudName);

                        if (objstud.Dob == DateTime.MinValue)
                            objParams[8] = new SqlParameter("@P_DOB", DBNull.Value);
                        else
                            objParams[8] = new SqlParameter("@P_DOB", objstud.Dob);

                        objParams[9] = new SqlParameter("@P_FATHERNAME", objstud.FatherName);
                        objParams[10] = new SqlParameter("@P_CATEGORYNO", objstud.CategoryNo);
                        objParams[11] = new SqlParameter("@P_PH", objstud.PH);
                        objParams[12] = new SqlParameter("@P_STUDENTMOBILE", objstud.StudentMobile);
                        objParams[13] = new SqlParameter("@P_EMILID", objstud.EmailID);
                        objParams[14] = new SqlParameter("@P_COLLEGE_ID", objstud.Collegeid);
                        objParams[15] = new SqlParameter("@P_DEGREENO", objstud.DegreeNo);
                        objParams[16] = new SqlParameter("@P_BRANCHNO", objstud.BranchNo);
                        objParams[17] = new SqlParameter("@P_PADDRESS", objstud.Corres_address);
                        objParams[18] = new SqlParameter("@P_PSTATE", objstud.StateNo);
                        objParams[19] = new SqlParameter("@P_PDISTRICT", objstud.PDISTRICT);
                        objParams[20] = new SqlParameter("@P_PPINCODE", objstud.PPinCode);
                        objParams[21] = new SqlParameter("@P_BLOODGRPNO", objstud.BloodGroupNo);
                        objParams[22] = new SqlParameter("@P_YR_12", year_12);
                        objParams[23] = new SqlParameter("@P_PR_12", objstud.Percentage);
                        objParams[24] = new SqlParameter("@P_BOARD_12", board);

                        if (objstud.AdmDate == DateTime.MinValue)
                            objParams[25] = new SqlParameter("@P_ADM_DATE", DBNull.Value);
                        else
                            objParams[25] = new SqlParameter("@P_ADM_DATE", objstud.AdmDate);

                        objParams[26] = new SqlParameter("@P_PAYTYPENO", objstud.PayTypeNO);
                        objParams[27] = new SqlParameter("@P_COLLEGE_RANK", college_rank);
                        objParams[28] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[28].Direction = ParameterDirection.Output;

                        object obj = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_UPLOAD_STUD_NEW_ADM_DATA_EXCEL", objParams, true);
                        if (obj != null && obj.ToString() != "-99" && obj.ToString() != "-999")
                        {
                            if (obj.ToString() == "1")
                                retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                            else if (obj.ToString() == "-1001")
                                retStatus = Convert.ToInt32(CustomStatus.DuplicateRecord);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);
                    }

                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.LMController.SaveExcelSheetDataInDataBase() -> " + ex.ToString());
                    }
                    return retStatus;
                }

                public DataSet StudentExamRegisteredList(int Sessionno, int College_id, int Degreeno, int Branchno, int Schemeno, int Semesterno, int ExamType, int ReportType)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[8];
                        sqlParams[0] = new SqlParameter("@P_SESSIONNO", Sessionno);
                        sqlParams[1] = new SqlParameter("@P_COLLEGE_ID", College_id);
                        sqlParams[2] = new SqlParameter("@P_DEGREENO", Degreeno);
                        sqlParams[3] = new SqlParameter("@P_BRANCHNO", Branchno);
                        sqlParams[4] = new SqlParameter("@P_SCHEMENO", Schemeno);
                        sqlParams[5] = new SqlParameter("@P_SEMESTERNO", Semesterno);
                        sqlParams[6] = new SqlParameter("@P_EXAMTYPE", ExamType);
                        sqlParams[7] = new SqlParameter("@P_REPORTTYPE", ReportType);
                        ds = objDataAccess.ExecuteDataSetSP("PKG_GET_STUDENT_LIST_FOR_EXAM_REGISTRATION_REPORT", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.StudentController.StudentExamRegisteredList() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }
                /// <summary>
                /// Added By Dileep on 05.06.2021
                /// </summary>
                /// <param name="Sessionno"></param>
                /// <returns></returns>
                public DataSet GetDuesStatusAllotment(int Sessionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[1];
                        sqlParams[0] = new SqlParameter("@P_SESSIONNO", Sessionno);
                        ds = objDataAccess.ExecuteDataSetSP("PKG_EXAM_GET_DUES_ALLOTMENT_STATUS", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.StudentController.StudentExamRegisteredList() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                //Added By Nikhil V.Lambe on 18/06/2021 to get details of course by idno
                public DataSet RetrieveRegDetailsByIdnoAndSession(int idno, int sessionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_REGISTRATION_DETAILS_BY_ID_AND_SESSION", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveRegDetailsByIdnoAndSession-> " + ex.ToString());
                    }
                    return ds;
                }
                //Added By Nikhil V.Lambe on 19/06/2021 to get details of internal marks
                public DataSet GetDetailsOfInternalMarks(int idno, int sessionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_SP_GET_INTERNAL_MARKS_DETAILS", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetDetailsOfInternalMarks-> " + ex.ToString());
                    }
                    return ds;
                }


                //Added By Nikhil V.Lambe on 19/06/2021 to get details of attendance
                public DataSet GetDetailsOfAttendanceByIdno(int idno, int sessionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_SP_GET_ATTENDANCE_DETAILS_BY_IDNO", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetDetailsOfAttendanceByIdno-> " + ex.ToString());
                    }
                    return ds;
                }
                // ADDED ON 23-06-2021 BY Deepali to get student list with Admission Status
                public DataSet GetStudentListWithStatus(int ADMBATCH)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                { 

                    new SqlParameter("@P_ADMBATCH",ADMBATCH)
                };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_GET_STUDENT_WITH_ADMISSION_STATUS", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.StudentController.GetStudentListWithStatus() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                // ADDED ON 23-06-2021 BY Deepali to get student list with Admission Status
                public DataSet GetNewAdmissionStudentDetails(int ADMBATCH, int value)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                { 

                     new SqlParameter("@P_ADMBATCH",ADMBATCH),
                     new SqlParameter("@P_VALUE",value)
                };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_GET_STUDENT_NEW_ADMISSION_DATA", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.StudentController.GetNewAdmissionStudentDetails() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }


                public int InsertUpdateStudentDocSubmitLog(int studid)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[2];

                        objParams[0] = new SqlParameter("@P_IDNO", studid);
                        objParams[1] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[1].Direction = ParameterDirection.Output;

                        object ret = Convert.IsDBNull(objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INS_UPDATE_DOC_SUBMIT_LOG", objParams, true));

                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.ACADEMIC.ANSWERSHEET.InsertUpdateStudentDocSubmitLog-> " + ex.ToString());
                    }

                    return retStatus;
                }

                //Get All Details Of Student Session wise History Added by DILEEP KARE 10/07/2021
                public DataSet GetSemesterHistoryDetails(int idno, int Semesterno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SEMESTERNO", Semesterno);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GETALL_SEMESTERWISE_STUDDETAILS", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.GetSemesterHistoryDetails() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                //Added By Dileep on 10.07.2021              
                public DataSet GetSemsesterwiseMarkDetails(int idno, int sessionno, int semesterno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objsqlhelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objparams = new SqlParameter[3];
                        objparams[0] = new SqlParameter("@P_IDNO", idno);
                        objparams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objparams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);

                        ds = objsqlhelper.ExecuteDataSetSP("PKG_ACD_GET_SEMESTERWISE_STUD_DETAILS", objparams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BUSINESSLAYER.BUSINESSLOGIC.STUDENTCONTROLLER.GETSESSIONWISEMARKDETAILS -->" + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                // ADDED ON 10-07-2021 BY Deepali to get Course list 
                public DataSet GetStudentCourseList(int sessionno, int semesterno, string Regno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                { 

                    new SqlParameter("@P_SESSIONNO",sessionno),
                    new SqlParameter("@P_SEMESTERNO",semesterno),
                    new SqlParameter("@P_REGNO", Regno)
               
                };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_GET_MIGRATION_STUDENT_COURSE_LIST", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.StudentController.GetStudentCourseList() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                public int UpdateMigrationCourseDetails(int idno, int sessionno, int semesterno, int courseno, string grade, decimal gdPoint, decimal endsem, int uano, string ip_address)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[] 
                        {
                            new SqlParameter("@P_IDNO", idno),
                            new SqlParameter("@P_SESSIONNO", sessionno),
                            new SqlParameter("@P_SEMESTERNO", semesterno),
                            new SqlParameter("@P_COURSENO",courseno),
                            new SqlParameter("@P_GRADE", grade),
                            new SqlParameter("@P_GDPOINT", gdPoint),
                            new SqlParameter("@P_ENDSEM",endsem),
                            new SqlParameter("@P_UANO",uano),
                            new SqlParameter("@P_IP_ADDRESS",ip_address),
                            new SqlParameter("@P_OUT", SqlDbType.Int)
                        };
                        objParams[objParams.Length - 1].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_SP_UPD_MIGRATION_COURSE_DETAILS", objParams, true);

                        if (ret != null && ret.ToString() == "1")
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        }
                        else if (ret != null && ret.ToString() == "2")
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.FeeCollectionController.NoDuesInsert --> " + ex.ToString());
                    }
                    return retStatus;
                }

                public int UpdateMigrationResultDetails(int idno, int sessionno, int semesterno, decimal RegCredits, decimal EarnCredits, decimal CommCredits, string Result, decimal OutOfmarks, decimal ObtainMarks, decimal SGPA, decimal YGPA, decimal DGPA, decimal CommEGP, string PromoStatus, int uano, string ip_address)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[] 
                        {
                            new SqlParameter("@P_IDNO", idno),
                            new SqlParameter("@P_SESSIONNO", sessionno),
                            new SqlParameter("@P_SEMESTERNO", semesterno),
                            new SqlParameter("@P_REGCREDIT",RegCredits),
                            new SqlParameter("@P_EARNCREDIT", EarnCredits),
                            new SqlParameter("@P_COMMCREDIT", CommCredits),
                            new SqlParameter("@P_RESULT",Result),
                            new SqlParameter("@P_OUTOFMARKS",OutOfmarks),
                            new SqlParameter("@P_OBTAINMARKS",ObtainMarks),
                            new SqlParameter("@P_SGPA",SGPA),
                            new SqlParameter("@P_YGPA",YGPA),
                             new SqlParameter("@P_DGPA",DGPA),
                            new SqlParameter("@P_COMMEGP",CommEGP),
                            new SqlParameter("@P_PROMO_STATUS",PromoStatus),
                            new SqlParameter("@P_UANO",uano),
                            new SqlParameter("@P_IP_ADDRESS",ip_address),
                            new SqlParameter("@P_OUT", SqlDbType.Int)
                        };
                        objParams[objParams.Length - 1].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_SP_UPD_MIGRATION_STUDENT_RESULT", objParams, true);

                        if (ret != null && ret.ToString() == "1")
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        }
                        else if (ret != null && ret.ToString() == "2")
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.FeeCollectionController.NoDuesInsert --> " + ex.ToString());
                    }
                    return retStatus;
                }
                //Get Student Result Details:
                public DataSet GetStudentResultDetailsByRegNo(int Sessionno, int Semesterno, string ENROLLNO)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[] 
                { 
                    new SqlParameter("@P_SESSIONNO", Sessionno),
                    new SqlParameter("@P_SEMESTERNO", Semesterno),
                    new SqlParameter("@P_ENROLLNO", ENROLLNO)
                };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_GET_MIGRATION_STUDENT_RESULT_DETAILS", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.StudentController.GetStudentResultDetailsByRegNo() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }
                #region Call Dispose Methode- Added Mahesh on Dated 06/23/2021

                private bool Disposed;

                ~StudentController()
                {
                    this.Dispose(false);
                }

                public void Dispose()
                {
                    this.Dispose(true);

                    //using GC.Collect Namespace.
                    GC.SuppressFinalize(this);
                }

                protected virtual void Dispose(bool Disposing)
                {
                    if (!Disposed)
                    {
                        if (Disposing)
                        {
                            //Release manage resourses here.
                        }
                    }

                    Disposed = true;
                }

                #endregion Call Dispose Methode- Added Mahesh on Dated 06/23/2021

                public DataSet GetAllEntranceExamDetails(int idno)
                {
                    DataSet dsCT = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        dsCT = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_GET_ENTRANCEEXAM", objParams);

                    }
                    catch (Exception ex)
                    {
                        return dsCT;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.studentcontroller.GetAllEntranceExamDetails-> " + ex.ToString());
                    }

                    return dsCT;
                }

                private void InsertUpdateEntranceExams(QualifiedExam EntranceExam)
                {
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[] 
                        { 
                            new SqlParameter("@P_IDNO", EntranceExam.Idno),
                            new SqlParameter("@P_QUALIFYNO", EntranceExam.Qualifyno),
                            new SqlParameter("@P_YEAR_OF_EXAM", EntranceExam.Year_of_exam),
                            new SqlParameter("@P_PER", EntranceExam.Per),
                            new SqlParameter("@P_PERCENTILE", EntranceExam.Percentile),
                            new SqlParameter("@P_RANK", EntranceExam.Meritno),
                            new SqlParameter("@P_SCORE", EntranceExam.Score),
                            new SqlParameter("@P_EXMROLLNO",EntranceExam.Qexmrollno),
                            new SqlParameter("@P_ORGANIZATIONID", Convert.ToInt32(System.Web.HttpContext.Current.Session["OrgId"])),
                            new SqlParameter("@P_STQEXNO", EntranceExam.Stqexno)
                           };
                        objParams[objParams.Length - 1].Direction = ParameterDirection.Output;
                        objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_UPD_ENTRANCE_EXM", objParams, true);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateLastQualExams --> " + ex.ToString());
                    }
                }


                public int UpdateStudentSportDetails(Student objStudent, int SrNo)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_SPORT_NAME", objStudent.SportName);
                        objParams[2] = new SqlParameter("@P_SPORT_LEVEL", objStudent.SportLevel);
                        objParams[3] = new SqlParameter("@P_SPORT_ACHIEVE", objStudent.SportAchieve);
                        objParams[4] = new SqlParameter("@P_SRNO", SrNo);
                        objParams[5] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[5].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_INS_STUD_SPORT_INFORMATION", objParams, true);
                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        }
                        else if (Convert.ToInt32(ret) == 2)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }

                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentSportDetails-> " + ex.ToString());
                    }

                    return retStatus;
                }

                public int DeleteSport(int idno, int SportSrno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SRNO", SportSrno);
                        objParams[2] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[2].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_DELETE_SPORT_INFORMATION", objParams, true);
                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordDeleted);
                        }

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.DeleteSport-> " + ex.ToString());
                    }

                    return retStatus;
                }

                public DataSet GetStudentSportDetails(int idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_SPORT_DETAILS_BYID", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentSportDetails->" + ex.ToString());
                    }
                    return ds;
                }

                // ADDED ON 09-07-2021 BY Deepali to get student list for Adm Approval by Account
                public DataSet GetStudentForAdmApprove(int ADMBATCH, int COLLEGE_ID, int DEPARTMENTNO, int DEGREENO, int BRANCHNO, int STATUS)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                { 

                    new SqlParameter("@P_ADMBATCH",ADMBATCH),
                    new SqlParameter("@P_COLLEGE_ID",COLLEGE_ID),
                    new SqlParameter("@P_DEPTNO", DEPARTMENTNO),
                    new SqlParameter("@P_DEGREENO", DEGREENO),
                    new SqlParameter("@P_BRANCHNO", BRANCHNO),
                    new SqlParameter("@P_STATUS", STATUS)
                };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_GET_STUDENT_FOR_ADMISSION_APPROVAL", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.FeeCollectionController.GetMeritList() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                public int UpdateStudentAdmissionStatusByFinance(Student objStudent)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_UANO", objStudent.Uano);
                        objParams[2] = new SqlParameter("@P_IP_ADDRESS", objStudent.IPADDRESS);
                        objParams[3] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[3].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUDENT_ADM_STATUS_BY_FINANCE", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentPersonalInformation-> " + ex.ToString());
                    }

                    return retStatus;

                }

                public DataSet GetNewAdmissionStudentDetailsForFinance(int admbatchno, int collegeid, int degreeno, int branchno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                { 

                     new SqlParameter("@P_ADMBATCH",admbatchno),
                     new SqlParameter("@P_COLLEGEID",collegeid),
                     new SqlParameter("@P_DEGREENO",degreeno),
                     new SqlParameter("@P_BRANCHNO",branchno)
                };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_GET_STUDENT_NEW_ADMISSION_DATA_FINANCE", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.StudentController.GetNewAdmissionStudentDetails() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }


                public DataSet GetStudentForChallanReconciliation(int ADMBATCH)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                        { 

                            new SqlParameter("@P_ADMBATCH",ADMBATCH),
                        };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_GET_STUDENT_FOR_CHALLAN_RECONCILIATION", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.FeeCollectionController.GetMeritList() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                public int InsertIntoDigiLockerLog(int idno, int ua_no, string ip_address, string filename)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_UANO", ua_no);
                        objParams[2] = new SqlParameter("@P_IP_ADDRESS", ip_address);
                        objParams[3] = new SqlParameter("@P_DOCNAME", filename);
                        objParams[4] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[4].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_INSERT_DIGILOCKER_LOG", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentPersonalInformation-> " + ex.ToString());
                    }

                    return retStatus;

                }

                public DataSet StudentListToSendEmailSMS(int admbatch, int ReportType)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[2];
                        sqlParams[0] = new SqlParameter("@P_ADMBATCH", admbatch);
                        sqlParams[1] = new SqlParameter("@P_REPORTTYPE", ReportType);
                        ds = objDataAccess.ExecuteDataSetSP("PKG_GET_STUDENT_LIST_FOR_CONSOLIDATE_REPORT", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.StudentController.StudentExamRegisteredList() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }


                public DataSet GetNewAdmissionStudentDocUploadStatus(int admbatchno, int collegeid, int deptno, int degreeno, int branchno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                { 

                     new SqlParameter("@P_ADMBATCH",admbatchno),
                     new SqlParameter("@P_COLLEGEID",collegeid),
                     new SqlParameter("@P_DEPTNO",deptno),
                     new SqlParameter("@P_DEGREENO",degreeno),
                     new SqlParameter("@P_BRANCHNO",branchno)
                };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_GET_NEW_ADM_STUDENT_NEW_DOC_UPLOAD_STATUS", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.StudentController.GetNewAdmissionStudentDetails() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }


                public int DeleteStudentEntranceExam(Student objStudent)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_QUALIFYNO", objStudent.QUALIFYNO);
                        objParams[2] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[2].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_QUALIFICATION_SP_DEL_ENTRANCE", objParams, true);

                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.DeleteStudentQual -> " + ex.ToString());
                    }

                    return retStatus;
                }
                public DataSet GetStudentForAdmApproveByAccount(int ADMBATCH, int COLLEGE_ID, int DEGREENO, int BRANCHNO)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                { 

 

                    new SqlParameter("@P_ADMBATCH",ADMBATCH),
                    new SqlParameter("@P_COLLEGE_ID",COLLEGE_ID),
                    new SqlParameter("@P_DEGREENO", DEGREENO),
                    new SqlParameter("@P_BRANCHNO", BRANCHNO),
                    
               
                };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_GET_STUDENT_FOR_ADMISSION_APPROVAL_ACCOUNT", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.StudentController.GetMeritList() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }
                //public string AddNewStudent(Student objStudent, GEC_Student objStud, string IndusEmail, UserAcc objUa)
                //{
                //    string retStatus = string.Empty;
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        //Add New student
                //        objParams = new SqlParameter[35];
                //        objParams[0] = new SqlParameter("@P_ROLLNO", objStudent.RollNo);
                //        objParams[1] = new SqlParameter("@P_SECTIONNO", objStudent.SectionNo);
                //        objParams[2] = new SqlParameter("@P_STUDNAME", objStudent.StudName);
                //        objParams[3] = new SqlParameter("@P_FATHERNAME", objStudent.FatherName);
                //        objParams[4] = new SqlParameter("@P_MOTHERNAME ", objStudent.MotherName);
                //        if (objStudent.Dob == null)///Added by Irfan Shaikh on 20190405
                //            objParams[5] = new SqlParameter("@P_DOB", DBNull.Value);
                //        else
                //            objParams[5] = new SqlParameter("@P_DOB", objStudent.Dob);
                //        objParams[6] = new SqlParameter("@P_SEX", objStudent.Sex);
                //        objParams[7] = new SqlParameter("@P_CATEGORYNO", objStudent.CategoryNo);
                //        if (objStudent.AdmDate == null)
                //            objParams[8] = new SqlParameter("@P_ADMDATE", DBNull.Value);
                //        else
                //            objParams[8] = new SqlParameter("@P_ADMDATE", objStudent.AdmDate);

                //        objParams[9] = new SqlParameter("@P_HOSTELER", objStudent.HostelSts);
                //        objParams[10] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                //        objParams[11] = new SqlParameter("@P_ADMBATCH", objStudent.AdmBatch);
                //        objParams[12] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                //        objParams[13] = new SqlParameter("@P_YEAR", objStudent.Year);
                //        objParams[14] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                //        objParams[15] = new SqlParameter("@P_PTYPE", objStudent.PType);
                //        objParams[16] = new SqlParameter("@P_STATENO", objStudent.StateNo);
                //        objParams[17] = new SqlParameter("@P_COLLEGE_CODE", objStudent.CollegeCode);
                //        objParams[18] = new SqlParameter("@P_REGNO", objStudent.RegNo);
                //        objParams[19] = new SqlParameter("@P_COLLEGE_ID ", objStudent.College_ID);
                //        objParams[20] = new SqlParameter("@P_IDTYPENO", objStudent.IdType);
                //        objParams[21] = new SqlParameter("@P_UANO", objStudent.Uano);
                //        objParams[22] = new SqlParameter("@P_IPADDRESS", objStudent.IPADDRESS);
                //        objParams[23] = new SqlParameter("@P_EMILID", objStudent.EmailID);
                //        objParams[24] = new SqlParameter("@P_BLOODGRPNO", objStudent.BloodGroupNo);
                //        objParams[25] = new SqlParameter("@P_STUDENTMOBILE", objStudent.StudentMobile);
                //        objParams[26] = new SqlParameter("@P_PASSWORD", objUa.UA_Pwd);
                //        objParams[27] = new SqlParameter("@P_AADHAAR_NO", objStudent.AddharcardNo); //Added by Irfan Shaikh on 2019/04/09
                //        objParams[28] = new SqlParameter("@P_TRANSPORTTATION", objStudent.Transportation);
                //        objParams[29] = new SqlParameter("@P_SCORE", objStudent.Score); //Added by Irfan Shaikh on 2019/04/09
                //        objParams[30] = new SqlParameter("@P_MERITNO", objStudent.MeritNo);
                //        objParams[31] = new SqlParameter("@P_APPLICATIONID", objStudent.ApplicationID);
                //        objParams[32] = new SqlParameter("@P_INSTALLMENT", objStudent.Installment);
                //        objParams[33] = new SqlParameter("@P_SCHOLORSHIP", objStudent.Scholorship);
                //        objParams[34] = new SqlParameter("@P_REGOUT", SqlDbType.NVarChar, 25);
                //        objParams[34].Direction = ParameterDirection.Output;
                //        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_STUDENT_INFO_NEW", objParams, true);
                //        retStatus = ret.ToString();

                //    }
                //    catch (Exception ex)
                //    {
                //        retStatus = "0";
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddNewStudent-> " + ex.ToString());
                //    }

                //    return retStatus;
                //}


                public string AddInstallmentDetails(Student objStudent, string recieptcode, int Installmenttype)
                {
                    string retStatus = string.Empty;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Add New student
                        objParams = new SqlParameter[13];
                        objParams[0] = new SqlParameter("@P_SESSION_NO", objStudent.SessionNo);
                        objParams[1] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[2] = new SqlParameter("@P_RECIEPTCODE", recieptcode);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                        objParams[4] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                        objParams[5] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[6] = new SqlParameter("@P_PAYMENTTYPE", objStudent.PType);
                        objParams[7] = new SqlParameter("@P_UA_NO", objStudent.Uano);
                        objParams[8] = new SqlParameter("@P_ADMBATCH", objStudent.AdmBatch);
                        objParams[9] = new SqlParameter("@P_COLLEGE_CODE", objStudent.CollegeCode);
                        objParams[10] = new SqlParameter("@P_COLLEGE_ID", objStudent.College_ID);
                        objParams[11] = new SqlParameter("@P_INSTALLMENETYPE", Installmenttype);
                        objParams[12] = new SqlParameter("@P_OUTPUT", SqlDbType.NVarChar, 25);
                        objParams[12].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INSERT_ISTALLMENT_DETAILS", objParams, true);
                        retStatus = ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = "0";
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddInstallmentDetails-> " + ex.ToString());
                    }

                    return retStatus;
                }

                //public DataSet GetAdmittedStudents(int admbatch, int degreeno, int branch)
                //{
                //    DataSet ds = null;

                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        objParams = new SqlParameter[3];
                //        objParams[0] = new SqlParameter("@P_ADMBATCH", admbatch);
                //        objParams[1] = new SqlParameter("@P_DEGREENO", degreeno);
                //        objParams[2] = new SqlParameter("@P_BRANCHNO", branch);
                //        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_ADM_CONFIRM_STUDENT", objParams);

                //    }
                //    catch (Exception ex)
                //    {

                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                //    }
                //    return ds;
                //}

                public DataSet GetApprovedStudentDetails(int Idno, int operation, DateTime AdmDate, string studname, int categoryno, int admcategoryno, int Status, string Remark)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[8];
                        objParams[0] = new SqlParameter("@P_IDNO", Idno);
                        objParams[1] = new SqlParameter("@P_OPERATION", operation);
                        if (AdmDate == null || AdmDate == DateTime.MinValue)
                            objParams[2] = new SqlParameter("@P_ADMCONFDATE", DBNull.Value);
                        else
                            objParams[2] = new SqlParameter("@P_ADMCONFDATE", AdmDate);
                        objParams[3] = new SqlParameter("@P_STUDNAME", studname);
                        objParams[4] = new SqlParameter("@P_CATEGORY", categoryno);
                        objParams[5] = new SqlParameter("@P_ALLOTCATEGORY", admcategoryno);
                        objParams[6] = new SqlParameter("@P_STATUS", Status);
                        objParams[7] = new SqlParameter("@P_REMARK", Remark);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_STUDENT_DETAILS", objParams);
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.ExamController.GetAllExamName-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetAdmittedStudentsReport(int admbatch, int degreeno, int branch)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[1] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[2] = new SqlParameter("@P_BRANCHNO", branch);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_ADM_CONFIRM_STUDENT_REPORT", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetUploadedDoclist(int idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_UPLOAD_DOC_LIST", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.CopySchemeBySem-> " + ex.ToString());
                    }

                    return ds;
                }

                public int AddUpdateStudentDocumentsDetail(int idno, int hiddtudocno, string extension, string contentType, string filename, string path)
                {

                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[7];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_STU_DOC_NO", hiddtudocno);
                        // objParams[2] = new SqlParameter("@P_CHK", chkDocuments);
                        objParams[2] = new SqlParameter("@P_EXTENSION", extension);
                        objParams[3] = new SqlParameter("@P_CONTENTTYPE", contentType);
                        // objParams[5] = new SqlParameter("@P_FILEDATA", document);
                        objParams[4] = new SqlParameter("@P_FILEPATH", path);
                        objParams[5] = new SqlParameter("@P_FILENAME", filename);
                        objParams[6] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[6].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INSERT_UPDATE_STUDENT_FILE_UPLOAD_DOCUMENT_STUDENT", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        else if (Convert.ToInt32(ret) == 2)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddUpdateStudentDocumentsDetail-> " + ex.ToString());
                    }
                    return retStatus;
                    //throw new NotImplementedException();
                }

                public DataSet GetDocumentList(int UA_NO)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_UA_NO", UA_NO);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_DOCUMENT_LIST_STUDINFO", objParams);
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentRegistrationController.GetDocumentList-> " + ex.ToString());
                    }
                    return ds;
                }
                //public string AddNewStudent(Student objStudent, GEC_Student objStud, string IndusEmail, UserAcc objUa)
                //{
                //    string retStatus = string.Empty;
                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        //Add New student
                //        objParams = new SqlParameter[36];
                //        objParams[0] = new SqlParameter("@P_ROLLNO", objStudent.RollNo);
                //        objParams[1] = new SqlParameter("@P_SECTIONNO", objStudent.SectionNo);
                //        objParams[2] = new SqlParameter("@P_STUDNAME", objStudent.StudName);
                //        objParams[3] = new SqlParameter("@P_FATHERNAME", objStudent.FatherName);
                //        objParams[4] = new SqlParameter("@P_MOTHERNAME ", objStudent.MotherName);
                //        if (objStudent.Dob == null)///Added by Irfan Shaikh on 20190405
                //            objParams[5] = new SqlParameter("@P_DOB", DBNull.Value);
                //        else
                //            objParams[5] = new SqlParameter("@P_DOB", objStudent.Dob);
                //        objParams[6] = new SqlParameter("@P_SEX", objStudent.Sex);
                //        objParams[7] = new SqlParameter("@P_CATEGORYNO", objStudent.CategoryNo);
                //        if (objStudent.AdmDate == null)
                //            objParams[8] = new SqlParameter("@P_ADMDATE", DBNull.Value);
                //        else
                //            objParams[8] = new SqlParameter("@P_ADMDATE", objStudent.AdmDate);

                //        objParams[9] = new SqlParameter("@P_HOSTELER", objStudent.HostelSts);
                //        objParams[10] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                //        objParams[11] = new SqlParameter("@P_ADMBATCH", objStudent.AdmBatch);
                //        objParams[12] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                //        objParams[13] = new SqlParameter("@P_YEAR", objStudent.Year);
                //        objParams[14] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                //        objParams[15] = new SqlParameter("@P_PTYPE", objStudent.PType);
                //        objParams[16] = new SqlParameter("@P_STATENO", objStudent.StateNo);
                //        objParams[17] = new SqlParameter("@P_COLLEGE_CODE", objStudent.CollegeCode);
                //        objParams[18] = new SqlParameter("@P_REGNO", objStudent.RegNo);
                //        objParams[19] = new SqlParameter("@P_COLLEGE_ID ", objStudent.College_ID);
                //        objParams[20] = new SqlParameter("@P_IDTYPENO", objStudent.IdType);
                //        objParams[21] = new SqlParameter("@P_UANO", objStudent.Uano);
                //        objParams[22] = new SqlParameter("@P_IPADDRESS", objStudent.IPADDRESS);
                //        objParams[23] = new SqlParameter("@P_EMILID", objStudent.EmailID);
                //        objParams[24] = new SqlParameter("@P_BLOODGRPNO", objStudent.BloodGroupNo);
                //        objParams[25] = new SqlParameter("@P_STUDENTMOBILE", objStudent.StudentMobile);
                //        objParams[26] = new SqlParameter("@P_PASSWORD", objUa.UA_Pwd);
                //        objParams[27] = new SqlParameter("@P_AADHAAR_NO", objStudent.AddharcardNo); //Added by Irfan Shaikh on 2019/04/09
                //        objParams[28] = new SqlParameter("@P_TRANSPORTTATION", objStudent.Transportation);
                //        objParams[29] = new SqlParameter("@P_SCORE", objStudent.Score); //Added by Irfan Shaikh on 2019/04/09
                //        objParams[30] = new SqlParameter("@P_MERITNO", objStudent.MeritNo);
                //        objParams[31] = new SqlParameter("@P_APPLICATIONID", objStudent.ApplicationID);
                //        objParams[32] = new SqlParameter("@P_INSTALLMENT", objStudent.Installment);
                //        objParams[33] = new SqlParameter("@P_SCHOLORSHIP", objStudent.Scholorship);
                //        objParams[34] = new SqlParameter("@P_STUDENTMOBILE2", objStudent.StudMobileno2);
                //        objParams[35] = new SqlParameter("@P_REGOUT", SqlDbType.NVarChar, 25);
                //        objParams[35].Direction = ParameterDirection.Output;
                //        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_STUDENT_INFO_NEW", objParams, true);
                //        retStatus = ret.ToString();

                //    }
                //    catch (Exception ex)
                //    {
                //        retStatus = "0";
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddNewStudent-> " + ex.ToString());
                //    }

                //    return retStatus;
                //}


                public string AddInstallmentDetails(Student objStudent, string recieptcode, int Installmenttype, DateTime Duedate1, DateTime DueDate2)
                {
                    string retStatus = string.Empty;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Add New student
                        objParams = new SqlParameter[15];
                        objParams[0] = new SqlParameter("@P_SESSION_NO", objStudent.SessionNo);
                        objParams[1] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[2] = new SqlParameter("@P_RECIEPTCODE", recieptcode);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                        objParams[4] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                        objParams[5] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[6] = new SqlParameter("@P_PAYMENTTYPE", objStudent.PType);
                        objParams[7] = new SqlParameter("@P_UA_NO", objStudent.Uano);
                        objParams[8] = new SqlParameter("@P_ADMBATCH", objStudent.AdmBatch);
                        objParams[9] = new SqlParameter("@P_COLLEGE_CODE", objStudent.CollegeCode);
                        objParams[10] = new SqlParameter("@P_COLLEGE_ID", objStudent.College_ID);
                        objParams[11] = new SqlParameter("@P_INSTALLMENETYPE", Installmenttype);
                        objParams[12] = new SqlParameter("@P_DUEDATE1", Duedate1);
                        objParams[13] = new SqlParameter("@P_DUEDATE2", DueDate2);
                        objParams[14] = new SqlParameter("@P_OUTPUT", SqlDbType.NVarChar, 25);
                        objParams[14].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INSERT_ISTALLMENT_DETAILS", objParams, true);
                        retStatus = ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = "0";
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddInstallmentDetails-> " + ex.ToString());
                    }

                    return retStatus;
                }

                public string AddInstallmentDetails(Student objStudent, string recieptcode, int Installmenttype, string Duedate1)
                {
                    string retStatus = string.Empty;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Add New student
                        objParams = new SqlParameter[14];
                        objParams[0] = new SqlParameter("@P_SESSION_NO", objStudent.SessionNo);
                        objParams[1] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[2] = new SqlParameter("@P_RECIEPTCODE", recieptcode);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                        objParams[4] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                        objParams[5] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[6] = new SqlParameter("@P_PAYMENTTYPE", objStudent.PType);
                        objParams[7] = new SqlParameter("@P_UA_NO", objStudent.Uano);
                        objParams[8] = new SqlParameter("@P_ADMBATCH", objStudent.AdmBatch);
                        objParams[9] = new SqlParameter("@P_COLLEGE_CODE", objStudent.CollegeCode);
                        objParams[10] = new SqlParameter("@P_COLLEGE_ID", objStudent.College_ID);
                        objParams[11] = new SqlParameter("@P_INSTALLMENETYPE", Installmenttype);
                        objParams[12] = new SqlParameter("@P_DUEDATE1", Duedate1);
                        //objParams[13] = new SqlParameter("@P_DUEDATE2", DueDate2);                                               
                        objParams[13] = new SqlParameter("@P_OUTPUT", SqlDbType.NVarChar, 25);
                        objParams[13].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INSERT_ISTALLMENT_DETAILS", objParams, true);
                        retStatus = ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = "0";
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddInstallmentDetails-> " + ex.ToString());
                    }

                    return retStatus;
                }

                public DataSet GetTempStudData(int admbatch, int degreeno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[1] = new SqlParameter("@P_DEGREENO", degreeno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_TEMP_ADM_STUDENT_REPORT", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetTempStudData-> " + ex.ToString());
                    }
                    return ds;
                }

                /// <summary>
                /// Modified By SP- 02062022
                /// </summary>
                /// <param name="objStudent"></param>
                /// <param name="objStud"></param>
                /// <param name="IndusEmail"></param>
                /// <param name="objUa"></param>
                /// <returns></returns>
                /// <summary>
                /// Modified By SP- 02062022
                /// </summary>
                /// <param name="objStudent"></param>
                /// <param name="objStud"></param>
                /// <param name="IndusEmail"></param>
                /// <param name="objUa"></param>
                /// <returns></returns>
                public string AddNewStudent(Student objStudent, GEC_Student objStud, string IndusEmail, UserAcc objUa, int USERNO, int Hosteltype, int SchType)
                {
                    string retStatus = string.Empty;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Add New student
                        objParams = new SqlParameter[46];
                        objParams[0] = new SqlParameter("@P_ROLLNO", objStudent.RollNo);
                        objParams[1] = new SqlParameter("@P_SECTIONNO", objStudent.SectionNo);
                        objParams[2] = new SqlParameter("@P_STUDNAME", objStudent.StudName);
                        objParams[3] = new SqlParameter("@P_FATHERNAME", objStudent.FatherName);
                        objParams[4] = new SqlParameter("@P_MOTHERNAME ", objStudent.MotherName);
                        if (objStudent.Dob == null)///Added by Irfan Shaikh on 20190405
                            objParams[5] = new SqlParameter("@P_DOB", DBNull.Value);
                        else
                            objParams[5] = new SqlParameter("@P_DOB", objStudent.Dob);
                        objParams[6] = new SqlParameter("@P_SEX", objStudent.Sex);
                        objParams[7] = new SqlParameter("@P_CATEGORYNO", objStudent.CategoryNo);
                        if (objStudent.AdmDate == null)
                            objParams[8] = new SqlParameter("@P_ADMDATE", DBNull.Value);
                        else
                            objParams[8] = new SqlParameter("@P_ADMDATE", objStudent.AdmDate);



                        objParams[9] = new SqlParameter("@P_HOSTELER", objStudent.HostelSts);
                        objParams[10] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                        objParams[11] = new SqlParameter("@P_ADMBATCH", objStudent.AdmBatch);
                        objParams[12] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                        objParams[13] = new SqlParameter("@P_YEAR", objStudent.Year);
                        objParams[14] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[15] = new SqlParameter("@P_PTYPE", objStudent.PType);
                        objParams[16] = new SqlParameter("@P_STATENO", objStudent.StateNo);
                        objParams[17] = new SqlParameter("@P_CITYNO", objStudent.City);
                        objParams[18] = new SqlParameter("@P_COLLEGE_CODE", objStudent.CollegeCode);
                        objParams[19] = new SqlParameter("@P_REGNO", objStudent.RegNo);
                        objParams[20] = new SqlParameter("@P_COLLEGE_ID ", objStudent.College_ID);
                        objParams[21] = new SqlParameter("@P_IDTYPENO", objStudent.IdType);
                        objParams[22] = new SqlParameter("@P_UANO", objStudent.Uano);
                        objParams[23] = new SqlParameter("@P_IPADDRESS", objStudent.IPADDRESS);
                        objParams[24] = new SqlParameter("@P_EMILID", objStudent.EmailID);
                        objParams[25] = new SqlParameter("@P_BLOODGRPNO", objStudent.BloodGroupNo);
                        objParams[26] = new SqlParameter("@P_STUDENTMOBILE", objStudent.StudentMobile);
                        objParams[27] = new SqlParameter("@P_PASSWORD", objUa.UA_Pwd);
                        objParams[28] = new SqlParameter("@P_AADHAAR_NO", objStudent.AddharcardNo); //Added by Irfan Shaikh on 2019/04/09
                        objParams[29] = new SqlParameter("@P_TRANSPORTTATION", objStudent.Transportation);
                        objParams[30] = new SqlParameter("@P_SCORE", objStudent.Score); //Added by Irfan Shaikh on 2019/04/09
                        objParams[31] = new SqlParameter("@P_MERITNO", objStudent.MeritNo);
                        objParams[32] = new SqlParameter("@P_APPLICATIONID", objStudent.ApplicationID);
                        objParams[33] = new SqlParameter("@P_INSTALLMENT", objStudent.Installment);
                        objParams[34] = new SqlParameter("@P_SCHOLORSHIP", objStudent.Scholorship);
                        objParams[35] = new SqlParameter("@P_STUDENTMOBILE2", objStudent.StudMobileno2);
                        objParams[36] = new SqlParameter("@P_ADMROUNDNO", objStudent.AdmroundNo);
                        objParams[37] = new SqlParameter("@P_PARENTMOBILE", objStudent.FatherMobile);
                        objParams[38] = new SqlParameter("@P_ORGANIZATION_ID", Convert.ToInt32(System.Web.HttpContext.Current.Session["OrgId"]));
                        objParams[39] = new SqlParameter("@P_SCH_MODE", objStudent.SchMode);
                        objParams[40] = new SqlParameter("@P_SCH_AMT_PER", objStudent.SchAmtOrPercentage);
                        objParams[41] = new SqlParameter("@P_SPECIALIZATION", Convert.ToInt32(objStudent.Specialization));
                        objParams[42] = new SqlParameter("@P_USERNO", USERNO);
                        objParams[43] = new SqlParameter("@P_HOSTELTYPE", Hosteltype);
                        objParams[44] = new SqlParameter("@P_SCH_TYPE", objStudent.SchMode);
                        objParams[45] = new SqlParameter("@P_REGOUT", SqlDbType.NVarChar, 25);
                        objParams[45].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_STUDENT_INFO_NEW", objParams, true);
                        retStatus = ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = "0";
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddNewStudent-> " + ex.ToString());
                    }

                    return retStatus;
                }


                public int UpdateAcd_Document(string remark, string docno, int status, DateTime date, int idno, int Status)
                {

                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_REMARK", remark);
                        objParams[1] = new SqlParameter("@P_DOCUMENT_NO ", docno);
                        objParams[2] = new SqlParameter("@P_FLAG", status);
                        objParams[3] = new SqlParameter("@P_DATE", date);
                        objParams[4] = new SqlParameter("@P_IDNO", idno);
                        objParams[5] = new SqlParameter("@P_STATUS", Status);

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_UPDATE_DOCUMENT_STATUS", objParams, true);


                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.PKG_UPDATE_DOCUMENT_STATUS-> " + ex.ToString());
                    }
                    return retStatus;
                    //throw new NotImplementedException();
                }

                //}

                public DataSet SearchStudentsByEnroll()
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        // new SqlParameter("@P_COLLEGENOS", collegecode)

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_SEARCH_STUDENT_FOR_DOCUMENT_UPLOAD", null);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessEntities.AdmissionCancellationController.SearchStudents() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                public DataSet GetDocument(string idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_DOCUMENT_LIST", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.CopySchemeBySem-> " + ex.ToString());
                    }

                    return ds;
                }
                public DataSet SearchStudentsByEnroll(string searchText)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                { 
                    new SqlParameter("@P_SEARCHSTRING", searchText)
                   
                   // new SqlParameter("@P_COLLEGENOS", collegecode)
                };
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_SEARCH_STUDENT_BY_ENROLL", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessEntities.AdmissionCancellationController.SearchStudentsByEnroll() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }
                public int UpdateAcd_Document(string remark, string docno, int status, DateTime date, int idno)
                {

                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_REMARK", remark);
                        objParams[1] = new SqlParameter("@P_DOCUMENT_NO ", docno);
                        objParams[2] = new SqlParameter("@P_FLAG", status);
                        objParams[3] = new SqlParameter("@P_DATE", date);
                        objParams[4] = new SqlParameter("@P_IDNO", idno);


                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_UPDATE_DOCUMENT_STATUS", objParams, true);


                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.PKG_UPDATE_DOCUMENT_STATUS-> " + ex.ToString());
                    }
                    return retStatus;
                    //throw new NotImplementedException();
                }


                public int UpdateStudentPersonalInformation(Student objStudent, StudentAddress objStudAddress, StudentPhoto objStudPhoto, StudentQualExm objStudQExm, string MotherMobile, string MotherOfficeNo, string IndusEmail, int usertype, int Father_alive, int Mother_alive, int Parents_alive)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    //int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Update Student
                        objParams = new SqlParameter[61];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_REGNO", objStudent.RegNo);
                        objParams[2] = new SqlParameter("@P_ENROLLNO", objStudent.EnrollNo);
                        objParams[3] = new SqlParameter("@P_STUDFULLNAME", objStudent.StudName);
                        objParams[4] = new SqlParameter("@P_STUDFIRSTNAME", objStudent.firstName);
                        objParams[5] = new SqlParameter("@P_STUDMIDDLENAME", objStudent.MiddleName);
                        objParams[6] = new SqlParameter("@P_STUDLASTNAME", objStudent.LastName);
                        objParams[7] = new SqlParameter("@P_FATHERFULLNAME", objStudent.FatherName);
                        objParams[8] = new SqlParameter("@P_FATHERFIRSTNAME", objStudent.fatherfirstName);
                        objParams[9] = new SqlParameter("@P_FATHERMIDDLENAME", objStudent.FatherMiddleName);
                        objParams[10] = new SqlParameter("@P_FATHERLASTNAME", objStudent.FatherLastName);
                        objParams[11] = new SqlParameter("@P_FATHERMOBILE", objStudent.FatherMobile);
                        objParams[12] = new SqlParameter("@P_FATHEROFFICENO", objStudent.FatherOfficeNo);
                        objParams[13] = new SqlParameter("@P_FATHER_DESIG", objStudAddress.FATHER_DESIG);
                        objParams[14] = new SqlParameter("@P_FATHEROCCUPATIONNO", objStudAddress.OCCUPATION);
                        objParams[15] = new SqlParameter("@P_FATHEREMAIL", objStudent.Fatheremail);
                        objParams[16] = new SqlParameter("@P_MOTHERNAME", objStudent.MotherName);
                        objParams[17] = new SqlParameter("@P_MOTHERMOBILE", MotherMobile);
                        objParams[18] = new SqlParameter("@P_MOTHEREMAIL", objStudent.Motheremail);
                        objParams[19] = new SqlParameter("@P_MOTHER_DESIG", objStudAddress.MOTHERDESIGNATION);
                        objParams[20] = new SqlParameter("@P_MOTHEROFFICENO", MotherOfficeNo);
                        objParams[21] = new SqlParameter("@P_MOTHER_OCCUPATIONNO", objStudAddress.MOTHEROCCUPATION);
                        objParams[22] = new SqlParameter("@P_CASTE", objStudent.Caste);
                        objParams[23] = new SqlParameter("@P_SUB_CASTE", objStudent.Subcaste);
                        objParams[24] = new SqlParameter("@P_DOB", objStudent.Dob);
                        objParams[25] = new SqlParameter("@P_BLOODGRPNO", objStudent.BloodGroupNo);
                        objParams[26] = new SqlParameter("@P_CLAIMID", objStudent.ClaimType);
                        objParams[27] = new SqlParameter("@P_RELIGIONNO", objStudent.ReligionNo);
                        objParams[28] = new SqlParameter("@P_NATIONALITYNO", objStudent.NationalityNo);
                        objParams[29] = new SqlParameter("@P_CATEGORYNO", objStudent.ClaimType);
                        objParams[30] = new SqlParameter("@P_MARRIED", objStudent.Married);
                        objParams[31] = new SqlParameter("@P_ADDHARCARDNO", objStudent.AddharcardNo);
                        objParams[32] = new SqlParameter("@P_TYPE_OF_PHYSICALLY_HANDICAP", objStudent.Physical_Handicap);
                        objParams[33] = new SqlParameter("@P_SEX", objStudent.Sex);
                        objParams[34] = new SqlParameter("@P_INDUSEMAIL", IndusEmail);
                        objParams[35] = new SqlParameter("@P_STUDENTMOBILE", objStudent.StudentMobile);
                        objParams[36] = new SqlParameter("@P_EMAILID", objStudent.EmailID);
                        objParams[37] = new SqlParameter("@P_USERTYPE", usertype);
                        objParams[38] = new SqlParameter("@P_UANO", objStudent.Uano);
                        objParams[39] = new SqlParameter("@P_PHOTOPATH", objStudPhoto.PhotoPath);
                        objParams[40] = new SqlParameter("@P_ANNUAL_INCOME", objStudent.Annual_income);
                        objParams[41] = new SqlParameter("@P_PHOTOSIZE", objStudPhoto.PhotoSize);

                        if (objStudPhoto.Photo1 == null)
                            objParams[42] = new SqlParameter("@P_PHOTO", DBNull.Value);
                        else
                            objParams[42] = new SqlParameter("@P_PHOTO", objStudPhoto.Photo1);

                        objParams[42].SqlDbType = SqlDbType.Image;
                        objParams[43] = new SqlParameter("@P_PTYPE", objStudent.PayTypeNO);
                        objParams[44] = new SqlParameter("@P_PASSPORTNO", objStudent.PassportNo);
                        if (objStudent.Citizenship == null || objStudent.Citizenship == "")
                            objParams[45] = new SqlParameter("@P_CITIZENSHIPNO", DBNull.Value);
                        else
                            objParams[45] = new SqlParameter("@P_CITIZENSHIPNO", objStudent.Citizenship);
                        objParams[45] = new SqlParameter("@P_BIRTH_PLACE", objStudent.BirthPlace);
                        objParams[46] = new SqlParameter("@P_HOSTELLER", objStudent.HostelSts);
                        objParams[47] = new SqlParameter("@P_TRANSPORT", objStudent.Transportation);
                        objParams[48] = new SqlParameter("@P_FATHER_ALIVE", Father_alive);
                        objParams[49] = new SqlParameter("@P_STUDENT_ALTERNATE_NO", objStudent.StudentAlternateMobile);
                        objParams[50] = new SqlParameter("@P_FATHER_ALTERNATE_NO", objStudent.FatherAlternateMobile);
                        objParams[51] = new SqlParameter("@P_MOTHER_ALTERNATE_NO", objStudent.MotherAlternateMobile);
                        objParams[52] = new SqlParameter("@P_MOTHER_ALIVE", Mother_alive);
                        objParams[53] = new SqlParameter("@P_PARENTS_ALIVE", Parents_alive);
                        objParams[54] = new SqlParameter("@P_INTERNATIONAL_STUD", objStudent.InternationalStu);
                        objParams[55] = new SqlParameter("@P_ADMROUNDNO", objStudent.AdmroundNo); //Added by sachin On 28-07-2022
                        //Added by Bhagyashree on 07-06-2023
                        objParams[56] = new SqlParameter("@P_ABCC_ID", objStudent.AbccId);
                        objParams[57] = new SqlParameter("@P_DTE_APPLICATION_ID", objStudent.DteAppId);
                        objParams[58] = new SqlParameter("@P_CASTENAME", objStudent.CasteName);
                        objParams[59] = new SqlParameter("@P_MOTHER_ANNUAL_INCOME", objStudent.MotherAnnualIncome);
                        objParams[60] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[60].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUDENT_PERSONAL_INFORMATION", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentPersonalInformation-> " + ex.ToString());
                    }

                    return retStatus;

                }

              public int UpdateStudentAddressDetails(Student objStudent, StudentAddress objStudAddress, int usertype)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Update Student Local Address
                        objParams = new SqlParameter[32];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_LADDRESS", objStudAddress.LADDRESS);
                        objParams[2] = new SqlParameter("@P_LCOUNTRY", objStudAddress.LCOUNTRY);
                        objParams[3] = new SqlParameter("@P_LCITY", objStudAddress.LCITY);
                        objParams[4] = new SqlParameter("@P_LSTATE", objStudAddress.LSTATE);
                        objParams[5] = new SqlParameter("@P_LDISTRICT", objStudAddress.LDISTRICT);
                        objParams[6] = new SqlParameter("@P_LPINCODE", objStudAddress.LPINCODE);
                        objParams[7] = new SqlParameter("@P_LTELEPHONE", objStudAddress.LTELEPHONE);
                        objParams[8] = new SqlParameter("@P_LMOBILE", objStudAddress.LMOBILE);
                        objParams[9] = new SqlParameter("@P_LPOSTOFF", objStudAddress.LPOSTOFF);
                        objParams[10] = new SqlParameter("@P_LPOLICESTATION", objStudAddress.LPOLICESTATION);
                        //Update Student Permenant Address
                        objParams[11] = new SqlParameter("@P_PADDRESS", objStudAddress.PADDRESS);
                        objParams[12] = new SqlParameter("@P_PCOUNTRY", objStudAddress.PCOUNTRY);

                        objParams[13] = new SqlParameter("@P_PCITY", objStudAddress.PCITY);
                        objParams[14] = new SqlParameter("@P_PSTATE", objStudAddress.PSTATE);
                        objParams[15] = new SqlParameter("@P_PDISTRICT", objStudAddress.PDISTRICT);
                        objParams[16] = new SqlParameter("@P_PPINCODE", objStudAddress.PPINCODE);
                        objParams[17] = new SqlParameter("@P_PTELEPHONE", objStudAddress.PTELEPHONE);
                        objParams[18] = new SqlParameter("@P_PMOBILE", objStudAddress.PMOBILE);
                        objParams[19] = new SqlParameter("@P_PTEHSIL", objStudAddress.PTEHSIL);
                        objParams[20] = new SqlParameter("@P_PPOSTOFF", objStudAddress.PPOSTOFF);
                        objParams[21] = new SqlParameter("@P_PPOLICEOFF", objStudAddress.PPOLICESTATION);
                        //Update Student Guardian Address
                        objParams[22] = new SqlParameter("@P_GADDRESS", objStudAddress.GADDRESS);
                        objParams[23] = new SqlParameter("@P_GUARDIANNAME", objStudAddress.GUARDIANNAME);
                        objParams[24] = new SqlParameter("@P_GPHONE", objStudAddress.GPHONE);
                        objParams[25] = new SqlParameter("@P_ANNUAL_INCOME", objStudAddress.ANNUAL_INCOME);
                        objParams[26] = new SqlParameter("@P_RELATION_GUARDIAN", objStudAddress.RELATION_GUARDIAN);
                        objParams[27] = new SqlParameter("@P_GOCCUPATIONNAME", objStudAddress.GOCCUPATIONNAME);
                        objParams[28] = new SqlParameter("@P_GUARDIANDESIG", objStudAddress.GUARDIANDESIGNATION);
                        objParams[29] = new SqlParameter("@P_USER_TYPE ", usertype);
                        objParams[30] = new SqlParameter("@P_LTEHSIL", objStudAddress.LTEHSIL);
                        objParams[31] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[31].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUD_ADDRESS_DETAILS", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentAddressDetails-> " + ex.ToString());
                    }

                    return retStatus;

                }
              public int UpdateStudentQualifyingExamInformation(Student objStudent, StudentQualExm objStudQExm, int usertype, string Vocational_Sub, int diplomastatus)
                  {
                  int retStatus = Convert.ToInt32(CustomStatus.Others);
                  try
                      {
                      SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                      SqlParameter[] objParams = null;
                      //Update Student Local Address
                      objParams = new SqlParameter[68];
                      objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                      objParams[1] = new SqlParameter("@P_SCHOOL_COLLEGE_NAMESSC", objStudQExm.SchoolCollegeNameSsc);
                      objParams[2] = new SqlParameter("@P_BOARDSSC", objStudQExm.BoardSsc);
                      objParams[3] = new SqlParameter("@P_YEAR_OF_EXAMSSC", objStudQExm.YearOfExamSsc);
                      objParams[4] = new SqlParameter("@P_SSC_MEDIUM", objStudQExm.SSC_medium);
                      objParams[5] = new SqlParameter("@P_MARKS_OBTAINEDSSC", objStudQExm.MarksObtainedSsc);
                      objParams[6] = new SqlParameter("@P_OUT_OF_MRKSSSC", objStudQExm.OutOfMarksSsc);
                      objParams[7] = new SqlParameter("@P_PERSSC", objStudQExm.PercentageSsc);
                      objParams[8] = new SqlParameter("@P_QEXMROLLNOSSC", objStudQExm.QEXMROLLNOSSC);
                      objParams[9] = new SqlParameter("@P_PERCENTILESSC", objStudQExm.PercentileSsc);
                      objParams[10] = new SqlParameter("@P_GRADESSC", objStudQExm.GradeSsc);
                      objParams[11] = new SqlParameter("@P_ATTEMPTSSC", objStudQExm.AttemptSsc);
                      objParams[12] = new SqlParameter("@P_COLLEGE_ADD_SSC", objStudQExm.colg_address_SSC);

                      objParams[13] = new SqlParameter("@P_SCHOOL_COLLEGE_NAMEHSSC", objStudQExm.SCHOOL_COLLEGE_NAME);
                      objParams[14] = new SqlParameter("@P_BOARDHSSC", objStudQExm.BOARD);
                      objParams[15] = new SqlParameter("@P_YEAR_OF_EXAMHSSC", objStudQExm.YEAR_OF_EXAMHSSC);
                      objParams[16] = new SqlParameter("@P_HSSC_MEDIUM", objStudQExm.HSSC_medium);
                      objParams[17] = new SqlParameter("@P_MARKS_OBTAINEDHSSC", objStudQExm.MARKOBTAINED);
                      objParams[18] = new SqlParameter("@P_OUT_OF_MRKSHSSC", objStudQExm.OUTOFMARK);
                      objParams[19] = new SqlParameter("@P_PERHSSC", objStudQExm.PERCENTAGE);
                      objParams[20] = new SqlParameter("@P_QEXMROLLNOHSSC", objStudQExm.QEXMROLLNOHSSC);
                      objParams[21] = new SqlParameter("@P_PERCENTILEHSSC", objStudQExm.PercentileHSsc);
                      objParams[22] = new SqlParameter("@P_GRADEHSSC", objStudQExm.GRADE);
                      objParams[23] = new SqlParameter("@P_ATTEMPTHSSC", objStudQExm.ATTEMPT);
                      objParams[24] = new SqlParameter("@P_COLLEGE_ADD_HSSC", objStudQExm.colg_address_HSSC);

                      objParams[25] = new SqlParameter("@P_HSC_CHE", objStudQExm.HSCCHE);
                      objParams[26] = new SqlParameter("@P_HSC_CHE_MAX", objStudQExm.HSCCHEMAX1);
                      objParams[27] = new SqlParameter("@P_HSC_PHY", objStudQExm.HSCPHY1);
                      objParams[28] = new SqlParameter("@P_HSC_PHY_MAX", objStudQExm.HSCPHYMAX1);
                      objParams[29] = new SqlParameter("@P_HSC_ENG", objStudQExm.ENG);
                      objParams[30] = new SqlParameter("@P_HSC_ENG_MAX", objStudQExm.HSCENGMAX);
                      objParams[31] = new SqlParameter("@P_HSC_MAT", objStudQExm.MATHS);
                      objParams[32] = new SqlParameter("@P_HSC_MAT_MAX", objStudQExm.MATHSMAX);

                      objParams[33] = new SqlParameter("@P_QUALIFYNO", objStudQExm.QUALIFYNO);
                      objParams[34] = new SqlParameter("@P_QEXMROLLNO", objStudent.QexmRollNo);
                      objParams[35] = new SqlParameter("@P_YEAR_OF_EXAM", objStudent.YearOfExam);
                      objParams[36] = new SqlParameter("@P_PERCENTAGE", objStudent.Percentage);
                      objParams[37] = new SqlParameter("@P_PERCENTILE", objStudQExm.PERCENTILE);
                      objParams[38] = new SqlParameter("@P_ALL_INDIA_RANK", objStudQExm.ALLINDIARANK);
                      objParams[39] = new SqlParameter("@P_SCORE", objStudent.Score);

                      objParams[40] = new SqlParameter("@P_OTHERQUALIFYNO", objStudent.PGQUALIFYNO);
                      objParams[41] = new SqlParameter("@P_OTHERQEXMROLLNO", objStudent.PGENTROLLNO);
                      objParams[42] = new SqlParameter("@P_OTHER_YEAR_OF_EXAM", objStudent.pgyearOfExam);
                      objParams[43] = new SqlParameter("@P_OTHERPERCENTAGE", objStudent.pgpercentage);
                      objParams[44] = new SqlParameter("@P_OTHERPERCENTILE", objStudent.pgpercentile);
                      objParams[45] = new SqlParameter("@P_OTHER_ALL_INDIA_RANK", objStudent.PGRANK);
                      objParams[46] = new SqlParameter("@P_OTHER_SCORE", objStudent.pgscore);

                      objParams[47] = new SqlParameter("@P_SCHOOL_COLLEGE_NAME_DIPLOMA", objStudQExm.SchoolCollegeNameDiploma);
                      objParams[48] = new SqlParameter("@P_BOARDDIPLOMA", objStudQExm.BoardDiploma);
                      objParams[49] = new SqlParameter("@P_YEAR_OF_EXAMDIPLOMA", objStudQExm.YearOfExamDiploma);
                      objParams[50] = new SqlParameter("@P_DIPLOMA_MEDIUM", objStudQExm.Diploma_medium);
                      objParams[51] = new SqlParameter("@P_MARKS_OBTAINEDDIPLOMA", objStudQExm.MarksObtainedDiploma);
                      objParams[52] = new SqlParameter("@P_OUT_OF_MRKSDIPLOMA", objStudQExm.OutOfMarksDiploma);
                      objParams[53] = new SqlParameter("@P_PERDIPLOMA", objStudQExm.PercentageDiploma);
                      objParams[54] = new SqlParameter("@P_QEXMROLLNODIPLOMA", objStudQExm.QEXMROLLNODiploma);
                      objParams[55] = new SqlParameter("@P_PERCENTILEDIPLOMA", objStudQExm.PercentileDiploma);
                      objParams[56] = new SqlParameter("@P_GRADEDIPLOMA", objStudQExm.GradeDiploma);
                      objParams[57] = new SqlParameter("@P_ATTEMPTDIPLOMA", objStudQExm.AttemptDiploma);
                      objParams[58] = new SqlParameter("@P_COLLEGE_ADD_DIPLOMA", objStudQExm.colg_address_Diploma);
                      objParams[59] = new SqlParameter("@P_USER_TYPE", usertype);
                      objParams[60] = new SqlParameter("@P_OTHER_SUB", Vocational_Sub);
                      objParams[61] = new SqlParameter("@P_HSC_PCM", objStudQExm.HSCPCM);
                      objParams[62] = new SqlParameter("@P_HSC_PCM_PERCENTAGES", objStudQExm.HSCPCMPercentage);
                      objParams[63] = new SqlParameter("@P_NATA_MARKS", objStudent.NataMarks);
                      objParams[64] = new SqlParameter("@P_DIPLOMASTAUS", diplomastatus);
                      objParams[65] = new SqlParameter("@P_HSC_BIO", objStudQExm.HSCBIO);
                      objParams[66] = new SqlParameter("@P_HSC_BIO_MAX", objStudQExm.HSCBIOMAX);
                      objParams[67] = new SqlParameter("@P_OUT", SqlDbType.Int);
                      objParams[67].Direction = ParameterDirection.Output;
                      object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUD_QUALIFYING_EXAM_INFORMATION", objParams, true);

                      if (Convert.ToInt32(ret) == 1)
                          {
                          if (objStudent.LastQualifiedExams != null)
                              {
                              foreach (QualifiedExam qualExam in objStudent.LastQualifiedExams)
                                  {
                                  this.UpdateLastQualExams(qualExam);
                                  }
                              }

                          if (objStudent.EntranceExams != null)
                              {
                              foreach (QualifiedExam EntranceExam in objStudent.EntranceExams)
                                  {
                                  this.InsertUpdateEntranceExams(EntranceExam);
                                  }
                              }
                          retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                          }
                      else
                          retStatus = Convert.ToInt32(CustomStatus.Error);

                      }
                  catch (Exception ex)
                      {
                      retStatus = Convert.ToInt32(CustomStatus.Error);
                      throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentDASAInformation-> " + ex.ToString());
                      }

                  return retStatus;

                  }


                public int UpdateStudentPersonalInformation(Student objStudent, StudentAddress objStudAddress, StudentPhoto objStudPhoto, StudentQualExm objStudQExm, string MotherMobile, string MotherOfficeNo, string IndusEmail, int usertype, int Father_alive)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    //int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Update Student
                        objParams = new SqlParameter[50];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_REGNO", objStudent.RegNo);
                        objParams[2] = new SqlParameter("@P_ENROLLNO", objStudent.EnrollNo);
                        objParams[3] = new SqlParameter("@P_STUDFULLNAME", objStudent.StudName);
                        objParams[4] = new SqlParameter("@P_STUDFIRSTNAME", objStudent.firstName);
                        objParams[5] = new SqlParameter("@P_STUDMIDDLENAME", objStudent.MiddleName);
                        objParams[6] = new SqlParameter("@P_STUDLASTNAME", objStudent.LastName);
                        objParams[7] = new SqlParameter("@P_FATHERFULLNAME", objStudent.FatherName);
                        objParams[8] = new SqlParameter("@P_FATHERFIRSTNAME", objStudent.fatherfirstName);
                        objParams[9] = new SqlParameter("@P_FATHERMIDDLENAME", objStudent.FatherMiddleName);
                        objParams[10] = new SqlParameter("@P_FATHERLASTNAME", objStudent.FatherLastName);
                        objParams[11] = new SqlParameter("@P_FATHERMOBILE", objStudent.FatherMobile);
                        objParams[12] = new SqlParameter("@P_FATHEROFFICENO", objStudent.FatherOfficeNo);
                        objParams[13] = new SqlParameter("@P_FATHER_DESIG", objStudAddress.FATHER_DESIG);
                        objParams[14] = new SqlParameter("@P_FATHEROCCUPATIONNO", objStudAddress.OCCUPATION);
                        objParams[15] = new SqlParameter("@P_FATHEREMAIL", objStudent.Fatheremail);
                        objParams[16] = new SqlParameter("@P_MOTHERNAME", objStudent.MotherName);
                        objParams[17] = new SqlParameter("@P_MOTHERMOBILE", MotherMobile);
                        objParams[18] = new SqlParameter("@P_MOTHEREMAIL", objStudent.Motheremail);
                        objParams[19] = new SqlParameter("@P_MOTHER_DESIG", objStudAddress.MOTHERDESIGNATION);
                        objParams[20] = new SqlParameter("@P_MOTHEROFFICENO", MotherOfficeNo);
                        objParams[21] = new SqlParameter("@P_MOTHER_OCCUPATIONNO", objStudAddress.MOTHEROCCUPATION);
                        objParams[22] = new SqlParameter("@P_CASTE", objStudent.Caste);
                        objParams[23] = new SqlParameter("@P_SUB_CASTE", objStudent.Subcaste);
                        objParams[24] = new SqlParameter("@P_DOB", objStudent.Dob);
                        objParams[25] = new SqlParameter("@P_BLOODGRPNO", objStudent.BloodGroupNo);
                        objParams[26] = new SqlParameter("@P_CLAIMID", objStudent.ClaimType);
                        objParams[27] = new SqlParameter("@P_RELIGIONNO", objStudent.ReligionNo);
                        objParams[28] = new SqlParameter("@P_NATIONALITYNO", objStudent.NationalityNo);
                        objParams[29] = new SqlParameter("@P_CATEGORYNO", objStudent.ClaimType);
                        objParams[30] = new SqlParameter("@P_MARRIED", objStudent.Married);
                        objParams[31] = new SqlParameter("@P_ADDHARCARDNO", objStudent.AddharcardNo);
                        objParams[32] = new SqlParameter("@P_TYPE_OF_PHYSICALLY_HANDICAP", objStudent.Physical_Handicap);
                        objParams[33] = new SqlParameter("@P_SEX", objStudent.Sex);
                        objParams[34] = new SqlParameter("@P_INDUSEMAIL", IndusEmail);
                        objParams[35] = new SqlParameter("@P_STUDENTMOBILE", objStudent.StudentMobile);
                        objParams[36] = new SqlParameter("@P_EMAILID", objStudent.EmailID);
                        objParams[37] = new SqlParameter("@P_USERTYPE", usertype);
                        objParams[38] = new SqlParameter("@P_UANO", objStudent.Uano);
                        objParams[39] = new SqlParameter("@P_PHOTOPATH", objStudPhoto.PhotoPath);
                        objParams[40] = new SqlParameter("@P_ANNUAL_INCOME", objStudent.Annual_income);
                        objParams[41] = new SqlParameter("@P_PHOTOSIZE", objStudPhoto.PhotoSize);

                        if (objStudPhoto.Photo1 == null)
                            objParams[42] = new SqlParameter("@P_PHOTO", DBNull.Value);
                        else
                            objParams[42] = new SqlParameter("@P_PHOTO", objStudPhoto.Photo1);

                        objParams[42].SqlDbType = SqlDbType.Image;
                        objParams[43] = new SqlParameter("@P_PTYPE", objStudent.PayTypeNO);
                        objParams[44] = new SqlParameter("@P_PASSPORTNO", objStudent.PassportNo);
                        if (objStudent.Citizenship == null || objStudent.Citizenship == "")
                            objParams[45] = new SqlParameter("@P_CITIZENSHIPNO", DBNull.Value);
                        else
                            objParams[45] = new SqlParameter("@P_CITIZENSHIPNO", objStudent.Citizenship);
                        objParams[45] = new SqlParameter("@P_BIRTH_PLACE", objStudent.BirthPlace);
                        objParams[46] = new SqlParameter("@P_HOSTELLER", objStudent.HostelSts);
                        objParams[47] = new SqlParameter("@P_TRANSPORT", objStudent.Transportation);
                        objParams[48] = new SqlParameter("@P_FATHER_ALIVE", Father_alive);
                        objParams[49] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[49].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUDENT_PERSONAL_INFORMATION", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentPersonalInformation-> " + ex.ToString());
                    }

                    return retStatus;

                }
                public int AddUpdateStudentDocumentsDetailNew(int idno, int hiddtudocno, string extension, string contentType, string filename, string path, string certificateno, string district, DateTime issuedate, string Authority)
                {

                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[11];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_STU_DOC_NO", hiddtudocno);
                        // objParams[2] = new SqlParameter("@P_CHK", chkDocuments);
                        objParams[2] = new SqlParameter("@P_EXTENSION", extension);
                        objParams[3] = new SqlParameter("@P_CONTENTTYPE", contentType);
                        // objParams[5] = new SqlParameter("@P_FILEDATA", document);
                        objParams[4] = new SqlParameter("@P_FILEPATH", path);
                        objParams[5] = new SqlParameter("@P_FILENAME", filename);


                        objParams[6] = new SqlParameter("@P_CERTFICATE_NO", certificateno);
                        objParams[7] = new SqlParameter("@P_DISTRICT", district);
                        objParams[8] = new SqlParameter("@P_ISSUEDATE", issuedate);
                        objParams[9] = new SqlParameter("@P_AUTHORITY", Authority);
                        objParams[10] = new SqlParameter("@P_OUT", SqlDbType.Int);


                        objParams[10].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INSERT_UPDATE_STUDENT_FILE_UPLOAD_DOCUMENT_STUDENT", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        else if (Convert.ToInt32(ret) == 2)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddUpdateStudentDocumentsDetail-> " + ex.ToString());
                    }
                    return retStatus;
                    //throw new NotImplementedException();
                }

                public int AddUpdateStudentDocumentsDetailNew(int idno, int hiddtudocno, string extension, string contentType, string filename, string path, string certificateno, string district, string issuedate, string Authority, int COMMAND_TYPE, int userno)
                    {

                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                        {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[13];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_STU_DOC_NO", hiddtudocno);
                        // objParams[2] = new SqlParameter("@P_CHK", chkDocuments);
                        objParams[2] = new SqlParameter("@P_EXTENSION", extension);
                        objParams[3] = new SqlParameter("@P_CONTENTTYPE", contentType);
                        // objParams[5] = new SqlParameter("@P_FILEDATA", document);
                        objParams[4] = new SqlParameter("@P_FILEPATH", path);
                        objParams[5] = new SqlParameter("@P_FILENAME", filename);


                        objParams[6] = new SqlParameter("@P_CERTFICATE_NO", certificateno);
                        objParams[7] = new SqlParameter("@P_DISTRICT", district);
                        objParams[8] = new SqlParameter("@P_ISSUEDATE", issuedate);
                        objParams[9] = new SqlParameter("@P_AUTHORITY", Authority);
                        objParams[10] = new SqlParameter("@P_COMMAND_TYPE", COMMAND_TYPE);
                        objParams[11] = new SqlParameter("@P_USERNO", userno); // Added by Bhagyashree on 01062023
                        objParams[12] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[12].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INSERT_UPDATE_STUDENT_FILE_UPLOAD_DOCUMENT_STUDENT", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        else if (Convert.ToInt32(ret) == 2)
                            {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                            }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        }
                    catch (Exception ex)
                        {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddUpdateStudentDocumentsDetail-> " + ex.ToString());
                        }
                    return retStatus;
                    //throw new NotImplementedException();
                    }


                //ADDED BY PRANITA A. HIRADKAR ON 06/12/2021 FOR APPROVE BONAFIDE CERTIFICATE
                //updated by jay takalkhede  on dated 23/03/2023
                public DataTableReader GetStudentInfo_bonafide(int idno, string enroll)
                {
                    DataTableReader dtr = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_REGNO", enroll);
                        dtr = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_BONAFIDE_CERTIFICATE", objParams).Tables[0].CreateDataReader();
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentInfo_bonafide()->" + ex.ToString());
                    }
                    return dtr;
                }

                //---------------------------------------------------------------------------------------------------
                //ADDED BY PRANITA ON 06/12/2021 FOR APPROVE BONAFIDE CERTIFICATE 
                public int Insert_ApproveBonafideCerti(int idno, int admbatch, int certno, int Applyby, string Applyipaddress, int ApproveStatus)
                {
                    int status = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[7];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[2] = new SqlParameter("@P_CERT_NO", certno);
                        objParams[3] = new SqlParameter("@P_APPLY_BY", Applyby);
                        objParams[4] = new SqlParameter("@P_APPLY_IPADDRESS", Applyipaddress);
                        objParams[5] = new SqlParameter("@P_APPROVE_STATUS", ApproveStatus);
                        objParams[6] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[6].Direction = System.Data.ParameterDirection.Output;

                        object obj = objSQLHelper.ExecuteNonQuerySP("PKG_INSERT_APPROVE_BONAFIED_STATUS", objParams, true);

                        if (obj != null && obj.ToString() == "1")
                            status = Convert.ToInt32(CustomStatus.RecordSaved);
                        else if (obj != null && obj.ToString() == "2627")
                            status = Convert.ToInt32(CustomStatus.RecordExist);
                        else
                            status = Convert.ToInt32(CustomStatus.Error);
                    }
                    catch (Exception ex)
                    {
                        status = Convert.ToInt32((CustomStatus.Error));
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.FeesHeadController.AdmInsertFeeDeduction-> " + ex.ToString());
                    }
                    return status;
                }
                //ENDED BY PRANITA ON 06/12/2021 FOR APPROVE BONAFIDE CERTIFICATE 
                /// <summary>
                /// Adeed by Swapnil dated on 01-01-2022 for Searching student details
                /// </summary>
                /// <param name="search"></param>
                /// <param name="category"></param>
                /// <returns></returns>
                public DataSet RetrieveStudentDetailsNew(string search, string category)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_SEARCHSTRING", search);
                        objParams[1] = new SqlParameter("@P_SEARCH", category);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_SEARCH_STUDENT_NEW_DESIGN", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.RetrieveEmpDetails-> " + ex.ToString());
                    }
                    return ds;
                }
                public DataSet Get_Section_Regno_Allotment_Excel(int college_id, int admbatch, int degreeno, int branchno, int sementerno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_COLLEGE_ID", college_id);
                        objParams[1] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[4] = new SqlParameter("@P_SEMESTERNO", sementerno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_SECTION_REGNO_ALLOTMENT_EXCEL", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.Get_Section_Regno_Allotment_Excel-> " + ex.ToString());
                    }
                    return ds;
                }
                /// <summary>
                /// Added by Nikhil L. on 17/01/2022 to get student list for approval with multiple departments.
                /// </summary>
                /// <param name="ADMBATCH"></param>
                /// <param name="COLLEGE_ID"></param>
                /// <param name="DEPARTMENTNO"></param>
                /// <param name="DEGREENO"></param>
                /// <param name="BRANCHNO"></param>
                /// <param name="STATUS"></param>
                /// <returns></returns>
                public DataSet GetStudentForAdmApprove_NewMultiSelect(int ADMBATCH, int COLLEGE_ID, string DEPARTMENTNO, int DEGREENO, int BRANCHNO, int STATUS)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                { 

                    new SqlParameter("@P_ADMBATCH",ADMBATCH),
                    new SqlParameter("@P_COLLEGE_ID",COLLEGE_ID),
                    new SqlParameter("@P_DEPTNO", DEPARTMENTNO),
                    new SqlParameter("@P_DEGREENO", DEGREENO),
                    new SqlParameter("@P_BRANCHNO", BRANCHNO),
                    new SqlParameter("@P_STATUS", STATUS)
                };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_GET_STUDENT_FOR_ADMISSION_APPROVAL_NEW_MULTI_DEPT", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLogicLayer.BusinessLogic.Academic.StudentController.GetStudentForAdmApprove_NewMultiSelect() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }
                //*************************************************************************************************************************
                /// <summary>
                /// Added by Nikhil L. on 17/01/2022 to get doc upload status with multiple departments.
                /// </summary>
                /// <param name="admbatchno"></param>
                /// <param name="collegeid"></param>
                /// <param name="deptno"></param>
                /// <param name="degreeno"></param>
                /// <param name="branchno"></param>
                /// <returns></returns>
                public DataSet GetNewAdmissionStudentDocUploadStatus_NewMultiSelect(int admbatchno, int collegeid, string deptno, int degreeno, int branchno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                { 

                     new SqlParameter("@P_ADMBATCH",admbatchno),
                     new SqlParameter("@P_COLLEGEID",collegeid),
                     new SqlParameter("@P_DEPTNO",deptno),
                     new SqlParameter("@P_DEGREENO",degreeno),
                     new SqlParameter("@P_BRANCHNO",branchno)
                };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_GET_NEW_ADM_STUDENT_NEW_DOC_UPLOAD_STATUS_NEW_MULTISELECT", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.StudentController.GetNewAdmissionStudentDetails() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                public DataSet LookupPersonalDetailsPageLoad(int idno)
                {
                    //int status = Convert.ToInt32(CustomStatus.Others);s
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_LOOKUP_PDETAILS_PAGE_LOAD", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.FeesHeadController.AdmInsertFeeDeduction-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet FillDropDownPersonalDetailsPageLoad(string idno)
                {
                    //int status = Convert.ToInt32(CustomStatus.Others);s
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_FILL_DRPDOWN_FOR_PERSONAL_DETAILS_PAGE_LOAD", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.FeesHeadController.AdmInsertFeeDeduction-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataTableReader GetStudentDetails_CRESCENT(int idno)
                {
                    DataTableReader dtr = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        dtr = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_BYID", objParams).Tables[0].CreateDataReader();

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return dtr;
                }
                //------------------------------------------------------------------------------------------------------------------------
                public DataSet GetDocumentList_CRESCENT(int UA_NO)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_UA_NO", UA_NO);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_DOCUMENT_LIST_STUDINFO", objParams);
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentRegistrationController.GetDocumentList-> " + ex.ToString());
                    }
                    return ds;
                }
                //------------------------------------------------------------------------------------------------------------------------
                //Added by Rohit on 17-01-2022 to remove fill dropdown method 
                public DataSet FillDropDownShowDetails(string idno)
                {
                    //int status = Convert.ToInt32(CustomStatus.Others);s
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_SP_FILL_DROPDOWN_SHOW_DETAILS", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.FeesHeadController.AdmInsertFeeDeduction-> " + ex.ToString());
                    }
                    return ds;
                }

                //------------------------------------------------------------------------------------------------------------------------

                public DataSet FillDropDownShowVaccinationDetails(string idno)
                {
                    //int status = Convert.ToInt32(CustomStatus.Others);s
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_FILL_DROPDOWN_FOR_SHOW_VACCINATION_DETAILS", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.FeesHeadController.AdmInsertFeeDeduction-> " + ex.ToString());
                    }
                    return ds;
                }
                //------------------------------------------------------------------------------------------------------------------------
                //created by Rohit on 15-01-2022 for lookup 


                public DataSet LookupPersonalDetails(string idno)
                {
                    //int status = Convert.ToInt32(CustomStatus.Others);s
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_STUDENT_INFO_ENTRY_LOOKUP_PERSONAL_DETAILS_PAGE", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.FeesHeadController.AdmInsertFeeDeduction-> " + ex.ToString());
                    }
                    return ds;
                }

                //------------------------------------------------------------------------------------------------------------------------
                public int UpdateStudentPersonalInformation_CRESCENT(Student objStudent, StudentAddress objStudAddress, StudentPhoto objStudPhoto, StudentQualExm objStudQExm, string MotherMobile, string MotherOfficeNo, string IndusEmail, int usertype, int Father_alive)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    //int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Update Student
                        objParams = new SqlParameter[49];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_REGNO", objStudent.RegNo);
                        objParams[2] = new SqlParameter("@P_ENROLLNO", objStudent.EnrollNo);
                        objParams[3] = new SqlParameter("@P_STUDFULLNAME", objStudent.StudName);
                        objParams[4] = new SqlParameter("@P_STUDFIRSTNAME", objStudent.firstName);
                        objParams[5] = new SqlParameter("@P_STUDMIDDLENAME", objStudent.MiddleName);
                        objParams[6] = new SqlParameter("@P_STUDLASTNAME", objStudent.LastName);
                        objParams[7] = new SqlParameter("@P_FATHERFULLNAME", objStudent.FatherName);
                        objParams[8] = new SqlParameter("@P_FATHERFIRSTNAME", objStudent.fatherfirstName);
                        objParams[9] = new SqlParameter("@P_FATHERMIDDLENAME", objStudent.FatherMiddleName);
                        objParams[10] = new SqlParameter("@P_FATHERLASTNAME", objStudent.FatherLastName);
                        objParams[11] = new SqlParameter("@P_FATHERMOBILE", objStudent.FatherMobile);
                        objParams[12] = new SqlParameter("@P_FATHEROFFICENO", objStudent.FatherOfficeNo);
                        objParams[13] = new SqlParameter("@P_FATHER_DESIG", objStudAddress.FATHER_DESIG);
                        objParams[14] = new SqlParameter("@P_FATHEROCCUPATIONNO", objStudAddress.OCCUPATION);
                        objParams[15] = new SqlParameter("@P_FATHEREMAIL", objStudent.Fatheremail);
                        objParams[16] = new SqlParameter("@P_MOTHERNAME", objStudent.MotherName);
                        objParams[17] = new SqlParameter("@P_MOTHERMOBILE", MotherMobile);
                        objParams[18] = new SqlParameter("@P_MOTHEREMAIL", objStudent.Motheremail);
                        objParams[19] = new SqlParameter("@P_MOTHER_DESIG", objStudAddress.MOTHERDESIGNATION);
                        objParams[20] = new SqlParameter("@P_MOTHEROFFICENO", MotherOfficeNo);
                        objParams[21] = new SqlParameter("@P_MOTHER_OCCUPATIONNO", objStudAddress.MOTHEROCCUPATION);
                        objParams[22] = new SqlParameter("@P_CASTE", objStudent.Caste);
                        objParams[23] = new SqlParameter("@P_SUB_CASTE", objStudent.Subcaste);
                        objParams[24] = new SqlParameter("@P_DOB", objStudent.Dob);
                        objParams[25] = new SqlParameter("@P_BLOODGRPNO", objStudent.BloodGroupNo);
                        objParams[26] = new SqlParameter("@P_CLAIMID", objStudent.ClaimType);
                        objParams[27] = new SqlParameter("@P_RELIGIONNO", objStudent.ReligionNo);
                        objParams[28] = new SqlParameter("@P_NATIONALITYNO", objStudent.NationalityNo);
                        objParams[29] = new SqlParameter("@P_CATEGORYNO", objStudent.ClaimType);
                        objParams[30] = new SqlParameter("@P_MARRIED", objStudent.Married);
                        objParams[31] = new SqlParameter("@P_ADDHARCARDNO", objStudent.AddharcardNo);
                        objParams[32] = new SqlParameter("@P_TYPE_OF_PHYSICALLY_HANDICAP", objStudent.Physical_Handicap);
                        objParams[33] = new SqlParameter("@P_SEX", objStudent.Sex);
                        objParams[34] = new SqlParameter("@P_INDUSEMAIL", IndusEmail);
                        objParams[35] = new SqlParameter("@P_STUDENTMOBILE", objStudent.StudentMobile);
                        objParams[36] = new SqlParameter("@P_EMAILID", objStudent.EmailID);
                        objParams[37] = new SqlParameter("@P_USERTYPE", usertype);
                        objParams[38] = new SqlParameter("@P_UANO", objStudent.Uano);
                        objParams[39] = new SqlParameter("@P_PHOTOPATH", objStudPhoto.PhotoPath);
                        objParams[40] = new SqlParameter("@P_ANNUAL_INCOME", objStudent.Annual_income);
                        objParams[41] = new SqlParameter("@P_PHOTOSIZE", objStudPhoto.PhotoSize);

                        if (objStudPhoto.Photo1 == null)
                            objParams[42] = new SqlParameter("@P_PHOTO", DBNull.Value);
                        else
                            objParams[42] = new SqlParameter("@P_PHOTO", objStudPhoto.Photo1);

                        objParams[42].SqlDbType = SqlDbType.Image;
                        objParams[43] = new SqlParameter("@P_PTYPE", objStudent.PayTypeNO);
                        objParams[44] = new SqlParameter("@P_PASSPORTNO", objStudent.PassportNo);
                        //if (objStudent.Citizenship == null || objStudent.Citizenship == "")
                        //    objParams[45] = new SqlParameter("@P_CITIZENSHIPNO", DBNull.Value);
                        //else
                        //    objParams[45] = new SqlParameter("@P_CITIZENSHIPNO", objStudent.Citizenship);
                        objParams[45] = new SqlParameter("@P_BIRTH_PLACE", objStudent.BirthPlace);
                        objParams[46] = new SqlParameter("@P_HOSTELLER", objStudent.HostelSts);
                        objParams[47] = new SqlParameter("@P_TRANSPORT", objStudent.Transportation);
                        //objParams[48] = new SqlParameter("@P_FATHER_ALIVE", Father_alive);
                        objParams[48] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[48].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUDENT_PERSONAL_INFORMATION", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentPersonalInformation-> " + ex.ToString());
                    }

                    return retStatus;

                }
                //------------------------------------------------------------------------------------------------------------------------
                public int UpdateStudPhoto_CRESCENT(Student objstud)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //UpdateFaculty Reference
                        objParams = new SqlParameter[2];

                        objParams[0] = new SqlParameter("@P_IDNO", objstud.IdNo);
                        objParams[1] = new SqlParameter("@P_STUD_PHOTO", objstud.StudPhoto);


                        if (objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_SP_UPD_STUDENT_PHOTO", objParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentPhoto-> " + ex.ToString());
                    }
                    return retStatus;
                }
                //------------------------------------------------------------------------------------------------------------------------
                public int UpdateStudSign_CRESCENT(Student objstud)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //UpdateFaculty Reference
                        objParams = new SqlParameter[2];

                        objParams[0] = new SqlParameter("@P_IDNO", objstud.IdNo);
                        objParams[1] = new SqlParameter("@P_STUD_SIGN", objstud.StudSign);


                        if (objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_SP_UPD_STUDENT_SIGN", objParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentSign-> " + ex.ToString());
                    }
                    return retStatus;
                }
                //------------------------------------------------------------------------------------------------------------------------
                public int UpdateStudentAddressDetails_CRESCENT(Student objStudent, StudentAddress objStudAddress, int usertype)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Update Student Local Address
                        objParams = new SqlParameter[30];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_LADDRESS", objStudAddress.LADDRESS);
                        objParams[2] = new SqlParameter("@P_LCITY", objStudAddress.LCITY);
                        objParams[3] = new SqlParameter("@P_LSTATE", objStudAddress.LSTATE);
                        objParams[4] = new SqlParameter("@P_LDISTRICT", objStudAddress.LDISTRICT);
                        objParams[5] = new SqlParameter("@P_LPINCODE", objStudAddress.LPINCODE);
                        objParams[6] = new SqlParameter("@P_LTELEPHONE", objStudAddress.LTELEPHONE);
                        objParams[7] = new SqlParameter("@P_LMOBILE", objStudAddress.LMOBILE);
                        objParams[8] = new SqlParameter("@P_LPOSTOFF", objStudAddress.LPOSTOFF);
                        objParams[9] = new SqlParameter("@P_LPOLICESTATION", objStudAddress.LPOLICESTATION);
                        //Update Student Permenant Address
                        objParams[10] = new SqlParameter("@P_PADDRESS", objStudAddress.PADDRESS);
                        objParams[11] = new SqlParameter("@P_PCITY", objStudAddress.PCITY);
                        objParams[12] = new SqlParameter("@P_PSTATE", objStudAddress.PSTATE);
                        objParams[13] = new SqlParameter("@P_PDISTRICT", objStudAddress.PDISTRICT);
                        objParams[14] = new SqlParameter("@P_PPINCODE", objStudAddress.PPINCODE);
                        objParams[15] = new SqlParameter("@P_PTELEPHONE", objStudAddress.PTELEPHONE);
                        objParams[16] = new SqlParameter("@P_PMOBILE", objStudAddress.PMOBILE);
                        objParams[17] = new SqlParameter("@P_PTEHSIL", objStudAddress.PTEHSIL);
                        objParams[18] = new SqlParameter("@P_PPOSTOFF", objStudAddress.PPOSTOFF);
                        objParams[19] = new SqlParameter("@P_PPOLICEOFF", objStudAddress.PPOLICESTATION);
                        //Update Student Guardian Address
                        objParams[20] = new SqlParameter("@P_GADDRESS", objStudAddress.GADDRESS);
                        objParams[21] = new SqlParameter("@P_GUARDIANNAME", objStudAddress.GUARDIANNAME);
                        objParams[22] = new SqlParameter("@P_GPHONE", objStudAddress.GPHONE);
                        objParams[23] = new SqlParameter("@P_ANNUAL_INCOME", objStudAddress.ANNUAL_INCOME);
                        objParams[24] = new SqlParameter("@P_RELATION_GUARDIAN", objStudAddress.RELATION_GUARDIAN);
                        objParams[25] = new SqlParameter("@P_GOCCUPATIONNAME", objStudAddress.GOCCUPATIONNAME);
                        objParams[26] = new SqlParameter("@P_GUARDIANDESIG", objStudAddress.GUARDIANDESIGNATION);
                        objParams[27] = new SqlParameter("@P_USER_TYPE ", usertype);
                        objParams[28] = new SqlParameter("@P_LTEHSIL", objStudAddress.LTEHSIL);
                        objParams[29] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[29].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUD_ADDRESS_DETAILS", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentAddressDetails-> " + ex.ToString());
                    }

                    return retStatus;

                }
                //------------------------------------------------------------------------------------------------------------------------
                public int UpdateStudentAdmissionDetails_CRESCENT(Student objStudent, int usertype)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Update Student Local Address
                        objParams = new SqlParameter[12];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        //if (objStudent.AdmDate == DateTime.MinValue)
                        //    objParams[1] = new SqlParameter("@P_ADMDATE", DBNull.Value);
                        //else
                        //    objParams[1] = new SqlParameter("@P_ADMDATE", objStudent.AdmDate);
                        if (objStudent.AdmDate == null)///Added by Rita on 20190729
                            objParams[1] = new SqlParameter("@P_ADMDATE", DBNull.Value);
                        else
                            objParams[1] = new SqlParameter("@P_ADMDATE", objStudent.AdmDate);

                        objParams[2] = new SqlParameter("@P_COLLEGE_ID", objStudent.College_ID);
                        objParams[3] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                        objParams[4] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                        objParams[5] = new SqlParameter("@P_YEAR", objStudent.Year);
                        objParams[6] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[7] = new SqlParameter("@P_PTYPE", objStudent.PType);
                        objParams[8] = new SqlParameter("@P_BATCHNO", objStudent.BatchNo);
                        objParams[9] = new SqlParameter("@P_USER_TYPE", usertype);
                        objParams[10] = new SqlParameter("@P_CLAIM_TYPE", objStudent.ClaimType);
                        objParams[11] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[11].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUD_ADMISSION_DETAILS", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentAddressDetails-> " + ex.ToString());
                    }

                    return retStatus;

                }
                //------------------------------------------------------------------------------------------------------------------------  
                public DataSet GetAllselectDocument_CRESCENT(string idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_ALL_DOCUMENT_SELECT", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.CopySchemeBySem-> " + ex.ToString());
                    }

                    return ds;
                }
                //------------------------------------------------------------------------------------------------------------------------
                public DataSet LookupDownloadDocumentLINK(string documentname, int idno)
                {
                    //int status = Convert.ToInt32(CustomStatus.Others);s
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[0] = new SqlParameter("@P_DOCUMENTNAME", documentname);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_LOOKUP_DOWN_DOCUMENT_CLICK", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.FeesHeadController.AdmInsertFeeDeduction-> " + ex.ToString());
                    }
                    return ds;
                }
                //------------------------------------------------------------------------------------------------------------------------
                public DataSet LookupBtnClickUploadDocument(string documentname)
                {
                    //int status = Convert.ToInt32(CustomStatus.Others);s
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_DOCUMENTNAME", documentname);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_LOOKUP_SUBMIT_CLICK_DOCUMENT_UPLOAD", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.FeesHeadController.AdmInsertFeeDeduction-> " + ex.ToString());
                    }
                    return ds;
                }
                //------------------------------------------------------------------------------------------------------------------------
                public int InsertScanDocument_CRESCENT(string studid, int docid, int chkOriCopy, int chkTrueCopy, int chkNA, byte[] image, string fileType, int flag, string docnm, string path)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[11];

                        objParams[0] = new SqlParameter("@P_IDNO", studid);
                        objParams[1] = new SqlParameter("@P_DOCUMENTNO", docid);
                        //objParams[2] = new SqlParameter("@P_DOCUMENTNAME", docnames);
                        objParams[2] = new SqlParameter("@P_ORICOPY", chkOriCopy);
                        objParams[3] = new SqlParameter("@P_TRUECOPY", chkTrueCopy);
                        objParams[4] = new SqlParameter("@P_NOTAPP", chkNA);
                        objParams[5] = new SqlParameter("@P_FILETYPE", fileType);
                        objParams[6] = new SqlParameter("@P_FLAG", flag);
                        objParams[7] = new SqlParameter("@P_IMAGES", SqlDbType.Image);
                        objParams[7].Value = DBNull.Value;
                        objParams[8] = new SqlParameter("@P_DOCUMENT_NAME", docnm);
                        objParams[9] = new SqlParameter("@P_DOC_PATH", path);
                        objParams[10] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[10].Direction = ParameterDirection.Output;

                        object ret = Convert.IsDBNull(objSQLHelper.ExecuteNonQuerySP("PKG_ACD_UPDATE_DOCUMENT", objParams, true));

                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.ACADEMIC.ANSWERSHEET.InsertAnswerSheetMark-> " + ex.ToString());
                    }

                    return retStatus;
                }
                //------------------------------------------------------------------------------------------------------------------------ 
                public DataSet LookupDocumentUpload(string idno, string documetno)
                {
                    //int status = Convert.ToInt32(CustomStatus.Others);s
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_DOCUMENTNO", documetno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_LOOKUP_LISTVIEW_UPLOAD_DOCUMENT", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.FeesHeadController.AdmInsertFeeDeduction-> " + ex.ToString());
                    }
                    return ds;
                }
                //------------------------------------------------------------------------------------------------------------------------
                public DataSet LookupSaveDocumentUpload(string idno)
                {
                    //int status = Convert.ToInt32(CustomStatus.Others);s
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_LOOKUP_SAVE_DOCUMENT_UPLOAD", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.FeesHeadController.AdmInsertFeeDeduction-> " + ex.ToString());
                    }
                    return ds;
                }
                //------------------------------------------------------------------------------------------------------------------------
                public DataSet LookupSaveClickDocumentUpload(int idno, int degreeno, int idtype, int nationalityno, int catagoryno)
                {
                    //int status = Convert.ToInt32(CustomStatus.Others);s
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[2] = new SqlParameter("@P_ID_TYPE", idtype);
                        objParams[3] = new SqlParameter("@P_NATIONALITYNO", nationalityno);
                        objParams[4] = new SqlParameter("@P_CATAGORYNO", catagoryno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_LOOKUP_SAVE_CLICK_DOCUMENT_UPLOAD", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.FeesHeadController.AdmInsertFeeDeduction-> " + ex.ToString());
                    }
                    return ds;
                }
                //------------------------------------------------------------------------------------------------------------------------
                public int InsertUpdateStudentDocSubmitLog_CRESCENT(int studid)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[2];

                        objParams[0] = new SqlParameter("@P_IDNO", studid);
                        objParams[1] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[1].Direction = ParameterDirection.Output;

                        object ret = Convert.IsDBNull(objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INS_UPDATE_DOC_SUBMIT_LOG", objParams, true));

                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.ACADEMIC.ANSWERSHEET.InsertUpdateStudentDocSubmitLog-> " + ex.ToString());
                    }

                    return retStatus;
                }
                //------------------------------------------------------------------------------------------------------------------------
                public DataSet FillDropDownLVBindData()
                {
                    //int status = Convert.ToInt32(CustomStatus.Others);s
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[0];
                        //objParams[0] = new SqlParameter("@P_IDNO", idno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_FILL_DROPDOWN_LVBIND_DATA", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.FeesHeadController.AdmInsertFeeDeduction-> " + ex.ToString());
                    }
                    return ds;
                }
                //------------------------------------------------------------------------------------------------------------------------
                public int UpdateStudentQualifyingExamInformation_CRESCENT(Student objStudent, StudentQualExm objStudQExm, int usertype, string Vocational_Sub)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Update Student Local Address
                        objParams = new SqlParameter[61];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_SCHOOL_COLLEGE_NAMESSC", objStudQExm.SchoolCollegeNameSsc);
                        objParams[2] = new SqlParameter("@P_BOARDSSC", objStudQExm.BoardSsc);
                        objParams[3] = new SqlParameter("@P_YEAR_OF_EXAMSSC", objStudQExm.YearOfExamSsc);
                        objParams[4] = new SqlParameter("@P_SSC_MEDIUM", objStudQExm.SSC_medium);
                        objParams[5] = new SqlParameter("@P_MARKS_OBTAINEDSSC", objStudQExm.MarksObtainedSsc);
                        objParams[6] = new SqlParameter("@P_OUT_OF_MRKSSSC", objStudQExm.OutOfMarksSsc);
                        objParams[7] = new SqlParameter("@P_PERSSC", objStudQExm.PercentageSsc);
                        objParams[8] = new SqlParameter("@P_QEXMROLLNOSSC", objStudQExm.QEXMROLLNOSSC);
                        objParams[9] = new SqlParameter("@P_PERCENTILESSC", objStudQExm.PercentileSsc);
                        objParams[10] = new SqlParameter("@P_GRADESSC", objStudQExm.GradeSsc);
                        objParams[11] = new SqlParameter("@P_ATTEMPTSSC", objStudQExm.AttemptSsc);
                        objParams[12] = new SqlParameter("@P_COLLEGE_ADD_SSC", objStudQExm.colg_address_SSC);

                        objParams[13] = new SqlParameter("@P_SCHOOL_COLLEGE_NAMEHSSC", objStudQExm.SCHOOL_COLLEGE_NAME);
                        objParams[14] = new SqlParameter("@P_BOARDHSSC", objStudQExm.BOARD);
                        objParams[15] = new SqlParameter("@P_YEAR_OF_EXAMHSSC", objStudQExm.YEAR_OF_EXAMHSSC);
                        objParams[16] = new SqlParameter("@P_HSSC_MEDIUM", objStudQExm.HSSC_medium);
                        objParams[17] = new SqlParameter("@P_MARKS_OBTAINEDHSSC", objStudQExm.MARKOBTAINED);
                        objParams[18] = new SqlParameter("@P_OUT_OF_MRKSHSSC", objStudQExm.OUTOFMARK);
                        objParams[19] = new SqlParameter("@P_PERHSSC", objStudQExm.PERCENTAGE);
                        objParams[20] = new SqlParameter("@P_QEXMROLLNOHSSC", objStudQExm.QEXMROLLNOHSSC);
                        objParams[21] = new SqlParameter("@P_PERCENTILEHSSC", objStudQExm.PercentileHSsc);
                        objParams[22] = new SqlParameter("@P_GRADEHSSC", objStudQExm.GRADE);
                        objParams[23] = new SqlParameter("@P_ATTEMPTHSSC", objStudQExm.ATTEMPT);
                        objParams[24] = new SqlParameter("@P_COLLEGE_ADD_HSSC", objStudQExm.colg_address_HSSC);

                        objParams[25] = new SqlParameter("@P_HSC_CHE", objStudQExm.HSCCHE);
                        objParams[26] = new SqlParameter("@P_HSC_CHE_MAX", objStudQExm.HSCCHEMAX1);
                        objParams[27] = new SqlParameter("@P_HSC_PHY", objStudQExm.HSCPHY1);
                        objParams[28] = new SqlParameter("@P_HSC_PHY_MAX", objStudQExm.HSCPHYMAX1);
                        objParams[29] = new SqlParameter("@P_HSC_ENG", objStudQExm.ENG);
                        objParams[30] = new SqlParameter("@P_HSC_ENG_MAX", objStudQExm.HSCENGMAX);
                        objParams[31] = new SqlParameter("@P_HSC_MAT", objStudQExm.MATHS);
                        objParams[32] = new SqlParameter("@P_HSC_MAT_MAX", objStudQExm.MATHSMAX);

                        objParams[33] = new SqlParameter("@P_QUALIFYNO", objStudQExm.QUALIFYNO);
                        objParams[34] = new SqlParameter("@P_QEXMROLLNO", objStudent.QexmRollNo);
                        objParams[35] = new SqlParameter("@P_YEAR_OF_EXAM", objStudent.YearOfExam);
                        objParams[36] = new SqlParameter("@P_PERCENTAGE", objStudent.Percentage);
                        objParams[37] = new SqlParameter("@P_PERCENTILE", objStudQExm.PERCENTILE);
                        objParams[38] = new SqlParameter("@P_ALL_INDIA_RANK", objStudQExm.ALLINDIARANK);
                        objParams[39] = new SqlParameter("@P_SCORE", objStudent.Score);

                        objParams[40] = new SqlParameter("@P_OTHERQUALIFYNO", objStudent.PGQUALIFYNO);
                        objParams[41] = new SqlParameter("@P_OTHERQEXMROLLNO", objStudent.PGENTROLLNO);
                        objParams[42] = new SqlParameter("@P_OTHER_YEAR_OF_EXAM", objStudent.pgyearOfExam);
                        objParams[43] = new SqlParameter("@P_OTHERPERCENTAGE", objStudent.pgpercentage);
                        objParams[44] = new SqlParameter("@P_OTHERPERCENTILE", objStudent.pgpercentile);
                        objParams[45] = new SqlParameter("@P_OTHER_ALL_INDIA_RANK", objStudent.PGRANK);
                        objParams[46] = new SqlParameter("@P_OTHER_SCORE", objStudent.pgscore);

                        objParams[47] = new SqlParameter("@P_SCHOOL_COLLEGE_NAME_DIPLOMA", objStudQExm.SchoolCollegeNameDiploma);
                        objParams[48] = new SqlParameter("@P_BOARDDIPLOMA", objStudQExm.BoardDiploma);
                        objParams[49] = new SqlParameter("@P_YEAR_OF_EXAMDIPLOMA", objStudQExm.YearOfExamDiploma);
                        objParams[50] = new SqlParameter("@P_DIPLOMA_MEDIUM", objStudQExm.Diploma_medium);
                        objParams[51] = new SqlParameter("@P_MARKS_OBTAINEDDIPLOMA", objStudQExm.MarksObtainedDiploma);
                        objParams[52] = new SqlParameter("@P_OUT_OF_MRKSDIPLOMA", objStudQExm.OutOfMarksDiploma);
                        objParams[53] = new SqlParameter("@P_PERDIPLOMA", objStudQExm.PercentageDiploma);
                        objParams[54] = new SqlParameter("@P_QEXMROLLNODIPLOMA", objStudQExm.QEXMROLLNODiploma);
                        objParams[55] = new SqlParameter("@P_PERCENTILEDIPLOMA", objStudQExm.PercentileDiploma);
                        objParams[56] = new SqlParameter("@P_GRADEDIPLOMA", objStudQExm.GradeDiploma);
                        objParams[57] = new SqlParameter("@P_ATTEMPTDIPLOMA", objStudQExm.AttemptDiploma);
                        objParams[58] = new SqlParameter("@P_COLLEGE_ADD_DIPLOMA", objStudQExm.colg_address_Diploma);

                        objParams[59] = new SqlParameter("@P_USER_TYPE", usertype);
                        //objParams[60] = new SqlParameter("@P_OTHER_SUB", Vocational_Sub);
                        objParams[60] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[60].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUD_QUALIFYING_EXAM_INFORMATION", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                        {
                            if (objStudent.LastQualifiedExams != null)
                            {
                                foreach (QualifiedExam qualExam in objStudent.LastQualifiedExams)
                                {
                                    this.UpdateLastQualExams(qualExam);
                                }
                            }

                            if (objStudent.EntranceExams != null)
                            {
                                foreach (QualifiedExam EntranceExam in objStudent.EntranceExams)
                                {
                                    this.InsertUpdateEntranceExams(EntranceExam);
                                }
                            }
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentDASAInformation-> " + ex.ToString());
                    }

                    return retStatus;

                }
                //------------------------------------------------------------------------------------------------------------------------
                public DataSet FillDropDownhowStudentDetailsQualificationDetails(string idno)
                {
                    //int status = Convert.ToInt32(CustomStatus.Others);s
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_ShowStudentDetailsQualificationDetails", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.FeesHeadController.AdmInsertFeeDeduction-> " + ex.ToString());
                    }
                    return ds;
                }
                //------------------------------------------------------------------------------------------------------------------------
                public int UpdateStudentOtherInformation_CRESCENT(Student objStudent, int usertype)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Update Student Local Address
                        objParams = new SqlParameter[20];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_BIRTH_PLACE", objStudent.BirthPlace);
                        objParams[2] = new SqlParameter("@P_MTOUNGENO", objStudent.MToungeNo);
                        objParams[3] = new SqlParameter("@P_OTHER_LANGUAGE", objStudent.OtherLanguage);
                        objParams[4] = new SqlParameter("@P_BIRTH_VILLAGE", objStudent.Birthvillage);
                        objParams[5] = new SqlParameter("@P_BIRTH_TALUKA", objStudent.Birthtaluka);
                        objParams[6] = new SqlParameter("@P_BIRTH_DISTRICT", objStudent.Birthdistrict);
                        objParams[7] = new SqlParameter("@P_BIRTH_STATE", objStudent.Birthdistate);
                        objParams[8] = new SqlParameter("@P_BIRTH_PINCODE", objStudent.BirthPinCode);
                        objParams[9] = new SqlParameter("@P_HEIGHT", objStudent.Height);
                        objParams[10] = new SqlParameter("@P_WEIGHT", objStudent.Weight);
                        objParams[11] = new SqlParameter("@P_URBAN", objStudent.Urban);
                        objParams[12] = new SqlParameter("@P_IDENTI_MARK", objStudent.IdentyMark);
                        objParams[13] = new SqlParameter("@P_BANKNO", objStudent.BankNo);
                        objParams[14] = new SqlParameter("@P_ACC_NO", objStudent.AccNo);
                        objParams[15] = new SqlParameter("@P_PASSPORTNO", objStudent.PassportNo);
                        objParams[16] = new SqlParameter("@P_USER_TYPE", usertype);
                        //Added by Nikhil V.Lambe on 10/02/2021
                        objParams[17] = new SqlParameter("@P_IFSC", objStudent.IfscCode);
                        objParams[18] = new SqlParameter("@P_BANKADDRESS", objStudent.BankAddress);
                        //-------------------------------------------------------------------------
                        objParams[19] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[19].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUD_OTHER_INFORMATION", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentDASAInformation-> " + ex.ToString());
                    }

                    return retStatus;

                }
                //------------------------------------------------------------------------------------------------------------------------
                public int UpdateStudentWorkexp_CRESCENT(Student objStudent, int expno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[7];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_WORK_EXP", objStudent.WorkExp);
                        objParams[2] = new SqlParameter("@P_ORG_LAST_WORK", objStudent.OrgLastWork);
                        objParams[3] = new SqlParameter("@P_DESIGNATION", objStudent.Designation);
                        objParams[4] = new SqlParameter("@P_EXPNO", expno);
                        objParams[5] = new SqlParameter("@P_EPFNO", objStudent.EpfNo);
                        objParams[6] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[6].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_INS_STUD_WORK_INFORMATION", objParams, true);
                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        }
                        else if (Convert.ToInt32(ret) == 2)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }

                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentDASAInformation-> " + ex.ToString());
                    }

                    return retStatus;
                }
                //------------------------------------------------------------------------------------------------------------------------
                public DataSet GetStudentExpDetails_CRESCENT(int idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_EXPDETAILS_BYID", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }
                //------------------------------------------------------------------------------------------------------------------------
                public DataSet GetStudentSportDetails_CRESCENT(int idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_SPORT_DETAILS_BYID", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentSportDetails->" + ex.ToString());
                    }
                    return ds;
                }
                //------------------------------------------------------------------------------------------------------------------------

                //------------------------------------------------------------------------------------------------------------------------
                public int DeleteSport_CRESCENT(int idno, int SportSrno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SRNO", SportSrno);
                        objParams[2] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[2].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_DELETE_SPORT_INFORMATION", objParams, true);
                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordDeleted);
                        }

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.DeleteSport-> " + ex.ToString());
                    }

                    return retStatus;
                }
                //------------------------------------------------------------------------------------------------------------------------
                /// <summary>
                /// Added by DIleep Kare
                /// on 28.03.2022
                /// </summary>
                /// <param name="sessionno"></param>
                /// <param name="schemeno"></param>
                /// <param name="semesterno"></param>
                /// <param name="courseno"></param>
                /// <returns></returns>
                public DataSet Get_Coursewise_Section_Allotment_Report(int sessionno, int schemeno, int semesterno, int courseno, int OrgID,int college_id)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_COURSENO", courseno);
                        objParams[4] = new SqlParameter("@P_ORGANIZATIONID", OrgID);
                        objParams[5] = new SqlParameter("@P_COLLEGE_ID", college_id);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_COURSEWISE_SECTION_ALLOTMENT_REPORT_EXCEL", objParams);
                    }
                    catch
                    {
                        throw;
                    }
                    return ds;
                }
                public int UpdateStudentAdmissionStatus_CRESCENT(Student objStudent, int status, string reason, int admstatus)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[8];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_UANO", objStudent.Uano);
                        objParams[2] = new SqlParameter("@P_IP_ADDRESS", objStudent.IPADDRESS);
                        objParams[3] = new SqlParameter("@P_REMARK", objStudent.Remark);
                        objParams[4] = new SqlParameter("@P_STATUS", status);
                        objParams[5] = new SqlParameter("@P_REASON", reason);
                        objParams[6] = new SqlParameter("@P_ADMSTATUS", admstatus);
                        objParams[7] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[7].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUDENT_ADM_STATUS", objParams, true);

                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentPersonalInformation-> " + ex.ToString());
                    }

                    return retStatus;

                }

                public DataSet LookupLVDocumentList(int idno)
                {
                    //int status = Convert.ToInt32(CustomStatus.Others);s
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;



                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_LV_DOCUMENTLIST", objParams);



                    }
                    catch (Exception ex)
                    {



                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.FeesHeadController.AdmInsertFeeDeduction-> " + ex.ToString());
                    }
                    return ds;
                }

                public int UpdateStudentSportDetails_CRESCENT(Student objStudent, int SrNo)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_SPORT_NAME", objStudent.SportName);
                        objParams[2] = new SqlParameter("@P_SPORT_LEVEL", objStudent.SportLevel);
                        objParams[3] = new SqlParameter("@P_SPORT_ACHIEVE", objStudent.SportAchieve);
                        objParams[4] = new SqlParameter("@P_SRNO", SrNo);
                        objParams[5] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[5].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_INS_STUD_SPORT_INFORMATION", objParams, true);
                        if (Convert.ToInt32(ret) == 1)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        }
                        else if (Convert.ToInt32(ret) == 2)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        }



                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentSportDetails_CRESCENT-> " + ex.ToString());
                    }



                    return retStatus;
                }

                public DataSet GetStudentListForAdmitCard(int degreeno, int branchno, int semesterno, int prev_status, int sessionno, int colg, int examno, int OrgID)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[8];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_PREV_STATUS", prev_status);
                        objParams[4] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[5] = new SqlParameter("@P_COLLEGE_ID", colg);
                        objParams[6] = new SqlParameter("@P_EXAMNO", examno);   // added on 06-03-2020 by Vaishali
                        objParams[7] = new SqlParameter("@P_OrgID", OrgID);
                        // objParams[6] = new SqlParameter("@P_ADMBTCH", admbatch);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_ADMIT_CARD", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }

                public int InsAdmitCardLog(int degreeNo, int branchno, string ids, string ipadd, int userid, string Remark, int SESSIONNO, int semesterno, DateTime audit_date, int OrgId)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[10];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeNo);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_IDNOS", ids);
                        objParams[3] = new SqlParameter("@P_IPADDRSS", ipadd);
                        objParams[4] = new SqlParameter("@P_USER_ID", userid);
                        objParams[5] = new SqlParameter("@P_REMARK", Remark);   //Dileep; 24-01-2020
                        objParams[6] = new SqlParameter("@P_SESSIONNO", SESSIONNO);//Dileep;24-01-2020
                        objParams[7] = new SqlParameter("@P_SEMESTERNO", semesterno);//Dileep;24-01-2020
                        objParams[8] = new SqlParameter("@P_AUDIT_DATE", audit_date);//Dileep;24-01-2020
                        objParams[9] = new SqlParameter("@P_OrgID ", OrgId);
                        object ret = objSQLHelper.ExecuteDataSetSP("PKG_ADMITCARD_LOG", objParams);
                        if (ret != null)
                            if (ret.ToString() != "-99")
                                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.InsGradeTranscriptLog-> " + ex.ToString());
                    }

                    return retStatus;
                }

                public DataSet GetAllStudentDetentionCancelExcel(int session)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[1];
                        sqlParams[0] = new SqlParameter("@P_SESSIONNO", session);
                        ds = objDataAccess.ExecuteDataSetSP("PKG_ACD_CANCEL_DETENTION_STUDENT_LIST_EXCEL", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.StudentController.GetAllStudentDetentionProEXCEL() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }
                public DataTableReader GetStudentCompleteDetails(int idno)
                {
                    DataTableReader dtr = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        dtr = objSQLHelper.ExecuteDataSetSP("PKG_GET_STUDENT_COMPLETEDETAILS_BY_IDNO", objParams).Tables[0].CreateDataReader();

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentCompleteDetails->" + ex.ToString());
                    }
                    return dtr;
                }


                public DataSet ShowBulkInstallmentStudents(int clg, int degree, int branch, int sem, int ptype, string reciepttype)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[6];
                        sqlParams[0] = new SqlParameter("@P_COLLEGE_ID", clg);
                        sqlParams[1] = new SqlParameter("@P_DEGREENO", degree);
                        sqlParams[2] = new SqlParameter("@P_BRANCHNO", branch);
                        sqlParams[3] = new SqlParameter("@P_SEMESTERNO", sem);
                        sqlParams[4] = new SqlParameter("@P_PTYPE", ptype);
                        sqlParams[5] = new SqlParameter("@P_RECIEPT_CODE", reciepttype);
                        ds = objDataAccess.ExecuteDataSetSP("PKG_ACD_GET_BULK_INSTALLMENT_DETAILS", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.StudentController.GetAllStudentDetentionProEXCEL() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }


                //public DataSet GetStudentDetailsForPublishresult(int sessionNo, int schemeNo, int semesterno, int prev_status, int College_ID)
                //{
                //    DataSet ds = null;

                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        objParams = new SqlParameter[5];
                //        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionNo);
                //        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeNo);
                //        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                //        // objParams[3] = new SqlParameter("@P_EXAMTYPE", examtype); // added on 15-06-2020 by Vaishali

                //        //objParams[3] = new SqlParameter("@P_SECTIONNO", sectionNo);
                //        //objParams[4] = new SqlParameter("@P_EXAM", exam);

                //        objParams[3] = new SqlParameter("@P_PREV_STATUS", prev_status);
                //        objParams[4] = new SqlParameter("@P_COLLEGE_ID", College_ID);

                //        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_STUDENT_FOR_PUBLISHRESULT", objParams);
                //    }
                //    catch (Exception ex)
                //    {

                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetailsForPublishresult()-> " + ex.ToString());
                //    }
                //    return ds;
                //}
                /// <summary>
                /// Added By RAHUL M on 28.09.2023
                /// </summary>
                /// <param name="ddlValue"></param>
                /// <param name="dt"></param>
                /// <returns></returns>
                public int StudentBulkPhotoUpdate(int ddlValue, DataTable dt, int UploadBy)
                    {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                        {
                        // if (!(photo == null))
                        // {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_ID", ddlValue);
                        objParams[1] = new SqlParameter("@P_STUD_BULK_UPDATE", dt);
                        objParams[2] = new SqlParameter("@P_UPLOADBY", UploadBy);
                        if (objSQLHelper.ExecuteNonQuerySP("STUD_BULK_PHOTO_UPDATE", objParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        // }
                        }
                    catch
                        {

                        throw;
                        }

                    return retStatus;
                    }

                public DataSet GetWithHeldReport(int sessionno, int degree, int branch, int scheme, int sem)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[5];

                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_DEGREENO", degree);
                        objParams[2] = new SqlParameter("@P_BRANCHNO", branch);
                        objParams[3] = new SqlParameter("@P_SCHEMENO", scheme);
                        objParams[4] = new SqlParameter("@P_SEMESTERNO", sem);
                        // objParams[5] = new SqlParameter("@P_IDNO", idno);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_REPORT_WITHHELD_DETAILS", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.GetWithHeldData --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                public int UpadteWithHeldEntryRelease(Student_Acd objStud)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {

                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[] 
                        {
                        //update

                             new SqlParameter("@P_SESSIONNO",objStud.SessionNo),
                             new SqlParameter("@P_IDNO",objStud.IdNo),
                             new SqlParameter("@P_SEMESTERNO",objStud.SemesterNo),
                                                                   
                        };


                        if (objSQLHelper.ExecuteNonQuerySP("PKG_UPD_WITHHELD_RELEASE", sqlParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessEntities.StudentController.UpadteWithHeldEntryRelease() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return retStatus;
                }

                public DataSet GetStudentDetailsForPublishresult(int sessionNo, int degreeno, int semesterno, int prev_status, int College_ID)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionNo);
                        // objParams[1] = new SqlParameter("@P_SCHEMENO", schemeNo);                
                        objParams[1] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        // objParams[3] = new SqlParameter("@P_EXAMTYPE", examtype); // added on 15-06-2020 by Vaishali

                        //objParams[3] = new SqlParameter("@P_SECTIONNO", sectionNo);
                        //objParams[4] = new SqlParameter("@P_EXAM", exam);

                        objParams[3] = new SqlParameter("@P_PREV_STATUS", prev_status);
                        objParams[4] = new SqlParameter("@P_COLLEGE_ID", College_ID);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_STUDENT_FOR_PUBLISHRESULT", objParams);
                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetailsForPublishresult()-> " + ex.ToString());
                    }
                    return ds;
                }
                public DataSet GetStudentFailExamSubjectSNew_sem(int idno, int sessionno, int schemeno, int degreeno, int branchno, int semesterno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);

                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[4] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[5] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        // ds = objSQLHelper.ExecuteDataSetSP("PKG_EXAM_RESULT_FAIL_LIST_BACKLOG_SINGLE_STUD_NEW", objParams);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_EXAM_RESULT_FAIL_LIST_BACKLOG_SINGLE_STUD_NEW_ATLAS", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetStudentFailExamSubjectSNew_sem(int idno, int sessionno, int schemeno, int degreeno, int branchno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        //objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[4] = new SqlParameter("@P_SCHEMENO", schemeno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_EXAM_RESULT_FAIL_LIST_BACKLOG_SINGLE_STUD_NEW", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }


                /// <summary>
                /// Adeed by Rishabh on 29/04/2022 for Searching student details - Admission Cancel
                /// </summary>
                /// <param name="search"></param>
                /// <param name="category"></param>
                /// <returns></returns>
                public DataSet RetrieveStudentDetailsAdmCancel_StudInfo(string search, string category, int uano)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_SEARCHSTRING", search);
                        objParams[1] = new SqlParameter("@P_SEARCH", category);
                        objParams[2] = new SqlParameter("@P_UANO", uano);       //Added By Ruchika on 01.09.2022

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_SEARCH_STUDENT_NEW_DESIGN_ADMCANCEL_STUD_INFO", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentDetailsAdmCancel-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet RetrieveStudentDetailsAdmCancel(string search, string category,int uano)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_SEARCHSTRING", search);
                        objParams[1] = new SqlParameter("@P_SEARCH", category);
                        objParams[2] = new SqlParameter("@P_UA_NO", uano);           //Added by sachin Lohakare 25-04-2023


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_SEARCH_STUDENT_NEW_DESIGN_ADMCANCEL", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentDetailsAdmCancel-> " + ex.ToString());
                    }
                    return ds;
                }


                public DataSet RetrieveStudentDetailsAdmCancel(string search, string category)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_SEARCHSTRING", search);
                        objParams[1] = new SqlParameter("@P_SEARCH", category);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_SEARCH_STUDENT_NEW_DESIGN_ADMCANCEL", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentDetailsAdmCancel-> " + ex.ToString());
                    }
                    return ds;
                }

                public string AddStudent(Student objStudent, StudentAddress objStudAddress, StudentPhoto objSPhoto, GEC_Student objStud, string RRNO, int session, int SupervisorName, int EmpIdGuide, int StatusCat, string PerEmail)
                {
                    string retStatus = string.Empty;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Add New student
                        objParams = new SqlParameter[77];
                        objParams[0] = new SqlParameter("@P_rollNo", objStudent.RollNo);
                        objParams[1] = new SqlParameter("@P_sectionNo", objStudent.SectionNo);
                        objParams[2] = new SqlParameter("@P_studName", objStudent.StudName);
                        objParams[3] = new SqlParameter("@P_fatherName", objStudent.FatherName);
                        objParams[4] = new SqlParameter("@P_motherName ", objStudent.MotherName);
                        objParams[5] = new SqlParameter("@P_dob", objStudent.Dob);
                        objParams[6] = new SqlParameter("@P_sex ", objStudent.Sex);
                        objParams[7] = new SqlParameter("@P_religionNo", objStudent.ReligionNo);
                        objParams[8] = new SqlParameter("@P_married", objStudent.Married);
                        objParams[9] = new SqlParameter("@P_nationalityNo", objStudent.NationalityNo);
                        objParams[10] = new SqlParameter("@P_categoryNo", objStudent.CategoryNo);
                        objParams[11] = new SqlParameter("@P_admDate", objStudent.AdmDate);
                        objParams[12] = new SqlParameter("@P_hosteler", objStudent.Hosteler);
                        objParams[13] = new SqlParameter("@P_degreeNo", objStudent.DegreeNo);
                        objParams[14] = new SqlParameter("@P_admbatch", objStudent.AdmBatch);
                        objParams[15] = new SqlParameter("@P_branchNo", objStudent.BranchNo);
                        objParams[16] = new SqlParameter("@P_Year", objStudent.Year);
                        objParams[17] = new SqlParameter("@P_semesterNo", objStudent.SemesterNo);
                        objParams[18] = new SqlParameter("@P_pType", objStudent.PType);
                        objParams[19] = new SqlParameter("@P_stateNo", objStudent.StateNo);
                        objParams[20] = new SqlParameter("@P_pAddress", objStudAddress.PADDRESS);
                        objParams[21] = new SqlParameter("@P_pCity", objStudAddress.PCITY);
                        objParams[22] = new SqlParameter("@P_pState", objStudAddress.PSTATE);
                        objParams[23] = new SqlParameter("@P_PPinCode", objStudAddress.PPINCODE);
                        objParams[24] = new SqlParameter("@P_PTELEPHONE", objStudAddress.PTELEPHONE);
                        objParams[25] = new SqlParameter("@P_college_Code", objStudent.CollegeCode);
                        objParams[26] = new SqlParameter("@P_regNo", objStudent.RegNo);

                        if (objSPhoto.Photo1 == null)
                            objParams[27] = new SqlParameter("@P_PHOTO", DBNull.Value);
                        else
                            objParams[27] = new SqlParameter("@P_PHOTO", objSPhoto.Photo1);
                        objParams[27].SqlDbType = SqlDbType.Image;

                        objParams[28] = new SqlParameter("@P_IDTYPENO", objStudent.IdType);
                        objParams[29] = new SqlParameter("@P_EXAMPTYPE", objStudent.ExamPtype);
                        //GCET Details..
                        //objParams[30] = new SqlParameter("@P_GCETROLLNO", objStud.GECTROLLNO);
                        //objParams[31] = new SqlParameter("@P_GCETRANK", objStud.GCETRANK);
                        objParams[30] = new SqlParameter("@P_ADMROUNDNO", objStudent.AdmroundNo);
                        objParams[31] = new SqlParameter("@P_UANO", objStudent.Uano);
                        objParams[32] = new SqlParameter("@P_IPADDRESS", objStudent.IPADDRESS);
                        //add AdmCaste and current session
                        objParams[33] = new SqlParameter("@P_ADMCATEGORYNO", objStudent.AdmCategoryNo);
                        //objParams[34] = new SqlParameter("@P_SESSIONNO", objStudent.SessionNo);
                        //ENTRANCE EXAM
                        objParams[34] = new SqlParameter("@P_QEXMROLLNO", objStudent.QexmRollNo);
                        objParams[35] = new SqlParameter("@P_STATE_RANK", objStudent.STATERANK);
                        objParams[36] = new SqlParameter("@P_ALL_INDIA_RANK", objStudent.ALLINDIARANK);
                        objParams[37] = new SqlParameter("@P_YEAR_OF_EXAM", objStudent.YearOfExam);
                        objParams[38] = new SqlParameter("@P_PERCENTAGE", objStudent.Percentage);
                        objParams[39] = new SqlParameter("@P_PERCENTILE", objStudent.PERCENTILE);
                        objParams[40] = new SqlParameter("@P_QUALIFYNO", objStudent.QUALIFYNO);

                        objParams[41] = new SqlParameter("@P_EMILID", objStudent.EmailID);
                        objParams[42] = new SqlParameter("@P_LADDRESS", objStudAddress.LADDRESS);
                        objParams[43] = new SqlParameter("@P_LTELEPHONE", objStudAddress.LTELEPHONE);
                        objParams[44] = new SqlParameter("@P_LMOBILE", objStudAddress.LMOBILE);
                        objParams[45] = new SqlParameter("@P_LEMAIL", objStudAddress.LEMAIL);
                        objParams[46] = new SqlParameter("@P_ADMQUOTANO", objStudent.ADMQUOTANO);
                        objParams[47] = new SqlParameter("@P_BLOODGRPNO", objStudent.BloodGroupNo);
                        objParams[48] = new SqlParameter("@P_LCITY", objStudAddress.LCITY);
                        objParams[49] = new SqlParameter("@P_LSTATE", objStudAddress.LSTATE);
                        objParams[50] = new SqlParameter("@P_GATESCHOLARSHIP", objStudent.GetScholarship);
                        objParams[51] = new SqlParameter("@P_PHDSTATUS", objStudent.PhdStatus);
                        objParams[52] = new SqlParameter("@P_PHDSUPERVISORNO", objStudent.PhdSupervisorNo);
                        objParams[53] = new SqlParameter("@P_PHDCOSUPERVISORNO1", objStudent.PhdCoSupervisorNo1);
                        objParams[54] = new SqlParameter("@P_PHDCOSUPERVISORNO2", objStudent.PhdCoSupervisorNo2);
                        objParams[55] = new SqlParameter("@P_TYPESUPERVISOR", objStudent.TypeSupervisorNo);
                        objParams[56] = new SqlParameter("@P_TYPECOSUPERVISOR1", objStudent.TypeCoSupervisorNo1);
                        objParams[57] = new SqlParameter("@P_TYPECOSUPERVISOR2", objStudent.TypeCoSupervisorNo2);
                        objParams[58] = new SqlParameter("@P_NET", objStudent.Net);

                        if (objSPhoto.SignPhoto == null)
                            objParams[59] = new SqlParameter("@P_SIGNPHOTO", DBNull.Value);
                        else
                            objParams[59] = new SqlParameter("@P_SIGNPHOTO", objSPhoto.SignPhoto);
                        objParams[59].SqlDbType = SqlDbType.Image;
                        objParams[60] = new SqlParameter("@P_PH", objStudent.PH);
                        objParams[61] = new SqlParameter("@P_TYPEOFPH", objStudent.Physical_Handicap);
                        objParams[62] = new SqlParameter("@P_TYPEOFDISABLE", objStudent.TypeofDisablity);
                        objParams[63] = new SqlParameter("@P_SPECIAL", objStudent.Special);
                        objParams[64] = new SqlParameter("@P_DOCUMENTS", objStudent.DOCUMENTS);
                        objParams[65] = new SqlParameter("@P_AADHARNO", objStudent.AadharCardNo);
                        objParams[66] = new SqlParameter("@P_Admremark", objStudent.Remark);
                        objParams[67] = new SqlParameter("@P_PENDING_DOCUMENTS", objStudent.PENDING_DOCUMENTS);
                        objParams[68] = new SqlParameter("@P_INSTITUTENAME", objStudent.PhdInstitutename);    //  -- on 15042019
                        objParams[69] = new SqlParameter("@P_NOC", objStudent.PhdNoc);
                        objParams[70] = new SqlParameter("@P_RRNO", RRNO);
                        objParams[71] = new SqlParameter("@P_SESSION", objStudent.SessionNo);
                        objParams[72] = new SqlParameter("@P_SUPNAME", SupervisorName);
                        objParams[73] = new SqlParameter("@P_EMPIDGUIDE", EmpIdGuide);
                        objParams[74] = new SqlParameter("@P_STATUSCAT", StatusCat);
                        objParams[75] = new SqlParameter("@P_PEREMAIL", PerEmail);
                        objParams[76] = new SqlParameter("@P_REGOUT", SqlDbType.NVarChar, 25);
                        objParams[76].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_STUDENT_INFO_PHD", objParams, true);

                        //if (ret.ToString().Equals("-99"))
                        //    retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        //else
                        //    retStatus = Convert.ToInt32(ret);
                        retStatus = ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = "0";
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddStudent-> " + ex.ToString());
                    }

                    return retStatus;
                }


                public DataSet RetrieveStudentDetailsNewForPHDOnly(string search, string category)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_SEARCHSTRING", search);
                        objParams[1] = new SqlParameter("@P_SEARCH", category);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_SEARCH_STUDENT_NEW_DESIGN_FOR_PHD_STUD_ONLY", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.RetrieveEmpDetails-> " + ex.ToString());
                    }
                    return ds;
                }



                public DataSet GetJointlySinglyCount(int uano)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_SUPERVISIORNO", uano);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_PHD_JOINTLY_SINGLY", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForScheme-> " + ex.ToString());
                    }

                    return ds;
                }



                public string UpdateDGCSupervisorOutside(Student objStudent, string outsidmem, string dgcstatus, int outsidmemno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    //int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update Student
                        //objParams = new SqlParameter[15];
                        objParams = new SqlParameter[18];
                        //First Add Student Parameter
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_SUPERVISORNO", objStudent.SupervisorNo);
                        objParams[2] = new SqlParameter("@P_SUPERVISORMEMBERNO", objStudent.SupervisormemberNo);
                        objParams[3] = new SqlParameter("@P_JOINTSUPERVISORNO", objStudent.JoinsupervisorNo);
                        objParams[4] = new SqlParameter("@P_JOINSUPERVISORMEMBERNO", objStudent.JoinsupervisormemberNo);
                        objParams[5] = new SqlParameter("@P_INSTITUTEFACULTYNO", objStudent.InstitutefacultyNo);
                        objParams[6] = new SqlParameter("@P_INSTITUTEFACMEMBERNO", objStudent.InstitutefacmemberNo);
                        objParams[7] = new SqlParameter("@P_DRCNO", objStudent.DrcNo);
                        objParams[8] = new SqlParameter("@P_DRCMEMBERNO", objStudent.DrcmemberNo);
                        objParams[9] = new SqlParameter("@P_DRCCHNO", objStudent.DrcChairNo);
                        objParams[10] = new SqlParameter("@P_DRCCHMEMBERNO", objStudent.DrcChairmemberNo);
                        objParams[11] = new SqlParameter("@P_COLLEGE_CODE", objStudent.CollegeCode);
                        objParams[12] = new SqlParameter("@P_OUTSIDMEM", outsidmem);
                        objParams[13] = new SqlParameter("@P_DGCSTATUS", dgcstatus);
                        //ADDED FOR EXTRA SUPERVISOR
                        objParams[14] = new SqlParameter("@P_SECONDJOINTSUPERVISORNO", objStudent.Secondjoinsupervisorno);
                        objParams[15] = new SqlParameter("@P_SECONDJOINSUPERVISORMEMBERNO", objStudent.Secondjoinsupervisormemberno);
                        objParams[16] = new SqlParameter("@P_OUTSIDMEMNO", outsidmemno);
                        objParams[17] = new SqlParameter("@P_OUT", SqlDbType.Int);

                        objParams[17].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_PHD_SUPERVISOR_SP_UPD_DGCMEMBER_OUTMEM", objParams, true);

                        if (objStudent.LastQualifiedExams != null)
                        {
                            foreach (QualifiedExam qualExam in objStudent.LastQualifiedExams)
                            {
                                this.UpdateLastQualExams(qualExam);
                            }
                        }
                        retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        return ret.ToString();


                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateDGCSupervisorOutside-> " + ex.ToString());
                    }
                }



                public string UpdateDeanStatus(Student objStudent)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update drc 
                        objParams = new SqlParameter[2];

                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[1].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_PHD_DEAN_UPDATE", objParams, true);

                        retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        return ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent-> " + ex.ToString());
                    }
                }
                public string RejectSupervisorStatus(Student objStudent, string Remark)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update drc 
                        objParams = new SqlParameter[5];

                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_PHDSUPERVISORNO", objStudent.PhdSupervisorNo);
                        objParams[2] = new SqlParameter("@P_PHDCOSUPERVISORNO1", objStudent.PhdCoSupervisorNo1);
                        objParams[3] = new SqlParameter("@P_REMARK", Remark);
                        objParams[4] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[4].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_PHD_SUPERVISOR_REJECT", objParams, true);

                        retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        return ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RejectSupervisorStatus-> " + ex.ToString());
                    }
                }

                /// <summary>
                /// Added By Dileep Kare on 02.09.2021
                /// </summary>
                /// <param name="admno"></param>
                /// <param name="degreeno"></param>
                /// <param name="branchno"></param>
                /// <param name="semester"></param>
                /// <param name="idtype"></param>
                /// <returns></returns>
                public DataSet GetStudentCount(int college_id, int admno, int degreeno, int branchno, int semester, int idtype, int type)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[7];
                        objParams[0] = new SqlParameter("@P_COLLEGE_ID", college_id);
                        objParams[1] = new SqlParameter("@P_ADMBATCHNO", admno);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[4] = new SqlParameter("@P_SEMESTERNO", semester);
                        objParams[5] = new SqlParameter("@P_IDTYPE", idtype);
                        objParams[6] = new SqlParameter("@P_TYPE", type);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_STUDENT_GET_STUDENT_COUNT", objParams);
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentCount-> " + ex.ToString());
                    }
                    return ds;
                }
                //-------------------------------------------------------------------------------------------------------------------------------
                /// <summary>
                /// Added BY Dileep Kare on 02.09.2021
                /// </summary>
                /// <param name="admno"></param>
                /// <param name="degreeno"></param>
                /// <param name="branchno"></param>
                /// <param name="semester"></param>
                /// <param name="idtype"></param>
                /// <returns></returns>
                public DataSet GetStudentPhotoAndSign(int college_id, int admno, int degreeno, int branchno, int semester, int idtype, int type)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[7];
                        objParams[0] = new SqlParameter("@P_COLLEGE_ID", college_id);
                        objParams[1] = new SqlParameter("@P_ADMBATCHNO", admno);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[4] = new SqlParameter("@P_SEMESTERNO", semester);
                        objParams[5] = new SqlParameter("@P_IDTYPE", idtype);
                        objParams[6] = new SqlParameter("@P_TYPE", type);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_STUDENT_GET_STUDENT_PHOTO_AND_SIGN", objParams);
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentPhotoAndSign-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetCourseFor_Reval(int idno, int sessionno, int semesterno, int select)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_OPERATION_FLAG ", select);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_COURSE_FOR_REVALUATION", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }
                /// <summary>
                /// Added by Rohit More on 26.05.2022
                /// </summary>
                /// <param name="idno"></param>
                /// <param name="sessionno"></param>
                /// <param name="schemeno"></param>
                /// <param name="degreeno"></param>
                /// <param name="branchno"></param>
                /// <returns></returns>
                public DataSet GetStudentFailExamSubjectSNew_sem_RedoCourse(int idno, int sessionno, int schemeno, int degreeno, int branchno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        //objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[4] = new SqlParameter("@P_SCHEMENO", schemeno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_EXAM_RESULT_FAIL_LIST_REDO_REGISTRATION", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }

                //added by pooja
                public DataSet RetrieveStuddetprospectusno(string search, string category)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_SEARCHSTRING", search);
                        objParams[1] = new SqlParameter("@P_SEARCH", category);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_PROSPECTUSNO_DETAILS", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.RetrieveEmpDetails-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet RetrieveStudentDetailsFeeCollection(string search, string category)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_SEARCHSTRING", search);
                        objParams[1] = new SqlParameter("@P_SEARCH", category);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_SEARCH_STUDENT_FEECOLLECTION", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.RetrieveStudentDetailsFeeCollection-> " + ex.ToString());
                    }
                    return ds;
                }

                /// <summary>
                /// Added By SP - 01 june 2022
                /// </summary>
                /// <param name="sem"></param>
                /// <param name="batchno"></param>
                /// <param name="degree"></param>
                /// <param name="ptype"></param>
                /// <param name="branch"></param>
                /// <param name="colid"></param>
                /// <returns></returns>
                public DataSet GetStandardFees(int sem, int batchno, int degree, int ptype, int branch, int colid)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] sqlParams = new SqlParameter[]
                { 

                    new SqlParameter("@P_SEMESTERNO",sem),
                    new SqlParameter("@P_BATCHNO",batchno),
                    new SqlParameter("@P_DEGREENO", degree),
                    new SqlParameter("@P_PAYTYPENO", ptype),
                    new SqlParameter("@P_BRANCHNO", branch),
                    new SqlParameter("@P_COLLEGE_ID", colid)
                };

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_STD_FEES_DETAILS", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessEntities.AdmissionCancellationController.SearchStudents() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                public DataSet Get_ProspectusEntryExcelReport(int admBatch)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[] 
                        {                     
                            new SqlParameter("@P_ADMBATCH", admBatch)                    
                        };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_ACD_PROSPECTUS_DETAILS_EXCEL_REPORT", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.FeeCollectionController.Get_Student_Scholership_Summary_Report() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                public DataSet GetUserExamninationData(int userno, int degree, int branch)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                     { 
                    new SqlParameter("@P_USERNO",userno),
                    //new SqlParameter("@P_PROGRAMME_CODE",programmeCode) //Added by Nikhil L. on 16/08/2021 for getting records programme type wise.
                    new SqlParameter("@P_DEGREE",degree),
                    new SqlParameter("@P_BRANCH",branch)
             
                   
                   };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_ACAD_USEREXAMINATION_DETAILS", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.StudentController.GetUserExamninationData() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                public DataSet GetUserExamninationDataForPG(int userno, int degree, int branch)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                     { 
                    new SqlParameter("@P_USERNO",userno),
                    new SqlParameter("@P_DEGREE",degree),
                     new SqlParameter("@P_BRANCH",branch)               
                   };
                        ds = objDataAccess.ExecuteDataSetSP("PKG_ACAD_USEREXAMINATION_DETAILS_PG", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.StudentController.GetUserExamninationDataForPG() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                public int Update_OA_MarkEntry_Verification(int userno, int stlqno, string obtmarks, string maxmarks, string per, DateTime dob, int degree, int branch, int verifyBy, string ipAddress, decimal oldObtained, decimal oldTotalMarks
                    , decimal oldPercent, string remarkSingle, string remarkMult, int cancel, string cancelRemark, int compSub, string otherSub)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[20];
                        objParams[0] = new SqlParameter("@P_USERNO", userno);
                        objParams[1] = new SqlParameter("@P_STLQNO", stlqno);
                        objParams[2] = new SqlParameter("@P_OBTMARKS", obtmarks);
                        objParams[3] = new SqlParameter("@P_MAXMARKS", maxmarks);
                        objParams[4] = new SqlParameter("@P_PER", per);
                        objParams[5] = new SqlParameter("@P_DOB", dob);
                        objParams[6] = new SqlParameter("@P_DEGREE", degree);
                        objParams[7] = new SqlParameter("@P_BRANCH", branch);
                        objParams[8] = new SqlParameter("@P_VERIFY_BY", verifyBy);
                        objParams[9] = new SqlParameter("@P_IPADDRESS", ipAddress);
                        objParams[10] = new SqlParameter("@P_OLD_OBTAINED_MARKS", oldObtained);
                        objParams[11] = new SqlParameter("@P_OLD_TOTAL_MARKS", oldTotalMarks);
                        objParams[12] = new SqlParameter("@P_OLD_PERCENT", oldPercent);
                        objParams[13] = new SqlParameter("@P_REMARK_SINGLE", remarkSingle);
                        objParams[14] = new SqlParameter("@P_REMARK_MULTIPLE", remarkMult);
                        objParams[15] = new SqlParameter("@P_IS_CANCEL", cancel);
                        objParams[16] = new SqlParameter("@P_CANCEL_REMARK", cancelRemark);
                        objParams[17] = new SqlParameter("@P_COMP_SUB", compSub);
                        objParams[18] = new SqlParameter("@P_OTHER_SUB", otherSub);
                        objParams[19] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[19].Direction = ParameterDirection.Output;

                        object ret = Convert.IsDBNull(objSQLHelper.ExecuteNonQuerySP("PKG_UPDATE_OA_MARKENTRY_VERIFICATION", objParams, true));

                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.ACADEMIC.ANSWERSHEET.InsertUpdateStudentDocSubmitLog-> " + ex.ToString());
                    }

                    return retStatus;
                }
                public DataSet getstudbyUsernameOA(string idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_USERNO", idno);

                        //ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_PROSPECT_BYID", objParams).Tables[0].CreateDataReader();
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_ONLINE_ADM_BY_USERNO", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }

                //added by prafull muke for reval_result_details on 16062022

                public DataSet GetSemesterHistoryDetailsForRevalResult(int idno, int sessionno, int semesterno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objsqlhelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objparams = new SqlParameter[3];
                        objparams[0] = new SqlParameter("@P_IDNO", idno);
                        objparams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objparams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);

                        ds = objsqlhelper.ExecuteDataSetSP("PKG_ACD_GET_SEMESTERWISE_STUD_DETAILS_REVAL", objparams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BUSINESSLAYER.BUSINESSLOGIC.STUDENTCONTROLLER.GETSESSIONWISEMARKDETAILS -->" + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                public DataSet GetStandardFeesDetails(int CollegeID, int DegreeNo, int BranchNo, string RECIEPT_CODE, int AdmBatch, int Paytype, int OrgID)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objsqlhelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objparams = new SqlParameter[7];
                        objparams[0] = new SqlParameter("@P_COLLEGEID", CollegeID);
                        objparams[1] = new SqlParameter("@P_DEGREENO", DegreeNo);
                        objparams[2] = new SqlParameter("@P_BRANCHNO", BranchNo);
                        objparams[3] = new SqlParameter("@P_RECEIPTTYPE", RECIEPT_CODE);
                        objparams[4] = new SqlParameter("@P_ADMBATCH", AdmBatch);
                        objparams[5] = new SqlParameter("@P_PAYTYPE", Paytype);
                        objparams[6] = new SqlParameter("@P_ORGID", OrgID);

                        ds = objsqlhelper.ExecuteDataSetSP("PKG_ACD_GET_STANDARDFEES_DETAILS", objparams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BUSINESSLAYER.BUSINESSLOGIC.STUDENTCONTROLLER.GETSESSIONWISEMARKDETAILS -->" + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }
                public DataSet GetTemplateDetails_CRESCENT(int templatetype)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@TEMPLATE_TYPE", templatetype);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_SMS_TEMPLATE_VARIABLE", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetVariableTemplateDetails_CRESCENT(int templatetype)
                {
                    DataSet Bs = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@TEMPLATE_TYPE", templatetype);
                        Bs = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_SMS_TEMPLATE", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return Bs;
                }

                public DataSet GetStudentRedoRegisteredCourses(int idno, int sessionno, int schemeno, int degreeno, int branchno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        //objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[4] = new SqlParameter("@P_SCHEMENO", schemeno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_REDO_REGISTERED_COURSES_STUDENTWISE", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetStudentRedoRegisteredCourses_new(int idno, int sessionno, int schemeno, int degreeno, int branchno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        //objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[4] = new SqlParameter("@P_SCHEMENO", schemeno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_COURSES_FOR_REDO_REGISTRATION", objParams);



                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }

                public int AddAcademicYear(string academicyearname, DateTime academicStartdate, DateTime academicyEnddate, int activeStatus, int IsCurrFinaYear)
                {
                    int status = 0;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Add
                        objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@ACADEMIC_YEAR_NAME", academicyearname);
                        objParams[1] = new SqlParameter("@ACADEMIC_YEAR_STARTDATE", academicStartdate);
                        objParams[2] = new SqlParameter("@ACADEMIC_YEAR_ENDDATE", academicyEnddate);
                        objParams[3] = new SqlParameter("@ACTIVE_STATUS", activeStatus);
                        objParams[4] = new SqlParameter("@P_ISCURRFINAYEAR", IsCurrFinaYear);
                        objParams[5] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[5].Direction = ParameterDirection.Output;


                        object obj = objSQLHelper.ExecuteNonQuerySP("PKG_SP_INSERT_ACADEMIC_YEAR_MASTER ", objParams, true);

                        if (obj != null && obj.ToString() != "-99" && obj.ToString() != "2627" && obj.ToString() != "-2")
                            status = Convert.ToInt32(CustomStatus.RecordSaved);
                        else if (obj.ToString().Equals("2627"))
                        {
                            status = Convert.ToInt32(CustomStatus.RecordExist);
                        }
                        else
                            status = Convert.ToInt32(CustomStatus.Error);
                    }
                    catch (Exception ex)
                    {
                        status = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddSession-> " + ex.ToString());
                    }
                    return status;
                }


                public int UpdateAcademicYear(string academicyearname, DateTime academicStartdate, DateTime academicyEnddate, int activeStatus, int academicyearId, int IsCurrFinaYear)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //update
                        objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@ACADEMIC_YEAR_NAME", academicyearname);
                        objParams[1] = new SqlParameter("@ACADEMIC_YEAR_STARTDATE", academicStartdate);
                        objParams[2] = new SqlParameter("@ACADEMIC_YEAR_ENDDATE", academicyEnddate);
                        objParams[3] = new SqlParameter("@ACTIVE_STATUS", activeStatus);
                        objParams[4] = new SqlParameter("@ACADEMIC_YEAR_ID", academicyearId);
                        objParams[5] = new SqlParameter("@P_ISCURRFINAYEAR", IsCurrFinaYear);


                        if (objSQLHelper.ExecuteNonQuerySP("PKG_SP_UPDATE_ACADEMIC_YEAR_MASTER", objParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateCT-> " + ex.ToString());
                    }

                    return retStatus;
                }


                public DataSet GetAllAcedemicYear()
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[0];
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_SP_GET_ACADEMIC_YEAR_MASTER", objParams);
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetAllSession-> " + ex.ToString());
                    }
                    return ds;
                }



                public SqlDataReader GetyearID(int YearID)
                {
                    SqlDataReader dr = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[] { new SqlParameter("@P_OUTPUT", YearID) };

                        dr = objSQLHelper.ExecuteReaderSP("PKG_ACD_YEAR_MASTER_GET_BY_YEAR_ID", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetyearID() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return dr;
                }


                public DataSet GetAllBlobConfiguration()
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[0];
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_SP_GET_BLOB_STORAGE_CONFIG", objParams);
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetAllSession-> " + ex.ToString());
                    }
                    return ds;
                }

                public SqlDataReader GetBlobConfigByID(int BlobID)
                {
                    SqlDataReader dr = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[] { new SqlParameter("@P_BLOBID", BlobID) };

                        dr = objSQLHelper.ExecuteReaderSP("PKG_SP_GET_BLOB_STORAGE_CONFIG_BY_BLOBID", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetBlobConfigByID() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return dr;
                }
                // MODIFY BY VINAY ON DATED 26062023
                public int AddBlobConfig(string accountname, string secretkey, string countainername, int instances, int activity, int activeStatus, string blobstoragepath)
                {
                    int status = 0;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Add
                        objParams = new SqlParameter[8];
                        objParams[0] = new SqlParameter("@ACCOUNT_NAME", accountname);
                        objParams[1] = new SqlParameter("@SECRET_KEY", secretkey);
                        objParams[2] = new SqlParameter("@CONTAINER_NAME", countainername);
                        objParams[3] = new SqlParameter("@INSTANCE", instances);
                        objParams[4] = new SqlParameter("@ACTIVITYNO", activity);
                        objParams[5] = new SqlParameter("@ACTIVE_STATUS", activeStatus);
                        objParams[6] = new SqlParameter("@BLOB_STORAGE_PATH", blobstoragepath); // ADDED BY VINAY MISHRA ON 26/06/2023
                        objParams[7] = new SqlParameter("@P_ORGANIZATIONID", Convert.ToInt32(System.Web.HttpContext.Current.Session["OrgId"]));
                        objParams[8] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[8].Direction = ParameterDirection.Output;


                        object obj = objSQLHelper.ExecuteNonQuerySP("PKG_SP_INSERT_BLOB_STORAGE_CONFIG ", objParams, true);

                        if (obj != null && obj.ToString() != "-99" && obj.ToString() != "-1001" && obj.ToString() != "-2")
                            status = Convert.ToInt32(CustomStatus.RecordSaved);
                        else if (obj.ToString().Equals("-2"))
                        {
                            status = Convert.ToInt32(CustomStatus.RecordExist);
                        }
                        else
                            status = Convert.ToInt32(CustomStatus.Error);
                    }
                    catch (Exception ex)
                    {
                        status = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddSession-> " + ex.ToString());
                    }
                    return status;
                }

                // MODIY BY VINAY M. on dated 26062023
                public int UpdateBlobConfig(string accountname, string secretkey, string countainername, int instances, int activity, int activeStatus, int blobid, string blobstoragepath)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //update
                        objParams = new SqlParameter[8];
                        objParams[0] = new SqlParameter("@ACCOUNT_NAME", accountname);
                        objParams[1] = new SqlParameter("@SECRET_KEY", secretkey);
                        objParams[2] = new SqlParameter("@CONTAINER_NAME", countainername);
                        objParams[3] = new SqlParameter("@INSTANCE", instances);
                        objParams[4] = new SqlParameter("@ACTIVITYNO", activity);
                        objParams[5] = new SqlParameter("@ACTIVE_STATUS", activeStatus);
                        objParams[6] = new SqlParameter("@P_BLOBID", blobid);
                        objParams[7] = new SqlParameter("@BLOB_STORAGE_PATH", blobstoragepath); // ADDED BY VINAY MISHRA ON 26/06/2023

                        if (objSQLHelper.ExecuteNonQuerySP("PKG_SP_UPDATE_BLOB_STORAGE_CONFIG", objParams, false) != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateCT-> " + ex.ToString());
                    }

                    return retStatus;
                }

                public DataSet RetreiveBlockStudentInfo(string rollno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSH = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParam = new SqlParameter[1];
                        objParam[0] = new SqlParameter("@P_ROLLNO", rollno);
                        ds = objSH.ExecuteDataSetSP("PKG_ACD_RET_BLOCK_INFO", objParam);
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetreiveBlockStudentInfo-> " + ex.ToString());
                    }
                    return ds;
                }


                public DataSet CheckActivityON(int page_link)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        //objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        //objParams[0] = new SqlParameter("@P_UA_TYPE", ua_type);
                        //objParams[1] = new SqlParameter("@P_UA_NO ", ua_no);
                        objParams[0] = new SqlParameter("@P_PAGE_LINK", page_link);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_CHECK_ACTIVITY_ON_OFF", objParams);
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.GymkhanaController.CheckActivityON-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetStudentDetailsSemesteradmission(int idno, int Mode)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_MODE", Mode);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_STUDENT_DETAIL", objParams);
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetailsSemesteradmission-> " + ex.ToString());
                    }
                    return ds;
                }

                public int AddSemesterRegistration(SemesterRegistration objsem, int installment, int installmentno, string GroupCount, int Schemeno, int UANO)//, string receiptcode, int branchno, int forsemesterno, int uano, int collegecode,string overwrite, int collegeid, int organizationid)
                {
                    int retStatus = 0;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[23];
                        objParams[0] = new SqlParameter("@P_IDNO  ", objsem.IdNo);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", objsem.SESSIONNO);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", objsem.SemesterNO);
                        objParams[3] = new SqlParameter("@P_PAYMENT_MODE", objsem.paymentMode);
                        objParams[4] = new SqlParameter("@P_OFFLINE_MODE ", objsem.OfflineMode);
                        objParams[5] = new SqlParameter("@P_BANKNAME", objsem.BankName);
                        objParams[6] = new SqlParameter("@P_BRANCHNAME", objsem.BranchName);
                        objParams[7] = new SqlParameter("@P_CHEQUENO", objsem.chequeNo);
                        objParams[8] = new SqlParameter("@P_DDNO", objsem.DDNo);
                        objParams[9] = new SqlParameter("@P_TOTAL_AMT", objsem.Total_Amt);
                        objParams[10] = new SqlParameter("@P_DATE_OF_ISSUE", objsem.Date_of_Issue);
                        objParams[11] = new SqlParameter("@P_TRANSACTIONID", objsem.TransactionId);
                        objParams[12] = new SqlParameter("@P_FILENAME_SLIP", objsem.Filename);
                        objParams[13] = new SqlParameter("@P_CREATEDBY", objsem.CREATED_BY);
                        objParams[14] = new SqlParameter("@P_IP_ADDRESS", objsem.IPADDRESS);
                        objParams[15] = new SqlParameter("@P_DATE_OF_PAYMENT", objsem.Date_of_Payment);
                        objParams[16] = new SqlParameter("@P_INSTALLMENT", installment);
                        objParams[17] = new SqlParameter("@P_INSTALLMENTNO", installmentno);
                        objParams[18] = new SqlParameter("@P_GROUP", GroupCount);
                        objParams[19] = new SqlParameter("@P_SCHEMENO", Schemeno);
                        objParams[20] = new SqlParameter("@P_UANO", UANO);
                        objParams[21] = new SqlParameter("@P_IPADDRESS", System.Web.HttpContext.Current.Session["ipAddress"]);

                        //objParams[13] = new SqlParameter("@P_RECIEPTCODE", receiptcode);
                        //objParams[14] = new SqlParameter("@P_BRANCHNO", branchno);
                        //objParams[15] = new SqlParameter("@P_FOR_SEMESTERNO", forsemesterno);
                        //objParams[16] = new SqlParameter("@P_UA_NO", uano);
                        //objParams[17] = new SqlParameter("@P_COLLEGE_CODE", collegecode);
                        //objParams[18] = new SqlParameter("@P_OVERWRITE", overwrite);
                        //objParams[18] = new SqlParameter("@P_COLLEGE_ID", collegeid);
                        //objParams[20] = new SqlParameter("@P_ORGANIZATION_ID ", organizationid);
                        objParams[22] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[22].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_SP_INSERT_SEMESTER_REGISTRATION", objParams, true);

                        if (ret.ToString() == "1")
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        else if (ret.ToString() == "0")
                            retStatus = Convert.ToInt32(CustomStatus.DuplicateRecord);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);


                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.GymkhanaController.AddELECTIONAPPLY->" + ex.ToString());
                    }
                    return retStatus;
                }



                public int AddSemesterRegistrationOnline(SemesterRegistration objsem, string Orderid, int installment, int installmentno, string Group)//, string receiptcode, int branchno, int forsemesterno, int uano, int collegecode,string overwrite, int collegeid, int organizationid)
                {
                    int retStatus = 0;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[21];
                        objParams[0] = new SqlParameter("@P_IDNO  ", objsem.IdNo);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", objsem.SESSIONNO);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", objsem.SemesterNO);
                        objParams[3] = new SqlParameter("@P_PAYMENT_MODE", objsem.paymentMode);
                        objParams[4] = new SqlParameter("@P_OFFLINE_MODE ", objsem.OfflineMode);
                        objParams[5] = new SqlParameter("@P_BANKNAME", objsem.BankName);
                        objParams[6] = new SqlParameter("@P_BRANCHNAME", objsem.BranchName);
                        objParams[7] = new SqlParameter("@P_CHEQUENO", objsem.chequeNo);
                        objParams[8] = new SqlParameter("@P_DDNO", objsem.DDNo);
                        objParams[9] = new SqlParameter("@P_TOTAL_AMT", objsem.Total_Amt);
                        objParams[10] = new SqlParameter("@P_DATE_OF_ISSUE", objsem.Date_of_Issue);
                        objParams[11] = new SqlParameter("@P_TRANSACTIONID", objsem.TransactionId);
                        objParams[12] = new SqlParameter("@P_FILENAME_SLIP", objsem.Filename);
                        objParams[13] = new SqlParameter("@P_CREATEDBY", objsem.CREATED_BY);
                        objParams[14] = new SqlParameter("@P_IP_ADDRESS", objsem.IPADDRESS);
                        objParams[15] = new SqlParameter("@P_DATE_OF_PAYMENT", objsem.Date_of_Payment);
                        objParams[16] = new SqlParameter("@P_ORDER_ID", Orderid);
                        objParams[17] = new SqlParameter("@P_INSTALLMENT", installment);
                        objParams[18] = new SqlParameter("@P_INSTALLMENTNO", installmentno);
                        objParams[19] = new SqlParameter("@P_GROUP", Group);

                        objParams[20] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[20].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_SP_INSERT_SEMESTER_REGISTRATION_ONLINE", objParams, true);

                        if (ret.ToString() == "1")
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        else if (ret.ToString() == "0")
                            retStatus = Convert.ToInt32(CustomStatus.DuplicateRecord);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.GymkhanaController.AddELECTIONAPPLY->" + ex.ToString());
                    }
                    return retStatus;
                }


                public int AddSemesterRegistrationNEFTDetails(SemesterRegistration objsem)
                {
                    int retStatus = 0;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[14];
                        objParams[0] = new SqlParameter("@P_IDNO  ", objsem.IdNo);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", objsem.SESSIONNO);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", objsem.SemesterNO);
                        objParams[3] = new SqlParameter("@P_PAYMENT_MODE", objsem.paymentMode);
                        objParams[4] = new SqlParameter("@P_OFFLINE_MODE ", objsem.OfflineMode);
                        objParams[5] = new SqlParameter("@P_BANKNAME", objsem.BankName);
                        objParams[6] = new SqlParameter("@P_BRANCHNAME", objsem.BranchName);
                        objParams[7] = new SqlParameter("@P_TOTAL_AMT", objsem.Total_Amt);
                        objParams[8] = new SqlParameter("@P_TRANSACTIONID", objsem.TransactionId);
                        objParams[9] = new SqlParameter("@P_DATE_OF_PAYMENT", objsem.Date_of_Payment);
                        objParams[10] = new SqlParameter("@P_FILENAME_SLIP", objsem.Filename);
                        objParams[11] = new SqlParameter("@P_CREATEDBY", objsem.CREATED_BY);
                        objParams[12] = new SqlParameter("@P_IP_ADDRESS", objsem.IPADDRESS);
                        objParams[13] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[13].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_SP_INSERT_SEMESTER_REGISTRATION_NEFTRTGS_Details", objParams, true);

                        if (ret.ToString() == "1")
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        else if (ret.ToString() == "0")
                            retStatus = Convert.ToInt32(CustomStatus.DuplicateRecord);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.GymkhanaController.AddELECTIONAPPLY->" + ex.ToString());
                    }
                    return retStatus;
                }


                public DataSet GetSemesterRegistrationDetails(int sessionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_sessionno", sessionno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_SEMESTER_REGISTRATION_REPORT", objParams);
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetailsSemesteradmission-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetFeesheadDetail(int idno, int SEMESTERNO)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SEMESTERNO", SEMESTERNO);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_FEES_DETAIL", objParams);
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetailsSemesteradmission-> " + ex.ToString());
                    }
                    return ds;
                }

                //

                public DataSet GetStudFeedetails(int idno, int SEMESTERNO)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SEMESTERNO", SEMESTERNO);
                        ds = objSQLHelper.ExecuteDataSetSP("ACD_PKG_GET_STUD_FEES_DETAILS", objParams);
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetailsSemesteradmission-> " + ex.ToString());
                    }
                    return ds;
                }


                public int Update_Document_Verification_Status(int userno, int degree, int branch, int verifyBy, string ipAddress, string remarkSingle, int cancel, string cancelRemark)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[9];
                        objParams[0] = new SqlParameter("@P_USERNO", userno);
                        objParams[1] = new SqlParameter("@P_DEGREE", degree);
                        objParams[2] = new SqlParameter("@P_BRANCH", branch);
                        objParams[3] = new SqlParameter("@P_VERIFY_BY", verifyBy);
                        objParams[4] = new SqlParameter("@P_IPADDRESS", ipAddress);
                        objParams[5] = new SqlParameter("@P_REMARK_SINGLE", remarkSingle);
                        objParams[6] = new SqlParameter("@P_IS_CANCEL", cancel);
                        objParams[7] = new SqlParameter("@P_CANCEL_REMARK", cancelRemark);
                        objParams[8] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[8].Direction = ParameterDirection.Output;

                        object ret = Convert.IsDBNull(objSQLHelper.ExecuteNonQuerySP("PKG_UPDATE_DOCUMENT_VERIFICATION_STATUS", objParams, true));

                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.ACADEMIC.ANSWERSHEET.InsertUpdateStudentDocSubmitLog-> " + ex.ToString());
                    }

                    return retStatus;
                }

                public DataSet GetAllRecieptCode()
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[0];
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_SP_GET_RECEIPT_CODE_MASTER ", objParams);
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetAllRecieptCode-> " + ex.ToString());
                    }
                    return ds;
                }

                public int AddReceiptCode(string rcname, string recieptcode, int activeStatus)
                {
                    int status = 0;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Add
                        objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_RC_NAME", rcname);
                        objParams[1] = new SqlParameter("@P_RECIEPT_CODE", recieptcode);
                        objParams[2] = new SqlParameter("@P_ACTIVESTATUS", activeStatus);
                        objParams[3] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[3].Direction = ParameterDirection.Output;
                        object obj = objSQLHelper.ExecuteNonQuerySP("PKG_SP_INSERT_RECEIPT_CODE_MASTER ", objParams, true);

                        if (obj != null && obj.ToString() != "-99" && obj.ToString() != "2627" && obj.ToString() != "-2")
                            status = Convert.ToInt32(CustomStatus.RecordSaved);
                        else if (obj.ToString().Equals("2627"))
                        {
                            status = Convert.ToInt32(CustomStatus.RecordExist);
                        }
                        else
                            status = Convert.ToInt32(CustomStatus.Error);
                    }
                    catch (Exception ex)
                    {
                        status = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddReceiptCode-> " + ex.ToString());
                    }
                    return status;
                }
                public DataSet GetPHDAnnexureB_Details_Admin(int idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        //objParams[1] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        //objParams[1].Direction = ParameterDirection.Output;
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_PHD_ANNEXURE_B_ELIGIBLE_ADMIN", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetPHDAnnexureB_Details->" + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetPHDAnnexureB_Details(int idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        //objParams[1] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        //objParams[1].Direction = ParameterDirection.Output;
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_PHD_ANNEXURE_B_ELIGIBLE", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetPHDAnnexureB_Details->" + ex.ToString());
                    }
                    return ds;
                }
                public DataTableReader GetStudentPHDDetailsAnnexureF(int idno)
                {
                    DataTableReader dtr = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        dtr = objSQLHelper.ExecuteDataSetSP("PKG_PHD_STUDENT_SP_RET_STUDENT_BYID_ANNEXURE_F", objParams).Tables[0].CreateDataReader();

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return dtr;
                }


                //added by pooja for phd
                //-------examiner details by admin ----
                public string AddPhdExaminerDetailsadmin(Student objstudentinfo)
                {
                    string retStatus = string.Empty;
                    try
                    {

                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_IDNO", objstudentinfo.IdNo);
                        objParams[1] = new SqlParameter("@P_SUPERVISORNO", objstudentinfo.PhdSupervisorNo);
                        objParams[2] = new SqlParameter("@P_DRCCHAIRMANNO", objstudentinfo.DrcChairNo);
                        objParams[3] = new SqlParameter("@P_EXAMINER1STATUS", objstudentinfo.PhdExaminer1);
                        objParams[4] = new SqlParameter("@P_VIVADATE", objstudentinfo.YearOfExam);

                        objParams[5] = new SqlParameter("@P_OUT", SqlDbType.Int, 25);
                        objParams[5].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_PHD_EXAMINER_DETAILS_ADD_BY_ADMIN", objParams, true);

                        retStatus = ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = "0";
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddStudentDetailsForProvisionalDegree-> " + ex.ToString());
                    }

                    return retStatus;
                }


                public string UpdatePHDStudentAnnexure_F(Student objStudent)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    //int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update Student
                        objParams = new SqlParameter[5];
                        //First Add Student Parameter
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_THESISTITLE", objStudent.ThesisTitle);
                        objParams[2] = new SqlParameter("@P_DESCIPLINE", objStudent.Descipline);
                        objParams[3] = new SqlParameter("@P_THESIS_TITLE_HINDI", objStudent.ThesisTitleHindi);
                        objParams[4] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[4].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_PHD_STUD_SP_UPD_STUDENT_ANNEXURE_F", objParams, true);

                        retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        return ret.ToString();


                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent-> " + ex.ToString());
                    }
                }
                public DataSet GetPhdStudentInfoNew(int idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_PHD_GET_STUDENT_INFO_NEW", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForScheme-> " + ex.ToString());
                    }

                    return ds;
                }
                public DataSet GetCourseElectiveAndGlobalElective(int schemeno, int semesterno, int sessionno)
                {
                    DataSet dc = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_SCHEMENO  ", schemeno);
                        objParams[1] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[2] = new SqlParameter("@P_SESSIONNO ", sessionno);
                        dc = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_GLOBAL_AND_ELECTIVE_COURSES_FOR_REGISTRATION", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForScheme-> " + ex.ToString());
                    }
                    return dc;
                }

                /// <summary>
                /// Added by Nikhil L.  on 23/07/2022 to get student fail exam subjects for PhD.
                /// </summary>
                /// <param name="idno"></param>
                /// <param name="sessionno"></param>
                /// <param name="semesterno"></param>
                /// <returns></returns>
                public DataSet GetStudentFailExamSubjectsPhD(int idno, int sessionno, int semesterno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_FAIL_STUDENT_LIST_PHD", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }
                //added by pooja for Loan applicable student list

                //added by pooja for Loan applicable student list
                // MODIFY BY JAY T. ON DATED 14-04-2023
                public DataSet GetStudentData(int academic_year_id, int degreeno, int Year)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_ACADEMIC_YEAR_ID", academic_year_id);
                        objParams[1] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[2] = new SqlParameter("@P_YEAR", Year);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_SHOW_STUDENT_LIST_LOAN_APPLICABLE", objParams);
                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.studentController.GetStudentData-> " + ex.ToString());
                    }
                    return ds;
                }

                //modify by jay takalkhede on dated 20042023
                public int AddstudLoanapplicable(int idno, int academicyear, int year, int degreeno, int approveamount, int ddno, string Date, string bankdetails, int CREATED_BY, string IPADDRESS)
                {
                    int retStatus = 0;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[11];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_ACADEMIC_YEAR", academicyear);
                        objParams[2] = new SqlParameter("@P_YEAR", year);
                        objParams[3] = new SqlParameter("@P_DEGREENO ", degreeno);
                        objParams[4] = new SqlParameter("@P_APPROVELOANAMOUNT ", approveamount);
                        objParams[5] = new SqlParameter("@P_DDNO ", ddno);
                        objParams[6] = new SqlParameter("@P_DATE", Date);
                        objParams[7] = new SqlParameter("@P_BANKDETAILS", bankdetails);
                        objParams[8] = new SqlParameter("@P_CREATEDBY", CREATED_BY);
                        objParams[9] = new SqlParameter("@P_IP_ADDRESS", IPADDRESS);
                        objParams[10] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[10].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_SP_INSERT_STUD_LOAN_APPLICABLE", objParams, true);

                        if (ret.ToString() == "1")
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        else if (ret.ToString() == "0")
                            retStatus = Convert.ToInt32(CustomStatus.DuplicateRecord);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);


                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.studentController.AddstudLoanapplicable->" + ex.ToString());
                    }
                    return retStatus;
                }


                public DataSet LoanApllicableReport(int academic_year_id)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_ACADEMIC_YEAR_ID", academic_year_id);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_SHOW_STUDENT_LIST_LOAN_APPLICABLE_REPORT", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.studentController.LoanApllicableReport->" + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetPhdstudProgressValidation(int SessionNo, int Idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSH = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParam = new SqlParameter[2];
                        objParam[0] = new SqlParameter("@P_SESSIONNO", SessionNo);
                        objParam[1] = new SqlParameter("@P_IDNO", Idno);

                        ds = objSH.ExecuteDataSetSP("PKG_ACD_CHK_PHD_STUD_PROGRESS_REPORT_VALIDATION", objParam);
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetPhdstudProgressValidation-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataTableReader GetStudentPHDProgressDetailsSupervisor(int idno, int sessionno)
                {
                    DataTableReader dtr = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);

                        dtr = objSQLHelper.ExecuteDataSetSP("PKG_PHD_STUDENT_SP_RET_STUDENT_BYID_PROGRESS_SUPERVISOR", objParams).Tables[0].CreateDataReader();

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return dtr;
                }

                public string UpdateRemarkdgcCom(Student objStudent, string Comment, string stat)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update drc 
                        objParams = new SqlParameter[5];

                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_REMARK", Comment);
                        objParams[2] = new SqlParameter("@P_GRADE", stat);
                        objParams[3] = new SqlParameter("@P_SESSIONNO", objStudent.SessionNo);
                        objParams[4] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[4].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_PHD_SUPERVISOR_REMARK_UPDATE_DGC", objParams, true);

                        retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        return ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateSupervisorRemarkStatus-> " + ex.ToString());
                    }
                }

                public DataTableReader GetStudentPHDProgressDetails(int idno)
                {
                    DataTableReader dtr = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        dtr = objSQLHelper.ExecuteDataSetSP("PKG_PHD_STUDENT_SP_RET_STUDENT_BYID_PROGRESS", objParams).Tables[0].CreateDataReader();
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return dtr;
                }

                public string UpdateSupervisorRemarkStatusCo(Student objStudent)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update drc 
                        objParams = new SqlParameter[5];

                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_REMARK", objStudent.Remark);
                        objParams[2] = new SqlParameter("@P_GRADE", objStudent.Grade);
                        objParams[3] = new SqlParameter("@P_SESSIONNO", objStudent.SessionNo);
                        objParams[4] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[4].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_PHD_SUPERVISOR_REMARK_UPDATE_CO", objParams, true);

                        retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        return ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateSupervisorRemarkStatus-> " + ex.ToString());
                    }
                }
                public string UpdateSupervisorRemarkStatusSecondCo(Student objStudent)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update drc 
                        objParams = new SqlParameter[5];

                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_REMARK", objStudent.Remark);
                        objParams[2] = new SqlParameter("@P_GRADE", objStudent.Grade);
                        objParams[3] = new SqlParameter("@P_SESSIONNO", objStudent.SessionNo);
                        objParams[4] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[4].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_PHD_SUPERVISOR_REMARK_UPDATE_SECOND_CO", objParams, true);

                        retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                        return ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateSupervisorRemarkStatus-> " + ex.ToString());
                    }
                }
                /// <summary>
                /// Added by Nikhil L. on 22/07/2022 to insert the data for online payment.
                /// </summary>
                /// <param name="objsem"></param>
                /// <returns></returns>
                public int AddSemesterRegistration_Online(SemesterRegistration objsem, string orderId)//,string transactionId)//,int payMode)
                {
                    int retStatus = 0;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[18];
                        objParams[0] = new SqlParameter("@P_IDNO  ", objsem.IdNo);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", objsem.SESSIONNO);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", objsem.SemesterNO);
                        objParams[3] = new SqlParameter("@P_PAYMENT_MODE", objsem.paymentMode);
                        objParams[4] = new SqlParameter("@P_OFFLINE_MODE ", objsem.OfflineMode);
                        objParams[5] = new SqlParameter("@P_BANKNAME", objsem.BankName);
                        objParams[6] = new SqlParameter("@P_BRANCHNAME", objsem.BranchName);
                        objParams[7] = new SqlParameter("@P_CHEQUENO", objsem.chequeNo);
                        objParams[8] = new SqlParameter("@P_DDNO", objsem.DDNo);
                        objParams[9] = new SqlParameter("@P_TOTAL_AMT", objsem.Total_Amt);
                        objParams[10] = new SqlParameter("@P_DATE_OF_ISSUE", objsem.Date_of_Issue);
                        objParams[11] = new SqlParameter("@P_TRANSACTIONID", objsem.TransactionId);
                        objParams[12] = new SqlParameter("@P_FILENAME_SLIP", objsem.Filename);
                        objParams[13] = new SqlParameter("@P_CREATEDBY", objsem.CREATED_BY);
                        objParams[14] = new SqlParameter("@P_IP_ADDRESS", objsem.IPADDRESS);
                        objParams[15] = new SqlParameter("@P_DATE_OF_PAYMENT", objsem.Date_of_Payment);
                        objParams[16] = new SqlParameter("@P_ORDER_ID", orderId);
                        //objParams[16] = new SqlParameter("@P_ORDER_ID", transactionId);
                        //objParams[17] = new SqlParameter("@P_PAYMENT_MODE", payMode);
                        objParams[17] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[17].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_SP_INSERT_SEMESTER_REGISTRATION_ONLINE", objParams, true);

                        if (ret.ToString() == "1")
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        else if (ret.ToString() == "0")
                            retStatus = Convert.ToInt32(CustomStatus.DuplicateRecord);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);


                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddSemesterRegistration_Online->" + ex.ToString());
                    }
                    return retStatus;
                }

                ////*****Start***** Added  by Rahul Moraskar 2022-07-26
                public DataSet GetStudentConfig(int OrgID, int PageNo)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objsqlhelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objparams = new SqlParameter[2];


                        objparams[0] = new SqlParameter("@ORGID", OrgID);
                        objparams[1] = new SqlParameter("@PAGENO", PageNo);

                        ds = objsqlhelper.ExecuteDataSetSP("PKG_ACD_GET_STUDENT_CONFIG_DATA", objparams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BUSINESSLAYER.BUSINESSLOGIC.STUDENTCONTROLLER.GetStudentConfig -->" + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }
                ////*****END***** Added  by Rahul Moraskar 2022-07-26
                public int InsertOtherFeeDemand(int sessionno, int semseterno, string recieptcode, string feehead, double amount, int uano, Student objSC)
                {
                    int retStatus = 0;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[9];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_SEMSETERNO", semseterno);
                        objParams[2] = new SqlParameter("@P_RECIEPT_CODE", recieptcode);
                        objParams[3] = new SqlParameter("@P_FEE_HEAD", feehead);
                        objParams[4] = new SqlParameter("@P_AMOUNT", amount);
                        objParams[5] = new SqlParameter("@P_UA_NO", uano);
                        objParams[6] = new SqlParameter("@P_REGNO", objSC.RegNo);
                        objParams[7] = new SqlParameter("@P_IPADDRESS", System.Web.HttpContext.Current.Session["ipAddress"]);
                        objParams[8] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[8].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ADD_OF_DATA", objParams, true);
                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        if (Convert.ToInt32(ret) == 1)
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        if (Convert.ToInt32(ret) == 2)
                            retStatus = Convert.ToInt32(CustomStatus.DuplicateRecord);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.TPController.AddComapny->" + ex.ToString());
                    }
                    return retStatus;
                }
                public int AddEmailConfiguration(int EC_ASNo, int EC_AL_No, string EMAIL, string PASSWORD, int CreatedBy, string ipAddress)
                {
                    int retStatus = 0;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[7];

                        objParams[0] = new SqlParameter("@P_EC_ASNo", EC_ASNo);
                        objParams[1] = new SqlParameter("@P_EC_AL_No", EC_AL_No);
                        objParams[2] = new SqlParameter("@P_EMAIL", EMAIL);
                        objParams[3] = new SqlParameter("@P_PASSWORD", PASSWORD);
                        objParams[4] = new SqlParameter("@P_CREATED_BY", CreatedBy);
                        objParams[5] = new SqlParameter("@P_IPADDRESS", ipAddress);
                        objParams[6] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[6].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_SP_INS_EMAIL_CONFIGURATION_MASTER", objParams, true);
                        if (ret.ToString() == "1")
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        else if (ret.ToString() == "0")
                            retStatus = Convert.ToInt32(CustomStatus.DuplicateRecord);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);


                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.studentController.AddstudLoanapplicable->" + ex.ToString());
                    }
                    return retStatus;
                }
                public int UpdateEmailConfiguration(int EC_NO, int EC_ASNo, int EC_AL_No, string EMAIL, string PASSWORD, int CreatedBy, string ipAddress)
                {
                    int status = 0;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[8];
                        objParams[0] = new SqlParameter("@P_EC_NO", EC_NO);
                        objParams[1] = new SqlParameter("@P_EC_ASNo", EC_ASNo);
                        objParams[2] = new SqlParameter("@P_EC_AL_No", EC_AL_No);
                        objParams[3] = new SqlParameter("@P_EMAIL", EMAIL);
                        objParams[4] = new SqlParameter("@P_PASSWORD", PASSWORD);
                        objParams[5] = new SqlParameter("@P_CREATED_BY", CreatedBy);
                        objParams[6] = new SqlParameter("@P_IPADDRESS", ipAddress);
                        objParams[7] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[7].Direction = ParameterDirection.Output;
                        object obj = objSQLHelper.ExecuteNonQuerySP("PKG_SP_UPDATE_EMAIL_CONFIGURATION_MASTER", objParams, true);

                        if (obj.ToString() == "1")
                            status = Convert.ToInt32(CustomStatus.RecordUpdated);
                        else if (obj.ToString() == "0")
                            status = Convert.ToInt32(CustomStatus.DuplicateRecord);
                        else
                            status = Convert.ToInt32(CustomStatus.Error);


                    }
                    catch (Exception ex)
                    {
                        status = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.PHDController.Updatephdregistrationinfo --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return status;
                }
                public DataSet GetAllEmailConfiguration()
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        ds = objSQLHelper.ExecuteDataSet("[PKG_SP_GET_EMAIL_CONFIGURATION_MASTER]");
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.PHDController.GetAllinstitute-> " + ex.ToString());
                    }
                    return ds;
                }
                public DataSet GetEmailConfigurationByNo(int ecno)
                {

                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_EC_NO", ecno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_SP_GET_BY_NO_EMAIL_CONFIGURATION_MASTER", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.studentController.LoanApllicableReport->" + ex.ToString());
                    }
                    return ds;

                }
                //ADDED BY jay for Misc fees dcr excel report

                public DataSet RetrieveMiscFeesDataForExcel(int Cbook, string paytype, DateTime todate, DateTime fromdate, string RECON)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_CBOOKSRNO", Cbook);
                        objParams[1] = new SqlParameter("@P_PAYTYPE", paytype);
                        if (todate == DateTime.MinValue)
                            objParams[2] = new SqlParameter("@P_TODATE", DBNull.Value);
                        else
                            objParams[2] = new SqlParameter("@P_TODATE", todate);
                        if (fromdate == DateTime.MinValue)
                            objParams[3] = new SqlParameter("@P_FROMDATE", DBNull.Value);
                        else
                            objParams[3] = new SqlParameter("@P_FROMDATE", fromdate);
                        objParams[4] = new SqlParameter("@P_RECCAN", RECON);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_MISC_FEES_COLLECTION_DCR_REPORT_FOR_RCPIT", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetAllSubModuleDetails-> " + ex.ToString());
                    }

                    return ds;
                }



                public DataSet RetrieveMiscFeesDataForExcelRcpit(int Cbook, string paytype, DateTime todate, DateTime fromdate, string RECON)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_CBOOKSRNO", Cbook);
                        objParams[1] = new SqlParameter("@P_PAYTYPE", paytype);
                        if (todate == DateTime.MinValue)
                            objParams[2] = new SqlParameter("@P_TODATE", DBNull.Value);
                        else
                            objParams[2] = new SqlParameter("@P_TODATE", todate);
                        if (fromdate == DateTime.MinValue)
                            objParams[3] = new SqlParameter("@P_FROMDATE", DBNull.Value);
                        else
                            objParams[3] = new SqlParameter("@P_FROMDATE", fromdate);
                        objParams[4] = new SqlParameter("@P_RECCAN", RECON);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_MISC_FEES_COLLECTION_DCR_REPORT_FOR_EXTERNAL_INTERNAL_STUDENT", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetAllSubModuleDetails-> " + ex.ToString());
                    }

                    return ds;
                }
                /// <summary>
                /// <summary>
                /// Adeed by jay on date 02/08/2022
                /// </summary>
                /// <param name="search"></param>
                /// <param name="category"></param>
                /// <returns></returns>
                public DataSet RetrieveStudentDetailsRecieptCansel(int Cbook, string paytype, string search, string category)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_CBOOK", Cbook);
                        objParams[1] = new SqlParameter("@P_PAYTYPE", paytype);
                        objParams[2] = new SqlParameter("@P_SEARCHSTRING", search);
                        objParams[3] = new SqlParameter("@P_SEARCH", category);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_MISC_FEES_RECEIPT_REPORT_RCPIT", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentDetailsAdmCancel-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetTcDetails(int branchno, string fromdate, string todate)
                {

                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[1] = new SqlParameter("@P_FROMDATE", fromdate);
                        objParams[2] = new SqlParameter("@P_TODATE", todate);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_TRANSFER_CERTIFICATE_REPORT", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.studentController.LoanApllicableReport->" + ex.ToString());
                    }
                    return ds;

                }

                //added by jay on date 17/08/2022
                public DataSet GetCourseElectiveAndGlobalElectiveStudent(int ADMBATCH, int semesterno, int sessionno, int SCHEMENO, int SECTIONNO)
                {
                    DataSet dS = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_ADMBATCH  ", ADMBATCH);
                        objParams[1] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[2] = new SqlParameter("@P_SESSIONNO ", sessionno);
                        objParams[3] = new SqlParameter("@P_SCHEMENO  ", SCHEMENO);
                        objParams[4] = new SqlParameter("@P_SECTIONNO ", SECTIONNO);
                        dS = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_GLOBAL_AND_ELECTIVE_STUDENT", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForScheme-> " + ex.ToString());
                    }
                    return dS;
                }
                public DataSet GetStudentDetailsExamRetest(int idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_BYID_FOR_RETEST_EXAM", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetBulkSemesterPromotionDataWithoutCriteria(int mode, int schemeno, int semesterno, int degreeno, int branchno, int collegeid)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_MODE", mode);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[2] = new SqlParameter("@P_SEMESTER_NO", semesterno);
                        objParams[3] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[4] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[5] = new SqlParameter("@P_COLLEGE_ID", collegeid);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_DETAILS_BULK_SEMESTER_PROMOTION_WITHOUT_CRITERIA", objParams);


                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetBulkSemesterPromotionData->" + ex.ToString());
                    }
                    return ds;
                }

                /// Added by jay t M. on 03/10/2022 to to get data semester Promotion Data Without Criteria not completed excel. 
                public DataSet GetBulkSemesterPromotionDataWithoutCriteriaExcel(int schemeno, int semesterno, int degreeno, int branchno, int collegeid)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[1] = new SqlParameter("@P_SEMESTER_NO", semesterno);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[4] = new SqlParameter("@P_COLLEGE_ID", collegeid);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_DETAILS_BULK_SEMESTER_PROMOTION_WITHOUT_CRITERIA_EXCEL", objParams);


                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetBulkSemesterPromotionData->" + ex.ToString());
                    }
                    return ds;
                }
                /// Added by Rahul M. on 05/08/2022 to check the user for No Dues.

                public DataTableReader GetStudentDetailsForNoDues(int idno)
                {
                    DataTableReader dtr = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        dtr = objSQLHelper.ExecuteDataSetSP("PKG_SP_GET_STUD_NO_DUES_INFO", objParams).Tables[0].CreateDataReader();

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentCompleteDetails->" + ex.ToString());
                    }
                    return dtr;
                }
                /// Added by Rahul M. on 05/08/2022 to check the user for No Dues.
                public int AddNoDuesStud(Student objStud, string passyear)
                {
                    int retStatus = 0;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[10];
                        objParams[0] = new SqlParameter("@P_REGNO ", objStud.RegNo);
                        objParams[1] = new SqlParameter("@P_IDNO  ", objStud.IdNo);
                        objParams[2] = new SqlParameter("@P_STUDNAME ", objStud.StudName);
                        objParams[3] = new SqlParameter("@P_DEGREENO ", objStud.DegreeNo);
                        objParams[4] = new SqlParameter("@P_BRANCHNO ", objStud.BranchNo);
                        objParams[5] = new SqlParameter("@P_STUD_MOBILE ", objStud.StudentMobile);
                        objParams[6] = new SqlParameter("@P_EMAILID ", objStud.EmailID);
                        objParams[7] = new SqlParameter("@P_COLLEGE_ID", objStud.College_ID);
                        objParams[8] = new SqlParameter("@P_PASSING_YEAR", passyear);
                        objParams[9] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[9].Direction = ParameterDirection.Output;
                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_SP_INSERT_NO_DUES_STUD_INFO", objParams, true);
                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        if (Convert.ToInt32(ret) == 1)
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        //     
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.TPController.AddComapny->" + ex.ToString());
                    }
                    return retStatus;
                }

                public DataSet GetStudTracking(int idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_SP_SHOW_STUD_TRACKING_DETAILS_NODUES", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.Get_Passout_Student_List_Excel->" + ex.ToString());
                    }
                    return ds;
                }

                /// <summary>
                /// Added by Rahul M. on 05/08/2022 to check the user for No Dues.
                /// </summary>
                /// <param name="userno"></param>
                /// <returns></returns>
                public DataSet CheckCautionApprovalAuthority(int userno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objShelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_USERNO", userno);

                        ds = objShelper.ExecuteDataSetSP("PKG_CHECK_NO_DUES_APPROVAL_AUTHORITY", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.CheckCautionApprovalAuthority-> " + ex.ToString());
                    }
                    return ds;
                }

                /// <summary>
                /// Added by Rahul M. on 09/08/2022 to get colleges by user for No Dues.
                /// </summary>
                /// <param name="UANO"></param>
                /// <returns></returns>
                public DataSet GetCollegesByUser_For_NoDues(int UANO)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_UA_NO", UANO);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_USER_COLLEGES_FOR_NODUES", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetCollegesByUser_For_NoDues->" + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetApprovedStudList(Student objStud, int UANO, string collegeNo, int userType, string passbatch, int status)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_PASSOUT_BATCH", passbatch);
                        objParams[1] = new SqlParameter("@P_UANO", UANO);
                        objParams[2] = new SqlParameter("@P_COLLEGE_NO", collegeNo);
                        objParams[3] = new SqlParameter("@P_UA_TYPE", userType);
                        objParams[4] = new SqlParameter("@P_STATUS", status);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_NODUES_APPROVAL_STUD_LIST", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetApprovedStudList->" + ex.ToString());
                    }
                    return ds;
                }

                public int SavedCautionStatus(Student objStud, int stat, int UANO, string RejectReason, string collegeNo, int userType)
                {
                    int retStatus = 0;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[9];
                        objParams[0] = new SqlParameter("@P_REGNO", objStud.RegNo);
                        objParams[1] = new SqlParameter("@P_APPROVED", stat);
                        objParams[2] = new SqlParameter("@P_UANO", UANO);
                        objParams[3] = new SqlParameter("@P_REASON", RejectReason);
                        objParams[4] = new SqlParameter("@P_MACADDRESS", System.Web.HttpContext.Current.Session["macAddress"]);
                        objParams[5] = new SqlParameter("@P_IPADDRESS", System.Web.HttpContext.Current.Session["ipAddress"]);
                        //objParams[6] = new SqlParameter("@P_DEPTNO", deptNo);
                        objParams[6] = new SqlParameter("@P_COLLEGE_NO", collegeNo);
                        objParams[7] = new SqlParameter("@P_UA_TYPE", userType);
                        objParams[8] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[8].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_SAVE_NODUES_STATUS", objParams, true);
                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        if (Convert.ToInt32(ret) == 1)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }

                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.TPController.SavedCautionStatus->" + ex.ToString());
                    }
                    return retStatus;
                }

                //Added By Ruchika Dhakate on 25.08.2022 to get data for Bulk Student Upload
                public DataSet GetUserCreationList(int admbatch, int collegeid, int degreeno, int branchno, int semesterno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[1] = new SqlParameter("@P_COLLEGE_ID", collegeid);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[4] = new SqlParameter("@P_SEMESTERNO", semesterno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_STUDENT_USERCREATION_LIST", objParams);
                    }

                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetUserCreationList->" + ex.ToString());
                    }
                    return ds;
                }

                //Added By Ruchika Dhakate on 19.09.2022 to get Parent user data
                public DataSet GetUserParentCreationList(int admbatch, int collegeid, int degreeno, int branchno, int semesterno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[1] = new SqlParameter("@P_COLLEGE_ID", collegeid);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[4] = new SqlParameter("@P_SEMESTERNO", semesterno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_PARENT_USERCREATION_LIST", objParams);
                    }

                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetUserParentCreationList->" + ex.ToString());
                    }
                    return ds;
                }


                public DataSet Get_Student_Details_for_Course_Registration(int idno, int pageno, int ua_type)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQL = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_PAGENO", pageno);
                        objParams[2] = new SqlParameter("@P_UA_TYPE", ua_type);
                        ds = objSQL.ExecuteDataSetSP("PKG_ACD_GET_STUDENT_COURSE_DETAILS_FOR_REGISTRATION", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentRegistration.Get_Student_Details_for_Course_Registration-> " + ex.ToString());
                    }
                    return ds;
                }


                public DataSet GetStudentCourseRegistrationSubject(int SESSIONNO, int IDNO, int SEMESTERNO, int SCHEMENO, int COMMANDTYPE)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQL = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", SESSIONNO);
                        objParams[1] = new SqlParameter("@P_IDNO", IDNO);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", SEMESTERNO);
                        objParams[3] = new SqlParameter("@P_SCHEMENO", SCHEMENO);
                        objParams[4] = new SqlParameter("@P_COMMANDTYPE", COMMANDTYPE);

                        ds = objSQL.ExecuteDataSetSP("PKG_COURSEREGISTRATION_SP_GET_OFFERED_SUBJECTS", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentRegistration.GetStudentCourseRegistrationSubject-> " + ex.ToString());
                    }
                    return ds;
                }

                public int GetGlobalCoursesAvailableSeats(int sessionno, int semesterno, int schemeno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[2] = new SqlParameter("@P_COURSENO", schemeno);
                        objParams[3] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[3].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_COURSEREGISTRATION_SP_GET_GLOBAL_COURSES_AVAILABLE_SEATS", objParams, true);

                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        else
                            retStatus = Convert.ToInt32(ret);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentRegistration.GenereateRRNoForRcpiper-> " + ex.ToString());
                    }
                    return retStatus;
                }

                public int AddAddlRegisteredSubjects(StudentRegist objSR)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Add New Registered Subject Details
                        objParams = new SqlParameter[14];

                        objParams[0] = new SqlParameter("@P_SESSIONNO", objSR.SESSIONNO);
                        objParams[1] = new SqlParameter("@P_IDNO", objSR.IDNO);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", objSR.SEMESTERNO);
                        objParams[3] = new SqlParameter("@P_SCHEMENO", objSR.SCHEMENO);
                        objParams[4] = new SqlParameter("@P_COURSENOS", objSR.COURSENOS);
                        objParams[5] = new SqlParameter("@P_REGNO", objSR.REGNO);
                        objParams[6] = new SqlParameter("@P_ROLLNO", objSR.ROLLNO);
                        objParams[7] = new SqlParameter("@P_IPADDRESS", objSR.IPADDRESS);
                        objParams[8] = new SqlParameter("@P_UA_N0", objSR.UA_NO);
                        objParams[9] = new SqlParameter("@P_COLLEGE_CODE", objSR.COLLEGE_CODE);
                        objParams[10] = new SqlParameter("@P_AUDIT_COURSENOS", objSR.Audit_course);
                        objParams[11] = new SqlParameter("@P_REGISTERED", objSR.EXAM_REGISTERED);
                        objParams[12] = new SqlParameter("@P_SECTIONNOS", objSR.SECTIONNOS);
                        objParams[13] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[13].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_PREREGIST_SP_INS_REGIST_SUBJECTS", objParams, true);
                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentRegistration.AddAddlRegisteredSubjects-> " + ex.ToString());
                    }

                    return retStatus;
                }

                public DataSet GetStudentListForSingleStudentHosteller(int IDNO)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", IDNO);

                        // objParams[6] = new SqlParameter("@P_ADMBTCH", admbatch);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_TRANSPORTATION_STATUS_UPDATION_FOR_SINGLE_STUD", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }
                public DataSet GetStudentsBySchemeElectiveCourses(int admbatch, int schemeno, int degreeno, int schemetype, int semno, int college_id, int sectionno, int courseno, int sessionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[9];
                        objParams[0] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[1] = new SqlParameter("@P_SCHEMENO", schemeno);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_SCHEMETYPE", schemetype);
                        objParams[4] = new SqlParameter("@P_SEM", semno);
                        objParams[5] = new SqlParameter("@P_COLLEGEID", college_id);
                        objParams[6] = new SqlParameter("@P_SECTIONNO", sectionno);
                        objParams[7] = new SqlParameter("@P_COURSENO", courseno);
                        objParams[8] = new SqlParameter("@P_SESSIONNO", sessionno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_BY_SCHEME1_ELECTIVE_BY_COURSENOS", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsBySchemeElectiveCourses-> " + ex.ToString());
                    }

                    return ds;
                }

                public DataSet ShowBulkInstallmentStudentsExcelReport(int clg, int degree, int branch, int sem, int ptype, string reciepttype)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[6];
                        sqlParams[0] = new SqlParameter("@P_COLLEGE_ID", clg);
                        sqlParams[1] = new SqlParameter("@P_DEGREENO", degree);
                        sqlParams[2] = new SqlParameter("@P_BRANCHNO", branch);
                        sqlParams[3] = new SqlParameter("@P_SEMESTERNO", sem);
                        sqlParams[4] = new SqlParameter("@P_PTYPE", ptype);
                        sqlParams[5] = new SqlParameter("@P_RECIEPT_CODE", reciepttype);
                        ds = objDataAccess.ExecuteDataSetSP("PKG_ACD_GET_BULK_INSTALLMENT_DETAILS_EXCEL", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.StudentController.GetAllStudentDetentionProEXCEL() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                public int bulkStudentInstallmentCreate(Student objS, int instalmenttype, string ipAddress, string Reciptcode, string Date_string)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        //Update Student semester Rtm
                        objParams = new SqlParameter[13];
                        objParams[0] = new SqlParameter("@P_IDNO", objS.IdNo);
                        objParams[1] = new SqlParameter("@P_SEMESTERNO", objS.SemesterNo);
                        objParams[2] = new SqlParameter("@P_COLLEGE_ID", objS.College_ID);
                        objParams[3] = new SqlParameter("@P_DEGREENO", objS.DegreeNo);
                        objParams[4] = new SqlParameter("@P_BRANCHNO", objS.BranchNo);
                        objParams[5] = new SqlParameter("@P_UA_NO", objS.Uano);
                        objParams[6] = new SqlParameter("@P_IPADDRESS", ipAddress);
                        objParams[7] = new SqlParameter("@P_INSTALLMENETYPE", instalmenttype);
                        objParams[8] = new SqlParameter("@P_RECIEPTCODE", Reciptcode);
                        objParams[9] = new SqlParameter("@P_PAYMENTTYPE", objS.PayTypeNO);
                        objParams[10] = new SqlParameter("@P_DUEDATE", Date_string);
                        objParams[11] = new SqlParameter("@P_ORGANIZATIONID", Convert.ToInt32(System.Web.HttpContext.Current.Session["OrgId"]));
                        objParams[12] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[12].Direction = ParameterDirection.Output;

                        int status = (Int32)objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INSERT_BULK_INSTALLMENT_DETAILS", objParams, true);
                        if (status != -99)
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.Error);
                        return retStatus;
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent-> " + ex.ToString());
                    }
                }
                public int UpdateStudentSectionBulk(string studids, string sectionnos, int ua_no, string admbatchno, int degreeno, int branchno, string ipaddress, string batchNos)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[9];

                        objParams[0] = new SqlParameter("@P_STUDID", studids);
                        objParams[1] = new SqlParameter("@P_SECTIONNO", sectionnos);
                        //objParams[2] = new SqlParameter("@P_ROLLNOS", rollnos);
                        objParams[2] = new SqlParameter("@P_UA_NO", ua_no);
                        objParams[3] = new SqlParameter("@P_ADMBATCHNO", admbatchno);
                        objParams[4] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[5] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[6] = new SqlParameter("@P_IPADDRESS", ipaddress);
                        //objParams[8] = new SqlParameter("@P_ROLL", roll);//Added by Nidhi Gour 18102019
                        objParams[7] = new SqlParameter("@P_STUD_BATCHNO", batchNos);  // Added by Gopal M 25-09-2023
                        objParams[8] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[8].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_BULK_SECTION_ALLOTMENT", objParams, false);
                        if (ret != null)
                            if (ret.ToString() != "-99")
                                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentSection-> " + ex.ToString());
                    }
                    return retStatus;
                }

                //Added by jat takalkhede on date 15/09/2022 for Excel report for scheme allotment pending student 
                public DataSet ExcelForSchemeAllotPending()
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[0];
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_BY_SCHEME_ALLOT_PENDING_EXCEL", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForScheme-> " + ex.ToString());
                    }

                    return ds;
                }

                public DataSet GetNewStudentEntryData(int admbatch, DateTime fromdate, DateTime todate, int UA_NO)
                {

                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[4];
                        objParams[0] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[1] = new SqlParameter("@P_START_DATE", fromdate);
                        objParams[2] = new SqlParameter("@P_END_DATE", todate);
                        objParams[3] = new SqlParameter("@P_UANO", UA_NO);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_NEW_STUDENT_ENTRY_REPORT", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.studentController.GetNewStudentEntryData->" + ex.ToString());
                    }
                    return ds;

                }

                public string UpdateStudentInfo(Student objStudent, StudentAddress objStudAddress, StudentPhoto objSPhoto, GEC_Student objStud, string RRNO, int session, int SupervisorName, int EmpIdGuide, int StatusCat, string PerEmail)
                {
                    string retStatus = string.Empty;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Add New student
                        objParams = new SqlParameter[78];
                        objParams[0] = new SqlParameter("@P_rollNo", objStudent.RollNo);
                        objParams[1] = new SqlParameter("@P_sectionNo", objStudent.SectionNo);
                        objParams[2] = new SqlParameter("@P_studName", objStudent.StudName);
                        objParams[3] = new SqlParameter("@P_fatherName", objStudent.FatherName);
                        objParams[4] = new SqlParameter("@P_motherName ", objStudent.MotherName);
                        objParams[5] = new SqlParameter("@P_dob", objStudent.Dob);
                        objParams[6] = new SqlParameter("@P_sex ", objStudent.Sex);
                        objParams[7] = new SqlParameter("@P_religionNo", objStudent.ReligionNo);
                        objParams[8] = new SqlParameter("@P_married", objStudent.Married);
                        objParams[9] = new SqlParameter("@P_nationalityNo", objStudent.NationalityNo);
                        objParams[10] = new SqlParameter("@P_categoryNo", objStudent.CategoryNo);
                        objParams[11] = new SqlParameter("@P_admDate", objStudent.AdmDate);
                        objParams[12] = new SqlParameter("@P_hosteler", objStudent.Hosteler);
                        objParams[13] = new SqlParameter("@P_degreeNo", objStudent.DegreeNo);
                        objParams[14] = new SqlParameter("@P_admbatch", objStudent.AdmBatch);
                        objParams[15] = new SqlParameter("@P_branchNo", objStudent.BranchNo);
                        objParams[16] = new SqlParameter("@P_Year", objStudent.Year);
                        objParams[17] = new SqlParameter("@P_semesterNo", objStudent.SemesterNo);
                        objParams[18] = new SqlParameter("@P_pType", objStudent.PType);
                        objParams[19] = new SqlParameter("@P_stateNo", objStudent.StateNo);
                        objParams[20] = new SqlParameter("@P_pAddress", objStudAddress.PADDRESS);
                        objParams[21] = new SqlParameter("@P_pCity", objStudAddress.PCITY);
                        objParams[22] = new SqlParameter("@P_pState", objStudAddress.PSTATE);
                        objParams[23] = new SqlParameter("@P_PPinCode", objStudAddress.PPINCODE);
                        objParams[24] = new SqlParameter("@P_PTELEPHONE", objStudAddress.PTELEPHONE);
                        objParams[25] = new SqlParameter("@P_college_Code", objStudent.CollegeCode);
                        objParams[26] = new SqlParameter("@P_regNo", objStudent.RegNo);

                        if (objSPhoto.Photo1 == null)
                            objParams[27] = new SqlParameter("@P_PHOTO", DBNull.Value);
                        else
                            objParams[27] = new SqlParameter("@P_PHOTO", objSPhoto.Photo1);
                        objParams[27].SqlDbType = SqlDbType.Image;

                        objParams[28] = new SqlParameter("@P_IDTYPENO", objStudent.IdType);
                        objParams[29] = new SqlParameter("@P_EXAMPTYPE", objStudent.ExamPtype);
                        //GCET Details..
                        //objParams[30] = new SqlParameter("@P_GCETROLLNO", objStud.GECTROLLNO);
                        //objParams[31] = new SqlParameter("@P_GCETRANK", objStud.GCETRANK);
                        objParams[30] = new SqlParameter("@P_ADMROUNDNO", objStudent.AdmroundNo);
                        objParams[31] = new SqlParameter("@P_UANO", objStudent.Uano);
                        objParams[32] = new SqlParameter("@P_IPADDRESS", objStudent.IPADDRESS);
                        //add AdmCaste and current session
                        objParams[33] = new SqlParameter("@P_ADMCATEGORYNO", objStudent.AdmCategoryNo);
                        //objParams[34] = new SqlParameter("@P_SESSIONNO", objStudent.SessionNo);
                        //ENTRANCE EXAM
                        objParams[34] = new SqlParameter("@P_QEXMROLLNO", objStudent.QexmRollNo);
                        objParams[35] = new SqlParameter("@P_STATE_RANK", objStudent.STATERANK);
                        objParams[36] = new SqlParameter("@P_ALL_INDIA_RANK", objStudent.ALLINDIARANK);
                        objParams[37] = new SqlParameter("@P_YEAR_OF_EXAM", objStudent.YearOfExam);
                        objParams[38] = new SqlParameter("@P_PERCENTAGE", objStudent.Percentage);
                        objParams[39] = new SqlParameter("@P_PERCENTILE", objStudent.PERCENTILE);
                        objParams[40] = new SqlParameter("@P_QUALIFYNO", objStudent.QUALIFYNO);

                        objParams[41] = new SqlParameter("@P_EMILID", objStudent.EmailID);
                        objParams[42] = new SqlParameter("@P_LADDRESS", objStudAddress.LADDRESS);
                        objParams[43] = new SqlParameter("@P_LTELEPHONE", objStudAddress.LTELEPHONE);
                        objParams[44] = new SqlParameter("@P_LMOBILE", objStudAddress.LMOBILE);
                        objParams[45] = new SqlParameter("@P_LEMAIL", objStudAddress.LEMAIL);
                        objParams[46] = new SqlParameter("@P_ADMQUOTANO", objStudent.ADMQUOTANO);
                        objParams[47] = new SqlParameter("@P_BLOODGRPNO", objStudent.BloodGroupNo);
                        objParams[48] = new SqlParameter("@P_LCITY", objStudAddress.LCITY);
                        objParams[49] = new SqlParameter("@P_LSTATE", objStudAddress.LSTATE);
                        objParams[50] = new SqlParameter("@P_GATESCHOLARSHIP", objStudent.GetScholarship);
                        objParams[51] = new SqlParameter("@P_PHDSTATUS", objStudent.PhdStatus);
                        objParams[52] = new SqlParameter("@P_PHDSUPERVISORNO", objStudent.PhdSupervisorNo);
                        objParams[53] = new SqlParameter("@P_PHDCOSUPERVISORNO1", objStudent.PhdCoSupervisorNo1);
                        objParams[54] = new SqlParameter("@P_PHDCOSUPERVISORNO2", objStudent.PhdCoSupervisorNo2);
                        objParams[55] = new SqlParameter("@P_TYPESUPERVISOR", objStudent.TypeSupervisorNo);
                        objParams[56] = new SqlParameter("@P_TYPECOSUPERVISOR1", objStudent.TypeCoSupervisorNo1);
                        objParams[57] = new SqlParameter("@P_TYPECOSUPERVISOR2", objStudent.TypeCoSupervisorNo2);
                        objParams[58] = new SqlParameter("@P_NET", objStudent.Net);

                        if (objSPhoto.SignPhoto == null)
                            objParams[59] = new SqlParameter("@P_SIGNPHOTO", DBNull.Value);
                        else
                            objParams[59] = new SqlParameter("@P_SIGNPHOTO", objSPhoto.SignPhoto);
                        objParams[59].SqlDbType = SqlDbType.Image;
                        objParams[60] = new SqlParameter("@P_PH", objStudent.PH);
                        objParams[61] = new SqlParameter("@P_TYPEOFPH", objStudent.Physical_Handicap);
                        objParams[62] = new SqlParameter("@P_TYPEOFDISABLE", objStudent.TypeofDisablity);
                        objParams[63] = new SqlParameter("@P_SPECIAL", objStudent.Special);
                        objParams[64] = new SqlParameter("@P_DOCUMENTS", objStudent.DOCUMENTS);
                        objParams[65] = new SqlParameter("@P_AADHARNO", objStudent.AadharCardNo);
                        objParams[66] = new SqlParameter("@P_Admremark", objStudent.Remark);
                        objParams[67] = new SqlParameter("@P_PENDING_DOCUMENTS", objStudent.PENDING_DOCUMENTS);
                        objParams[68] = new SqlParameter("@P_INSTITUTENAME", objStudent.PhdInstitutename);    //  -- on 15042019
                        objParams[69] = new SqlParameter("@P_NOC", objStudent.PhdNoc);
                        objParams[70] = new SqlParameter("@P_RRNO", RRNO);
                        objParams[71] = new SqlParameter("@P_SESSION", session);
                        objParams[72] = new SqlParameter("@P_SUPNAME", SupervisorName);
                        objParams[73] = new SqlParameter("@P_EMPIDGUIDE", EmpIdGuide);
                        objParams[74] = new SqlParameter("@P_STATUSCAT", StatusCat);
                        objParams[75] = new SqlParameter("@P_PEREMAIL", PerEmail);
                        objParams[76] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[77] = new SqlParameter("@P_REGOUT", SqlDbType.NVarChar, 25);
                        objParams[77].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_STUDENT_INFO_PHD_UPDATE", objParams, true);

                        //if (ret.ToString().Equals("-99"))
                        //    retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        //else
                        //    retStatus = Convert.ToInt32(ret);
                        retStatus = ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = "0";
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddStudent-> " + ex.ToString());
                    }

                    return retStatus;
                }

                //ValueAdded
                public int Add_ValueAdded_Entry(string colgid, string Coschno, int Groupid, string Courseno, int Durationno, string Duration, string Startdate, string Enddate, int Assessementno, string Assessment, int Gradeno, string Grade, int createdBy, string ipAddress, int orgid, int Semesterno, int Schemeno)
                {
                    int status = 0;
                    try
                    {
                        SQLHelper objSqlHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[18];
                        objParams[0] = new SqlParameter("@P_COLLEGE_ID", colgid);
                        objParams[1] = new SqlParameter("@P_COSCHNO ", Coschno);
                        objParams[2] = new SqlParameter("@P_SCHEMENO ", Schemeno);
                        objParams[3] = new SqlParameter("@P_SEMESTERNO ", Semesterno);
                        objParams[4] = new SqlParameter("@P_GROUPID", Groupid);
                        objParams[5] = new SqlParameter("@P_COURSENO", Courseno);
                        objParams[6] = new SqlParameter("@P_DURATIONNO", Durationno);
                        objParams[7] = new SqlParameter("@P_DURATION", Duration);
                        objParams[8] = new SqlParameter("@P_STARTDATE", Startdate);
                        objParams[9] = new SqlParameter("@P_ENDDATE", Enddate);
                        objParams[10] = new SqlParameter("@P_ASSESSMENTNO", Assessementno);
                        objParams[11] = new SqlParameter("@P_ASSESSMENT", Assessment);
                        objParams[12] = new SqlParameter("@P_GRADENO", Gradeno);
                        objParams[13] = new SqlParameter("@P_GRADE", Grade);
                        objParams[14] = new SqlParameter("@P_CREATED_BY", createdBy);
                        objParams[15] = new SqlParameter("@P_IPADDRESS", ipAddress);
                        objParams[16] = new SqlParameter("@P_ORGANIZATIONID", orgid);
                        objParams[17] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[17].Direction = ParameterDirection.Output;

                        object obj = objSqlHelper.ExecuteNonQuerySP("PKG_SP_INS_VALUEADDED_COURSE", objParams, true);

                        if (obj != null && obj.ToString() != "-99" && obj.ToString() != "-1001")
                            status = Convert.ToInt32(CustomStatus.RecordSaved);
                        else
                            status = Convert.ToInt32(CustomStatus.Error);
                        if (obj.Equals(2627))
                        {
                            status = Convert.ToInt32(CustomStatus.RecordExist);
                        }
                    }
                    catch (Exception ex)
                    {
                        status = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.AffiliatedController.Add_Define_Intake_Entry --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return status;
                }

                public int Update_ValueAdded_Entry(int valueno, string Coschno, int Groupid, string Courseno, int Durationno, string Duration, string Startdate, string Enddate, int Assessementno, string Assessment, int Gradeno, string Grade, int createdBy, string ipAddress, int orgid, int semesterno, int Schemeno)
                {
                    int status = 0;
                    try
                    {
                        SQLHelper objSqlHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[17];
                        objParams[0] = new SqlParameter("@P_VALUE_NO", valueno);
                        objParams[1] = new SqlParameter("@P_SEMESTERNO ", semesterno);
                        objParams[2] = new SqlParameter("@P_SCHEMENO ", Schemeno);
                        objParams[3] = new SqlParameter("@P_GROUPID", Groupid);
                        objParams[4] = new SqlParameter("@P_COURSENO", Courseno);
                        objParams[5] = new SqlParameter("@P_DURATIONNO", Durationno);
                        objParams[6] = new SqlParameter("@P_DURATION", Duration);
                        objParams[7] = new SqlParameter("@P_STARTDATE", Startdate);
                        objParams[8] = new SqlParameter("@P_ENDDATE", Enddate);
                        objParams[9] = new SqlParameter("@P_ASSESSMENTNO", Assessementno);
                        objParams[10] = new SqlParameter("@P_ASSESSMENT", Assessment);
                        objParams[11] = new SqlParameter("@P_GRADENO", Gradeno);
                        objParams[12] = new SqlParameter("@P_GRADE", Grade);
                        objParams[13] = new SqlParameter("@P_CREATED_BY", createdBy);
                        objParams[14] = new SqlParameter("@P_IPADDRESS", ipAddress);
                        objParams[15] = new SqlParameter("@P_ORGANIZATIONID", orgid);
                        objParams[16] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[16].Direction = ParameterDirection.Output;

                        object obj = objSqlHelper.ExecuteNonQuerySP("PKG_SP_UPDATE_VALUEADDED_COURSE", objParams, true);

                        if (obj != null && obj.ToString() != "-99" && obj.ToString() != "-1001")
                            status = Convert.ToInt32(CustomStatus.RecordUpdated);
                        else
                            status = Convert.ToInt32(CustomStatus.Error);
                        if (obj.Equals(2627))
                        {
                            status = Convert.ToInt32(CustomStatus.RecordExist);
                        }
                    }
                    catch (Exception ex)
                    {
                        status = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.AffiliatedController.Add_Define_Intake_Entry --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return status;
                }


                public DataSet GetAllAddedEnteries()
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSqlHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[0];
                        ds = objSqlHelper.ExecuteDataSetSP("PKG_SP_GET_ALL_VALUEADDED_ENTRY", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.AffiliatedController.GetAllIntakeEnteries --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                public DataSet GetAllAddedEnteriesbycoshno(int coshno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSqlHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_COSCHNO", coshno);
                        ds = objSqlHelper.ExecuteDataSetSP("PKG_SP_GET_BYCOSCHNO_VALUEADDED_ENTRY", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.AffiliatedController.GetAllIntakeEnteries --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                public DataSet GetDetailsByValueCourseId(int valueno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSqlHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_VALUE_NO", valueno);
                        ds = objSqlHelper.ExecuteDataSetSP("PKG_SP_GET_VALUEADDED_ENTERIES", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.AffiliatedController.GetIntakeDetailsByIntakeId --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }



                public DataSet GetCountDataShow(string groupname)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSqlHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_GROUPNAME", groupname);
                        ds = objSqlHelper.ExecuteDataSetSP("PKG_SP_GET_COUNTBY_VALUEADDED_ENTRY", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.AffiliatedController.GetIntakeDetailsByIntakeId --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }
                public DataSet GetViewGroupData()
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSqlHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[0];
                        ds = objSqlHelper.ExecuteDataSetSP("PKG_SP_GETVIEWGROUP_VALUEADDED_ENTERIES", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.AffiliatedController.GetIntakeDetailsByIntakeId --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }




                public DataSet Getshowstudentlist(int collegeid)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSqlHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_COLLEGE_ID", collegeid);
                        ds = objSqlHelper.ExecuteDataSetSP("PKG_SP_GETSTUDENTLIST_SPECIALIZATION_COURSES", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.AffiliatedController.GetIntakeDetailsByIntakeId --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }
                public int Add_Course_allotment(int stuid, string regno, int collegeid, string Groupname, int semester)
                {
                    int status = 0;
                    try
                    {



                        SQLHelper objSqlHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[6];

                        objParams[0] = new SqlParameter("@P_IDNO", stuid);
                        objParams[1] = new SqlParameter("@P_REGNO", regno);
                        objParams[2] = new SqlParameter("@P_COLLEGE_ID", collegeid);
                        objParams[3] = new SqlParameter("@P_GROUPNAME", Groupname);
                        objParams[4] = new SqlParameter("@P_SEMESTER", semester);
                        //objParams[5] = new SqlParameter("@P_GROUP_STATUS", semester);


                        objParams[5] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[5].Direction = ParameterDirection.Output;

                        object obj = objSqlHelper.ExecuteNonQuerySP("PKG_SP_INS_COURSE_ALLOTMENT", objParams, true);

                        if (obj != null && obj.ToString() != "-99" && obj.ToString() != "-1001")
                            status = Convert.ToInt32(CustomStatus.RecordSaved);
                        else
                            status = Convert.ToInt32(CustomStatus.Error);
                        if (obj.Equals(2627))
                        {
                            status = Convert.ToInt32(CustomStatus.RecordExist);
                        }
                    }
                    catch (Exception ex)
                    {
                        status = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.AffiliatedController.Add_Define_Intake_Entry --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return status;
                }


                public DataSet GetGroupAllotmentReport(int collegeid)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSqlHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_COLLEGE_ID", collegeid);
                        ds = objSqlHelper.ExecuteDataSetSP("PKG_SP_GET_SPECIALIZATION_COURSES_REPORTDATA", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.AffiliatedController.GetIntakeDetailsByIntakeId --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }
                public DataSet GetViewGroupDatabycoschno(int coshno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSqlHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_COSCHNO", coshno);
                        ds = objSqlHelper.ExecuteDataSetSP("PKG_SP_GETVIEWGROUPBYCOSHNO_VALUEADDED_ENTERIES", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.AffiliatedController.GetIntakeDetailsByIntakeId --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }
                public string AddDualDegreeeNewStudent(Student objStudent, GEC_Student objStud, string IndusEmail, UserAcc objUa, int DualDegreeStatus, int idno)
                {
                    string retStatus = string.Empty;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Add New student
                        objParams = new SqlParameter[33];
                        //objParams[0] = new SqlParameter("@P_ROLLNO", idno);
                        objParams[0] = new SqlParameter("@P_SECTIONNO", objStudent.SectionNo);
                        objParams[1] = new SqlParameter("@P_STUDNAME", objStudent.StudName);
                        objParams[2] = new SqlParameter("@P_FATHERNAME", objStudent.FatherName);
                        objParams[3] = new SqlParameter("@P_MOTHERNAME ", objStudent.MotherName);
                        if (objStudent.Dob == null)///Added by Irfan Shaikh on 20190405
                            objParams[4] = new SqlParameter("@P_DOB", DBNull.Value);
                        else
                            objParams[4] = new SqlParameter("@P_DOB", objStudent.Dob);
                        objParams[5] = new SqlParameter("@P_SEX", objStudent.Sex);
                        objParams[6] = new SqlParameter("@P_CATEGORYNO", objStudent.CategoryNo);
                        //if (objStudent.AdmDate == null)
                        //    objParams[8] = new SqlParameter("@P_ADMDATE", DBNull.Value);
                        //else
                        //    objParams[8] = new SqlParameter("@P_ADMDATE", objStudent.AdmDate);
                        //objParams[9] = new SqlParameter("@P_HOSTELER", objStudent.HostelSts);
                        objParams[7] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                        objParams[8] = new SqlParameter("@P_ADMBATCH", objStudent.AdmBatch);
                        objParams[9] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                        objParams[10] = new SqlParameter("@P_YEAR", objStudent.Year);
                        objParams[11] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[12] = new SqlParameter("@P_PTYPE", objStudent.PType);
                        objParams[13] = new SqlParameter("@P_STATENO", objStudent.StateNo);
                        objParams[14] = new SqlParameter("@P_CITYNO", objStudent.City);

                        //objParams[19] = new SqlParameter("@P_REGNO", objStudent.RegNo);
                        objParams[15] = new SqlParameter("@P_COLLEGE_ID ", objStudent.College_ID);
                        objParams[16] = new SqlParameter("@P_IDTYPENO", objStudent.IdType);
                        objParams[17] = new SqlParameter("@P_UANO", objStudent.Uano);
                        objParams[18] = new SqlParameter("@P_IPADDRESS", objStudent.IPADDRESS);
                        objParams[19] = new SqlParameter("@P_EMILID", objStudent.EmailID);
                        objParams[20] = new SqlParameter("@P_BLOODGRPNO", objStudent.BloodGroupNo);
                        objParams[21] = new SqlParameter("@P_STUDENTMOBILE", objStudent.StudentMobile);
                        //objParams[27] = new SqlParameter("@P_PASSWORD", objUa.UA_Pwd);
                        objParams[22] = new SqlParameter("@P_AADHAAR_NO", objStudent.AddharcardNo); //Added by Irfan Shaikh on 2019/04/09
                        //objParams[29] = new SqlParameter("@P_TRANSPORTTATION", objStudent.Transportation);
                        objParams[23] = new SqlParameter("@P_SCORE", objStudent.Score); //Added by Irfan Shaikh on 2019/04/09
                        //objParams[31] = new SqlParameter("@P_MERITNO", objStudent.MeritNo);
                        //objParams[32] = new SqlParameter("@P_APPLICATIONID", objStudent.ApplicationID);
                        //objParams[33] = new SqlParameter("@P_INSTALLMENT", objStudent.Installment);
                        //objParams[34] = new SqlParameter("@P_SCHOLORSHIP", objStudent.Scholorship);
                        objParams[24] = new SqlParameter("@P_STUDENTMOBILE2", objStudent.StudMobileno2);
                        objParams[25] = new SqlParameter("@P_ADMROUNDNO", objStudent.AdmroundNo);
                        objParams[26] = new SqlParameter("@P_PARENTMOBILE", objStudent.FatherMobile);
                        objParams[27] = new SqlParameter("@P_ORGANIZATION_ID", Convert.ToInt32(System.Web.HttpContext.Current.Session["OrgId"]));
                        //objParams[39] = new SqlParameter("@P_SCH_MODE", objStudent.SchMode);
                        //objParams[40] = new SqlParameter("@P_SCH_AMT_PER", objStudent.SchAmtOrPercentage);
                        objParams[28] = new SqlParameter("@P_SPECIALIZATION", Convert.ToInt32(objStudent.Specialization));
                        objParams[29] = new SqlParameter("@P_COLLEGE_CODE", objStudent.CollegeCode);
                        objParams[30] = new SqlParameter("@P_DUAL_DEGREE_STATUS", DualDegreeStatus);
                        objParams[31] = new SqlParameter("@P_IDNO", idno);
                        objParams[32] = new SqlParameter("@P_REGOUT", SqlDbType.NVarChar, 25);
                        objParams[32].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_STUDENT_INFO_ENTRY_FOR_DUAL_DEGREE", objParams, true);
                        retStatus = ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = "0";
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddNewStudent-> " + ex.ToString());
                    }

                    return retStatus;
                }
                public DataSet GetStudentDataForDualDegree(string idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("ACD_PKG_GET_STUDENT_DATA_FOR_DUAL_DEG_ADM", objParams);
                    }

                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetUserCreationList->" + ex.ToString());
                    }
                    return ds;
                }
                //Added by Sachin A on date 09/08/2022 For PhotoCopy/Revalutation
                public DataSet GetCourseFor_RevalOrPhotoCopy(int idno, int sessionno, int applytype)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[2] = new SqlParameter("@P_OPERATION_FLAG ", applytype);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_COURSE_FOR_REVAL_OR_PHOTOCOPY", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetCourseFor_RevalOrPhotoCopy->" + ex.ToString());
                    }
                    return ds;
                }
                #region "Photo Copy"

                ////Added by Neha Baranwal on date 08/01/2020
                //public DataSet GetCourseFor_RevalOrPhotoCopy(int idno, int sessionno, int applytype)
                //{
                //    DataSet ds = null;

                //    try
                //    {
                //        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                //        SqlParameter[] objParams = null;
                //        objParams = new SqlParameter[3];
                //        objParams[0] = new SqlParameter("@P_IDNO", idno);
                //        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                //        objParams[2] = new SqlParameter("@P_OPERATION_FLAG ", applytype);

                //        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_COURSE_FOR_REVAL_OR_PHOTOCOPY", objParams);

                //    }
                //    catch (Exception ex)
                //    {
                //        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetCourseFor_RevalOrPhotoCopy->" + ex.ToString());
                //    }
                //    return ds;
                //}

                public int UpdateChallanDetails(int idno, int sessionno, int applytype)
                {
                    int status = -99;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                            {         
                                 new SqlParameter("@P_IDNO", idno),
                                 new SqlParameter("@P_SESSIONNO", sessionno),
                                 new SqlParameter("@P_OPERATION_FLAG", applytype),          
                                 new SqlParameter("@P_OUTPUT",status)
                            };
                        sqlParams[sqlParams.Length - 1].Direction = ParameterDirection.InputOutput;

                        object obj = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_UPDATE_CHALLAN_DETAILS", sqlParams, true);
                        status = (Int32)obj;
                    }
                    catch (Exception ex)
                    {
                        status = -99;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateChallanDetails() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return status;
                }
                #endregion
                public DataSet GetRetestStudentDetailsExam(int idno, int sessionno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_UPDATE_RETEST_STUDENT_FLAG", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }
                //FOR CLUB
                public DataSet GetApprovedStudListCLUB(Student objStud, int UANO, int collegeNo, int userType, int club)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[4];
                        //objParams[0] = new SqlParameter("@P_PASSOUT_BATCH", passbatch);
                        objParams[0] = new SqlParameter("@P_UANO", UANO);
                        objParams[1] = new SqlParameter("@P_COLLEGE_NO", collegeNo);
                        objParams[2] = new SqlParameter("@P_UA_TYPE", userType);
                        objParams[3] = new SqlParameter("@P_CLUB_ACTIVITY_NO", club);
                        //objParams[4] = new SqlParameter("@P_STATUS", status);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_CLUB_APPROVAL_STUD_LIST", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetApprovedStudList->" + ex.ToString());
                    }
                    return ds;
                }

                // for home student page 03112022
                public DataSet GetTodaysTimeTableForStudent(int idno)
                {
                    DataSet ds;
                    try
                    {
                        SQLHelper objsqlhelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];

                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        ds = objsqlhelper.ExecuteDataSetSP("PKG_GET_TIMETABLE_FOR_STUDENT_HOME", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetTodaysTimeTableForStudent->" + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetStudentDetailsExamRegistration(string orderid)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_ORDERID", orderid);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_STUDENT_BYORDERID_FOR_EXAM_REG", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetStudentListForAdmissionStatus(int colg, int Admbatch, int degreeno, int branchno, int year, int semesterno, int AcademicYear)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[7];
                        objParams[0] = new SqlParameter("@P_COLLEGE_ID", colg);
                        objParams[1] = new SqlParameter("@P_ADMBATCHNO", Admbatch);
                        objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[3] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[4] = new SqlParameter("@P_YEAR", year);
                        objParams[5] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[6] = new SqlParameter("@P_ACADEMIC_YEAR", AcademicYear);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_ADMISSION_STATUS_UPDATION", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }

                public string AddAdmissionStatusForStudent(Student objStudent, int AdmStatusId)
                {
                    string retStatus = string.Empty;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Add New student
                        objParams = new SqlParameter[11];
                        objParams[0] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                        objParams[1] = new SqlParameter("@P_COLLEGE_ID", objStudent.College_ID);
                        objParams[2] = new SqlParameter("@P_ADMBATCHNO", objStudent.AdmBatch);
                        objParams[3] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                        objParams[4] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                        objParams[5] = new SqlParameter("@P_YEAR", objStudent.Year);
                        objParams[6] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[7] = new SqlParameter("@P_UANO", objStudent.Uano);
                        objParams[8] = new SqlParameter("@P_STUDENT_ADMISSION_STATUS_ID", AdmStatusId);
                        objParams[9] = new SqlParameter("@P_IPADDRESS", objStudent.IPADDRESS);
                        objParams[10] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[10].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_UPDATE_ADMISSION_STATUS", objParams, true);

                        retStatus = ret.ToString();

                    }
                    catch (Exception ex)
                    {
                        retStatus = "0";
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddStudent-> " + ex.ToString());
                    }

                    return retStatus;
                }

                //FOR CLUB
                public DataSet GetApprovedStudListCLUB(Student objStud, int UANO, int collegeNo, int userType, int type, int club_activity_no)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[5];
                        //objParams[0] = new SqlParameter("@P_PASSOUT_BATCH", passbatch);
                        objParams[0] = new SqlParameter("@P_UANO", UANO);
                        objParams[1] = new SqlParameter("@P_COLLEGE_NO", collegeNo);
                        objParams[2] = new SqlParameter("@P_UA_TYPE", userType);
                        objParams[3] = new SqlParameter("@P_CLUB_ACTIVITY_TYPE", type);
                        objParams[4] = new SqlParameter("@P_CLUB_ACTIVITY_NO", club_activity_no);

                        //objParams[4] = new SqlParameter("@P_STATUS", status);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_CLUB_APPROVAL_STUD_LIST", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetApprovedStudList->" + ex.ToString());
                    }
                    return ds;
                }
                public DataSet GetCollegesByUser_For_Club(int UANO)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_UA_NO", UANO);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_USER_COLLEGES_FOR_CLUB", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetCollegesByUser_For_NoDues->" + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetSchemwiseSemester(int Schemeno, int Mode)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_SCHEMNO", Schemeno);
                        objParams[1] = new SqlParameter("@P_MODE", Mode);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_BIND_VALUEADDED_SEMESTER", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetCollegesByUser_For_NoDues->" + ex.ToString());
                    }
                    return ds;
                }

                //added by aashna 09-11-2022
                public DataSet ShowSingleDiscountStudents(int idno, int sem, string reciepttype)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[3];
                        sqlParams[0] = new SqlParameter("@P_IDNO", idno);
                        sqlParams[1] = new SqlParameter("@P_SEMESTERNO", sem);
                        sqlParams[2] = new SqlParameter("@P_RECIEPT_CODE", reciepttype);
                        ds = objDataAccess.ExecuteDataSetSP("PKG_ACD_GET_SINGLE_DISCOUNT_DETAILS", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.StudentController.GetAllStudentDetentionProEXCEL() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }
                //added by aashna 09-11-2022
                public DataSet ShowBulkDiscountStudents(int clg, int degree, int branch, int sem, int ptype, string reciepttype)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[6];
                        sqlParams[0] = new SqlParameter("@P_COLLEGE_ID", clg);
                        sqlParams[1] = new SqlParameter("@P_DEGREENO", degree);
                        sqlParams[2] = new SqlParameter("@P_BRANCHNO", branch);
                        sqlParams[3] = new SqlParameter("@P_SEMESTERNO", sem);
                        sqlParams[4] = new SqlParameter("@P_PTYPE", ptype);
                        sqlParams[5] = new SqlParameter("@P_RECIEPT_CODE", reciepttype);
                        ds = objDataAccess.ExecuteDataSetSP("PKG_ACD_GET_BULK_DISCOUNT_DETAILS", sqlParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.StudentController.GetAllStudentDetentionProEXCEL() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }
                //addedd by aashna 09-11-2022
                public int InsertFeesDiscount(string Regno, int Faculty, string name, decimal Total, decimal DiscountFeee, string Discount,
                    decimal NetPayable, int Semester, int Ua_No, int Concession_no, int idno, int Rdoption, string receipt, string paymentmode, int ORGANIZATION_ID, int DM_NO)
                    {
                    int countrno = Convert.ToInt32(CustomStatus.Others);
                    try
                        {
                        SQLHelper objSqlhelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlparam = null;
                            {
                            sqlparam = new SqlParameter[17];
                            sqlparam[0] = new SqlParameter("@P_ENROLLNO", Regno);
                            sqlparam[1] = new SqlParameter("@P_COLLEGE_ID", Faculty);
                            sqlparam[2] = new SqlParameter("@P_NAME", name);
                            sqlparam[3] = new SqlParameter("@P_APPLICATBLE_FEE", Total);
                            sqlparam[4] = new SqlParameter("@P_DISCOUNT_FEES", DiscountFeee);
                            sqlparam[5] = new SqlParameter("@P_DISCOUNT", Discount);
                            sqlparam[6] = new SqlParameter("@P_NET_PAYABLE", NetPayable);
                            sqlparam[7] = new SqlParameter("@P_SEMESTERNO", Semester);
                            sqlparam[8] = new SqlParameter("@P_UA_NO", Ua_No);
                            sqlparam[9] = new SqlParameter("@P_CONCESSION_TYPE", Concession_no);
                            sqlparam[10] = new SqlParameter("@P_IDNO", idno);
                            sqlparam[11] = new SqlParameter("@P_PAY_OPTION", Rdoption);
                            sqlparam[12] = new SqlParameter("@P_RECIEPT_CODE", receipt);
                            sqlparam[13] = new SqlParameter("@P_PAY_MODE_CODE", paymentmode);
                            sqlparam[14] = new SqlParameter("@P_ORGANIZATION_ID", ORGANIZATION_ID);
                            sqlparam[15] = new SqlParameter("@P_DM_NO", DM_NO);
                            sqlparam[16] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                            sqlparam[16].Direction = ParameterDirection.Output;
                            };
                            object studid = objSqlhelper.ExecuteNonQuerySP("ACD_INSERT_FEES_CONCESSION", sqlparam, true);
                            if (Convert.ToInt32(studid) == -99)
                                {
                                countrno = Convert.ToInt32(CustomStatus.TransactionFailed);
                                }
                            else
                                {
                                countrno = Convert.ToInt32(CustomStatus.RecordSaved);
                                }
                        }
                    catch (Exception ex)
                        {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.FeeCollectionController.OnlinePayment_updatePAyment() --> " + ex.Message + " " + ex.StackTrace);
                        }
                    return countrno;
                    }

                // Added by Tejaswini Dhoble[17-11-22]
                public DataSet GetBranchWiseIntakeData(int AdmBatch)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_BATCH", AdmBatch);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_SELECT_BRANCHWISE_INTAKE", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetBranchWiseData->" + ex.ToString());
                    }
                    return ds;
                }


                // Added by Tejaswini Dhoble[17-11-22]
                public int InsertBranchWiseIntakeData(int BATCHNO, int DEGREENO, int BRANCHNO, string INTAKE, int CREATED_BY, string IP_ADDRESS)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                        { 
                            
                            new SqlParameter("@P_ADMBATCH",BATCHNO),
                            new SqlParameter("@P_DEGREENO",DEGREENO ),  
                            new SqlParameter("@P_BRANCHNO", BRANCHNO), 
                            new SqlParameter("@P_INTAKE", INTAKE), 
                            new SqlParameter("@P_CREATED_BY", CREATED_BY), 
                            new SqlParameter("@P_IP_ADDRESS", IP_ADDRESS), 
                              new SqlParameter("@P_OUT", SqlDbType.Int),
                              
                              };

                        sqlParams[sqlParams.Length - 1].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INSERT_BRACH_WISE_INTAKE", sqlParams, true);
                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        if (Convert.ToInt32(ret) == 2)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordExist);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);

                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.InsertBranchWiseIntakeData-> " + ex.ToString());
                    }
                    return retStatus;
                }

                // ADDED BY Tejaswini Dhoble[17-11-22]
                public int UpdateBranchWiseIntakeData(int id, int BATCHNO, int DEGREENO, int BRANCHNO, string INTAKE, int MODIFY_BY)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                        { 
                            new SqlParameter("@P_INTAKEID",id),
                            new SqlParameter("@P_ADMBATCH",BATCHNO),
                            new SqlParameter("@P_DEGREENO",DEGREENO),
                             new SqlParameter("@P_BRANCHNO",BRANCHNO),
                            new SqlParameter("@P_INTAKE",INTAKE),
                              new SqlParameter("@MODIFY_BY",MODIFY_BY),                         
                            new SqlParameter("@P_OUT", SqlDbType.Int),
                        
                          };
                        sqlParams[sqlParams.Length - 1].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_UPDATE_BRANCHWISE_INTAKE", sqlParams, false);
                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);



                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.UpdateFacultyDisciplineData-> " + ex.ToString());
                    }
                    return retStatus;
                }

                // ADDED BY Tejaswini Dhoble[17-11-22]
                public DataSet EditBranchWiseIntakeData(int ID)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSqlHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_INTAKE_NO", ID);
                        ds = objSqlHelper.ExecuteDataSetSP("PKG_ACD_EDIT_BRANCHWISE_INTAKE_DATA", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EditFacultyDiscplineData-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet GetStudentListForAdmitCard(int degreeno, int branchno, int semesterno, int prev_status, int sessionno, int colg, int examno, int OrgID, int sectionno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[9];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_PREV_STATUS", prev_status);
                        objParams[4] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[5] = new SqlParameter("@P_COLLEGE_ID", colg);
                        objParams[6] = new SqlParameter("@P_EXAMNO", examno);   // added on 06-03-2020 by Vaishali
                        objParams[7] = new SqlParameter("@P_OrgID", OrgID);
                        objParams[8] = new SqlParameter("@P_SECTIONNO", sectionno);
                        // objParams[6] = new SqlParameter("@P_ADMBTCH", admbatch);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_ADMIT_CARD", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }

                public int InsAdmitCardLog(int degreeNo, int branchno, string ids, string ipadd, int userid, string Remark, int SESSIONNO, int semesterno, DateTime audit_date, int OrgId, int sectionno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[11];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeNo);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_IDNOS", ids);
                        objParams[3] = new SqlParameter("@P_IPADDRSS", ipadd);
                        objParams[4] = new SqlParameter("@P_USER_ID", userid);
                        objParams[5] = new SqlParameter("@P_REMARK", Remark);
                        objParams[6] = new SqlParameter("@P_SESSIONNO", SESSIONNO);
                        objParams[7] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[8] = new SqlParameter("@P_AUDIT_DATE", audit_date);
                        objParams[9] = new SqlParameter("@P_OrgID", OrgId);
                        objParams[10] = new SqlParameter("@P_SECTIONNO", sectionno);
                        object ret = objSQLHelper.ExecuteDataSetSP("PKG_ADMITCARD_LOG", objParams);
                        if (ret != null)
                            if (ret.ToString() != "-99")
                                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.InsGradeTranscriptLog-> " + ex.ToString());
                    }

                    return retStatus;
                }

                public DataSet GetHallTicketDetails(int idno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_STUDENT_HALL_TICKET_DETAILS", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetBulkSemesterPromotionData->" + ex.ToString());
                    }
                    return ds;
                }

                public DataSet AdmfessDues(int idno, int Semesterno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SEMESTERNO", Semesterno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_IS_ADMFEE_DUES", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetBulkSemesterPromotionData->" + ex.ToString());
                    }
                    return ds;
                }

                //added by lalit on dated 23-01-2023
                public DataSet GetDetailsOfInternalMarksHeader(int idno, int sessionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_COURSEWISE_GRADE_HEAD_NEW", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetDetailsOfInternalMarks-> " + ex.ToString());
                    }
                    return ds;
                }
                // Added by Lalit G on 06_12_2022

                //added by lalit  on dated 23-01-2023
                public DataSet Getpromotionstatus(int idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_ID", idno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_PROMOTION_STATUS_BYID", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.GetSemesterHistoryDetails() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return ds;
                }

                public DataSet GetDetailsOfInternalMarks1(int idno, int sessionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_SUBEXAMNAME_BY_PARTICULATUR_IDNO_Subexam", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetDetailsOfInternalMarks-> " + ex.ToString());
                    }
                    return ds;
                }

                // Added by Lalit G on 06_12_2022
                public DataSet GetDetailsOfGradeRealease(int idno, int sessionno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_INTERMEDIATE_GRADE_DETAILS_BY_ID", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetDetailsOfInternalMarks-> " + ex.ToString());
                    }
                    return ds;
                }



                public DataSet GetStudentDetails_For_ScholarshipAdjustment(int idno, int Semesterno, int scholershipid)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_SEMESTERNO", Semesterno);
                        objParams[2] = new SqlParameter("@P_SCHOLERSHIP_ID", scholershipid);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_FOR_SCHOLARSHIP_ADJUSTMENT_BY_IDNO", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                    }
                    return ds;
                }



                public DataSet GetStudentScholershipAdjustmentForSingleStudent(int degreeno, int branchno, int year, int semesterno, int prev_status, int yearID, int colg, int ScholarshipId, int admbatch, int idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[9];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_YEAR", year);
                        objParams[3] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[4] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[5] = new SqlParameter("@P_ACADEMIC_YEAR_ID", yearID);
                        objParams[6] = new SqlParameter("@P_COLLEGE_ID", colg);
                        objParams[7] = new SqlParameter("@P_SCHOLARSHIP_ID", ScholarshipId);
                        objParams[8] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_SINGLE_STUDENT_SCHOLARSHIP_ADJUSTMENT", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }

                public DataSet RetrieveStudentDetailsSingleAdjustment(string search, string category)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_SEARCHSTRING", search);
                        objParams[1] = new SqlParameter("@P_SEARCH", category);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_SEARCH_STUDENT_NEW_FOR_SCHOLARSHIP_MODULE", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentDetailsAdmCancel-> " + ex.ToString());
                    }
                    return ds;
                }



                // ADDED BY Tejaswini Dhoble on date 07-12-22
                //modified by nehal on 10/04/2023
                public int InsertAdmBatchData(int id, string AdmBatch, string status, int mode, int isadmissionflag)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                        { 
                            new SqlParameter("@P_BATCHNO",id),
                            new SqlParameter("@P_BATCHNAME",AdmBatch),
                            new SqlParameter("@P_ACTIVESTATUS",status),
                            new SqlParameter("@P_MODE",mode),
                            new SqlParameter("@P_IS_ADMISSION_FLAG",isadmissionflag),
                            new SqlParameter("@P_OUT", SqlDbType.Int),
                        
                          };
                        sqlParams[sqlParams.Length - 1].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INSERTUPDATE_ADMBATCH", sqlParams, true);

                        if (Convert.ToInt32(ret) == -99)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        }
                        else if (Convert.ToInt32(ret) == 2627)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordExist);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.InsertUpdateAdmBatchData-> " + ex.ToString());
                    }
                    return retStatus;
                }
                //------------------------------------------------------------------------------------------------------------------------------------------------------------

                // ADDED BY Tejaswini Dhoble on date 07-12-22
                //modified by nehal on 10/04/2023
                public int UpdateAdmBatchData(int id, string AdmBatch, string status, int mode, int isadmissionflag)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                        { 
                            new SqlParameter("@P_BATCHNO",id),
                            new SqlParameter("@P_BATCHNAME",AdmBatch),
                            new SqlParameter("@P_ACTIVESTATUS",status),
                            new SqlParameter("@P_MODE",mode),
                            new SqlParameter("@P_IS_ADMISSION_FLAG",isadmissionflag),
                            new SqlParameter("@P_OUT", SqlDbType.Int),
                        
                          };
                        sqlParams[sqlParams.Length - 1].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INSERTUPDATE_ADMBATCH", sqlParams, true);

                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.InsertUpdateAdmBatchData-> " + ex.ToString());
                    }
                    return retStatus;
                }

                //----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

                // ADDED BY Tejaswini Dhoble on date 07-12-2022
                public DataSet GetEditAdmBatchData(int ID, int mode)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSqlHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_BATCHNO", ID);
                        objParams[1] = new SqlParameter("@P_MODE", mode);
                        ds = objSqlHelper.ExecuteDataSetSP("PKG_ACD_SELECT_EDIT_AdmBatch", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.EditGetAdmBatchData " + ex.ToString());
                    }
                    return ds;
                }
                //-----------------------------------------------------------------------------------------------------------------------------------------------------------------

                // ADDED BY Tejaswini Dhoble on date 08-12-22
                public int InsertAcdemicBatchData(int id, string AcdBatch, string status, int mode)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                        { 
                            new SqlParameter("@P_ACADEMICBATCHNO",id),
                            new SqlParameter("@P_ACADEMICBATCH",AcdBatch),
                            new SqlParameter("@P_ACTIVESTATUS",status),
                            new SqlParameter("@P_MODE",mode),
                            new SqlParameter("@P_OUT", SqlDbType.Int),
                        
                          };
                        sqlParams[sqlParams.Length - 1].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INSERTUPDATE_ACADEMICBATCH", sqlParams, true);

                        if (Convert.ToInt32(ret) == -99)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        }
                        else if (Convert.ToInt32(ret) == 2627)
                        {
                            retStatus = Convert.ToInt32(CustomStatus.RecordExist);
                        }
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.InsertAcdemicBatchData-> " + ex.ToString());
                    }
                    return retStatus;
                }


                //-------------------------------------------------------------------------------------------------------------------------------------------------------------

                // ADDED BY Tejaswini Dhoble on date 08-12-22
                public int UpdateAcdemicBatchData(int id, string AcdBatch, string status, int mode)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                        { 
                            new SqlParameter("@P_ACADEMICBATCHNO",id),
                            new SqlParameter("@P_ACADEMICBATCH",AcdBatch),
                            new SqlParameter("@P_ACTIVESTATUS",status),
                            new SqlParameter("@P_MODE",mode),
                            new SqlParameter("@P_OUT", SqlDbType.Int),
                        
                          };
                        sqlParams[sqlParams.Length - 1].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INSERTUPDATE_ACADEMICBATCH", sqlParams, true);

                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.UpdateAcdemicBatchData-> " + ex.ToString());
                    }
                    return retStatus;
                }

                //---------------------------------------------------------------------------------------------------------------------------------------------
                // ADDED BY Tejaswini Dhoble on date 08-12-2022
                public DataSet GetEditAcdemicBatchData(int ID, int mode)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSqlHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_ACADEMICBATCHNO", ID);
                        objParams[1] = new SqlParameter("@P_MODE", mode);
                        ds = objSqlHelper.ExecuteDataSetSP("PKG_ACD_SELECTEDIT_ACADEMICBATCH", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetEditAcdemicBatchData " + ex.ToString());
                    }
                    return ds;
                }





                public DataSet RetrieveStudentYearWiseFeesDetails(int idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_YEAR_WISE_STUDENT_FEES_DETAILS", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentYearWiseFeesDetails-> " + ex.ToString());
                    }
                    return ds;
                }
                //*****************************************************************************
                // Modify by Saurabh Sonar on dated 21062023
                public DataSet RetrieveOtherFeeDetails(int idno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_IDNO", idno);
                        objParams[1] = new SqlParameter("@P_UANO", Convert.ToInt32(System.Web.HttpContext.Current.Session["userno"]));

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_MISC_FEES_DETAILS", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveOtherFeeDetails-> " + ex.ToString());
                    }
                    return ds;
                }


                /// <summary>
                /// Added by Swapnil For Gloabl Elective Teacher Student Allotment
                /// </summary>
                /// <param name="objStudent"></param>
                /// <param name="OrgId"></param>
                /// <returns></returns>

                public DataSet GetStudentsForGlobalCourseTeacherAllotment(int sessionno, int courseno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                        SqlParameter[] objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[1] = new SqlParameter("@P_COURSENO", courseno);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_TEACHERALLOTMENT_FOR_GLOBAL_ELECTVE", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForTeacherAllotment-> " + ex.ToString());
                    }

                    return ds;
                }

                /// <summary>
                /// Added by Swapnil For Gloabl Elective Teacher Student Allotment
                /// </summary>
                /// <param name="objStudent"></param>
                /// <param name="OrgId"></param>
                /// <returns></returns>
                public int UpdateStudent_TeachAllotForGlobalElective(Student_Acd objStudent, int OrgId)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[6];

                        objParams[0] = new SqlParameter("@P_SESSIONNO", objStudent.SessionNo);
                        objParams[1] = new SqlParameter("@P_COURSENO", objStudent.CourseNo);
                        objParams[2] = new SqlParameter("@P_UA_NO", objStudent.UA_No);
                        objParams[3] = new SqlParameter("@P_STUDID", objStudent.StudId);
                        objParams[4] = new SqlParameter("@P_ORGID", OrgId);
                        objParams[5] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[5].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_BYFACULTY_FOR_GLOBAL_ELECTIVE", objParams, false);
                        if (ret != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent_TeachAllot-> " + ex.ToString());
                    }
                    return retStatus;
                }

                public DataSet GetDCRTotalAmountForStudentScholershipAdjustment(int Idno, int semesterno, int ScholarshipId)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_IDNO", Idno);
                        objParams[1] = new SqlParameter("@P_SEMESTER", semesterno);
                        objParams[2] = new SqlParameter("@P_SCHOLARSHIP_ID", ScholarshipId);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_DCR_TOTAL_SCHOLARSHIP_ADJUSTMENT", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }



                //Added By Tejaswini Dhoble[10-12-22]
                public DataSet GetAllAcademicBatchAllotment(int ADMBATCH, int DEGREENO, string BRANCHNO, int COLLEGE_ID, int SEM, int IDTYPE)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[6];
                        objParams[0] = new SqlParameter("@P_ADMBATCH", ADMBATCH);
                        objParams[1] = new SqlParameter("@P_DEGREENO", DEGREENO);
                        objParams[2] = new SqlParameter("@P_BRANCHNO", BRANCHNO);
                        objParams[3] = new SqlParameter("@P_COLLEGE_ID", COLLEGE_ID);
                        objParams[4] = new SqlParameter("@P_SEM", SEM);
                        objParams[5] = new SqlParameter("@P_IDTYPE", IDTYPE);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_SELECT_ACADEMICBATCHALLOTMENT", objParams);
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetAllAcademicBatchAllotment-> " + ex.ToString());
                    }
                    return ds;
                }


                //Added by Tejaswini[12-12-22]
                public int UpdateAcdemicBatchAllotment(string Id, int AcdBatchno, int degreeNo, int UrNo, string IpAddress)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                        { 
                            new SqlParameter("@P_IDNO",Id),
                            new SqlParameter("@P_ACADEMICBATCHNO",AcdBatchno),
                            new SqlParameter("@P_DEGREENO",degreeNo),
                            new SqlParameter("@P_UA_NO",UrNo),
                            new SqlParameter("@P_IP_ADDRESS",IpAddress),
                            new SqlParameter("@P_OUT", SqlDbType.Int),
                        
                          };
                        sqlParams[sqlParams.Length - 1].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_UPDATE_ACADEMICBATCHALLOTMENT", sqlParams, true);

                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.UpdateAcdemicBatchAllotment-> " + ex.ToString());
                    }
                    return retStatus;
                }

                //Added By Tejaswini Dhoble[12-12-22]
                public DataSet GetAllAcademicYearAllotment(int ADMBATCH, int DEGREENO, string BRANCHNO, int COLLEGE_ID, int SEM)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[5];
                        objParams[0] = new SqlParameter("@P_ADMBATCH", ADMBATCH);
                        objParams[1] = new SqlParameter("@P_DEGREENO", DEGREENO);
                        objParams[2] = new SqlParameter("@P_BRANCHNO", BRANCHNO);
                        objParams[3] = new SqlParameter("@P_COLLEGE_ID", COLLEGE_ID);
                        objParams[4] = new SqlParameter("@P_SEM", SEM);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_SELECT_ACADEMICYEARALLOTMENT", objParams);
                    }
                    catch (Exception ex)
                    {
                        return ds;
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetAllAcademicYearAllotment-> " + ex.ToString());
                    }
                    return ds;
                }


                //Added by Tejaswini[12-12-22]
                public int UpdateAcdemicYearAllotment(string Id, int AcdYearno, int degreeNo, int UrNo, string IpAddress)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                        { 
                            new SqlParameter("@P_IDNO",Id),
                            new SqlParameter("@P_ACADEMICYEARNO",AcdYearno),
                            new SqlParameter("@P_DEGREENO",degreeNo),
                             new SqlParameter("@P_UA_NO",UrNo),
                              new SqlParameter("@P_IP_ADDRESS",IpAddress),
                            new SqlParameter("@P_OUT", SqlDbType.Int),
                        
                          };
                        sqlParams[sqlParams.Length - 1].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_UPDATE_ACADEMICYEARALLOTMENT", sqlParams, true);

                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.NITPRM.BusinessLayer.BusinessLogic.StudentController.UpdateAcdemicYearAllotment-> " + ex.ToString());
                    }
                    return retStatus;
                }


                //Added by Amey on 15_12_2022
                public DataSet GetStudentListForAdmitCard(int degreeno, int branchno, int semesterno, int prev_status, int sessionno, int colg, int examno, int OrgID, int sectionno, int schemeno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[10];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_PREV_STATUS", prev_status);
                        objParams[4] = new SqlParameter("@P_SESSIONNO", sessionno);
                        objParams[5] = new SqlParameter("@P_COLLEGE_ID", colg);
                        objParams[6] = new SqlParameter("@P_EXAMNO", examno);   // added on 06-03-2020 by Vaishali
                        objParams[7] = new SqlParameter("@P_OrgID", OrgID);
                        objParams[8] = new SqlParameter("@P_SECTIONNO", sectionno);
                        objParams[9] = new SqlParameter("@P_SCHEMENO", schemeno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_ADMIT_CARD", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }
                //FOR NPF
                public DataSet GetStudentInfoUsingApplicationno(string Applicationno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_APPLICATION_NO", Applicationno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_SP_GETDATA_ACD_NPF_DATA", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentInfoUsingApplicationno->" + ex.ToString());
                    }
                    return ds;
                }
                //fOR ERP
                public DataSet GetStudentInfoUsingERPApplicationno(string Applicationno)
                {
                    DataSet ds = null;

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_APPLICATION_NO", Applicationno);
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_SP_GETDATA_ACD_ERP_DATA", objParams);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentInfoUsingApplicationno->" + ex.ToString());
                    }
                    return ds;
                }
                public int Update_Cancel_Document_Verification_Status(int userno, int verifyBy, string ipAddress, string remarkSingle, int cancel, string cancelRemark)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);

                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;

                        objParams = new SqlParameter[7];
                        objParams[0] = new SqlParameter("@P_USERNO", userno);
                        objParams[1] = new SqlParameter("@P_VERIFY_BY", verifyBy);
                        objParams[2] = new SqlParameter("@P_IPADDRESS", ipAddress);
                        objParams[3] = new SqlParameter("@P_REMARK_SINGLE", remarkSingle);
                        objParams[4] = new SqlParameter("@P_IS_CANCEL", cancel);
                        objParams[5] = new SqlParameter("@P_CANCEL_REMARK", cancelRemark);
                        objParams[6] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                        objParams[6].Direction = ParameterDirection.Output;

                        object ret = Convert.IsDBNull(objSQLHelper.ExecuteNonQuerySP("PKG_UPDATE_CANCELVERIFY_STATUS", objParams, true));

                        if (Convert.ToInt32(ret) == -99)
                            retStatus = Convert.ToInt32(CustomStatus.TransactionFailed);
                        else
                            retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                    }
                    catch (Exception ex)
                    {
                        retStatus = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.ACADEMIC.ANSWERSHEET.InsertUpdateStudentDocSubmitLog-> " + ex.ToString());
                    }

                    return retStatus;
                }
                //added by pooja for NPF_ERP fetch document
                public DataSet GetStudentPhotoInfoByNPFapplicationno(int documentno, string applicationno)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_DOCUMENTNO", documentno);
                        objParams[1] = new SqlParameter("@P_APPLICATION_NO", applicationno);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_SP_GET_BY_ID_STUDENT_PHOTO_FROM_NPF", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.OnlineAdmissionController.GetStudentInfo-> " + ex.ToString());
                    }
                    return ds;
                }

                public int UpdateDocumentnpf(int userno, int DOCTYPENO, string filename)
                {
                    int status = 0;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] sqlParams = new SqlParameter[]
                {
                    new SqlParameter("@P_USERNO",userno),
                    new SqlParameter("@P_DOCTYPENO",DOCTYPENO), 
                    new SqlParameter("@P_PATH",null),
                    new SqlParameter("@P_FILENAME",filename)
                };
                        //sqlParams[sqlParams.Length - 1].Direction = ParameterDirection.InputOutput;

                        object obj = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_DOCUMENTENTRY_UPDATE_NPF", sqlParams, true);

                        if (obj != null && obj.ToString() != "-99")
                            status = Convert.ToInt32(CustomStatus.RecordSaved);
                        else
                            status = Convert.ToInt32(CustomStatus.Error);
                    }
                    catch (Exception ex)
                    {
                        status = Convert.ToInt32(CustomStatus.Error);
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.DocumentController.AddDocument() --> " + ex.Message + " " + ex.StackTrace);
                    }
                    return status;
                }



                public DataSet GetStudentPhotoInfoByNPFapplicationno_ERP(int documentno, string username)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[2];
                        objParams[0] = new SqlParameter("@P_DOCUMENTNO", documentno);
                        objParams[1] = new SqlParameter("@P_USERNAME", username);


                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_SP_GET_BY_ID_STUDENT_PHOTO_FROM_NPF_ERP", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.Academic.StudentController.GetStudentPhotoInfoByNPFapplicationno_ERP-> " + ex.ToString());
                    }
                    return ds;
                }
                /// <summary>
                /// Added By Rishabh - Get faculty attendance details coursewise - 29122022
                /// </summary>
                /// <param name="uano"></param>
                /// <returns></returns>
                public DataSet RetrieveFacultyAttendanceCourseWisePer(int uano)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_UANO", uano);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_ACAD_GET_FACULTY_ATTENDANCE_COURSEWISE", objParams);
                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveFacultyAttendanceCourseWisePer-> " + ex.ToString());
                    }
                    return ds;
                }
                public DataSet GetStudentForBulkRecieptEntry(int degreeno, int branchno, int semesterno, int admbatch, int collegeid, int RecieptStatus, string RecieptType, int Counter, DateTime ToDate, DateTime FromDate)
                {
                    DataSet ds = null;
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[10];
                        objParams[0] = new SqlParameter("@P_DEGREENO", degreeno);
                        objParams[1] = new SqlParameter("@P_BRANCHNO", branchno);
                        objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                        objParams[3] = new SqlParameter("@P_ADMBATCH", admbatch);
                        objParams[4] = new SqlParameter("@P_COLLEGE_ID", collegeid);
                        objParams[5] = new SqlParameter("@P_RECEIPT_STATUS", RecieptStatus);
                        objParams[6] = new SqlParameter("@P_RECEIPT_TYPE", RecieptType);
                        objParams[7] = new SqlParameter("@P_COUNTER", Counter);
                        objParams[8] = new SqlParameter("@P_TO_DATE ", ToDate);
                        objParams[9] = new SqlParameter("@P_FROM_DATE", FromDate);

                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SEARCH_FOR_BULK_FEES_RECIEPT", objParams);

                    }
                    catch (Exception ex)
                    {

                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.EmpCreateController.GetStudentListForIdentityCard-> " + ex.ToString());
                    }
                    return ds;
                }

                //added by Rahul M. on 10.01.2023
                public int UpdateStudentCategory(string studids, string categorys)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[3];
                        objParams[0] = new SqlParameter("@P_STUDID", studids);
                        objParams[1] = new SqlParameter("@P_CATEGORYNO", categorys);
                        objParams[2] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[2].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_CATEGORY_ALLOTMENT", objParams, false);
                        if (ret != null)
                            if (ret.ToString() != "-99")
                                retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudentCategory-> " + ex.ToString());
                    }
                    return retStatus;
                }

                /// <summary>
                /// Added by Swapnil For Gloabl Elective Teacher Student Allotment Modified
                /// </summary>
                /// <param name="objStudent"></param>
                /// <param name="OrgId"></param>
                /// <returns></returns>
                public int UpdateStudent_TeachAllotForGlobalElective_Modified(Student_Acd objStudent, int OrgId,int sectionno)
                {
                    int retStatus = Convert.ToInt32(CustomStatus.Others);
                    try
                    {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = new SqlParameter[9];

                        objParams[0] = new SqlParameter("@P_SESSIONNO", objStudent.SessionNo);
                        objParams[1] = new SqlParameter("@P_COURSENO", objStudent.CourseNo);
                        objParams[2] = new SqlParameter("@P_UA_NO", objStudent.UA_No);
                        objParams[3] = new SqlParameter("@P_ADDITIONAL_UANO", objStudent.AdditionalTeacher);
                        objParams[4] = new SqlParameter("@P_ADDITIONAL_FLAG", objStudent.isAdditionalFlag);
                        objParams[5] = new SqlParameter("@P_STUDID", objStudent.StudId);
                        objParams[6] = new SqlParameter("@P_ORGID", OrgId);
                        objParams[7] = new SqlParameter("@P_SECTIONNO", sectionno);
                        objParams[8] = new SqlParameter("@P_OUT", SqlDbType.Int);
                        objParams[8].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_BYFACULTY_FOR_GLOBAL_ELECTIVE_MODIFIED", objParams, false);
                        if (ret != null)
                            retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                    }
                    catch (Exception ex)
                    {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent_TeachAllot-> " + ex.ToString());
                    }
                    return retStatus;
                }

                // added by Rohit M on 14_02_2023
                public DataSet GetStuddetpros_JECRC(int idno)
                    {
                    DataSet ds = null;

                    try
                        {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        objParams = new SqlParameter[1];
                        objParams[0] = new SqlParameter("@P_PROSNO", idno);

                        //ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_PROSPECT_BYID", objParams).Tables[0].CreateDataReader();
                        ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_PROSPECT_BYID_JECRC", objParams);
                        }
                    catch (Exception ex)
                        {
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                        }
                    return ds;
                    }
                //added by Rohit M on 14-02_2023
                 public string AddNewStudent_JECRC(Student objStudent, GEC_Student objStud, string IndusEmail, UserAcc objUa, int USERNO, int Hosteltype, int SchType)
                    {
                    string retStatus = string.Empty;
                    try
                        {
                        SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                        SqlParameter[] objParams = null;
                        //Add New student
                        objParams = new SqlParameter[46];
                        objParams[0] = new SqlParameter("@P_ROLLNO", objStudent.RollNo);
                        objParams[1] = new SqlParameter("@P_SECTIONNO", objStudent.SectionNo);
                        objParams[2] = new SqlParameter("@P_STUDNAME", objStudent.StudName);
                        objParams[3] = new SqlParameter("@P_FATHERNAME", objStudent.FatherName);
                        objParams[4] = new SqlParameter("@P_MOTHERNAME ", objStudent.MotherName);
                        if (objStudent.Dob == null)///Added by Irfan Shaikh on 20190405
                            objParams[5] = new SqlParameter("@P_DOB", DBNull.Value);
                        else
                            objParams[5] = new SqlParameter("@P_DOB", objStudent.Dob);
                        objParams[6] = new SqlParameter("@P_SEX", objStudent.Sex);
                        objParams[7] = new SqlParameter("@P_CATEGORYNO", objStudent.CategoryNo);
                        if (objStudent.AdmDate == null)
                            objParams[8] = new SqlParameter("@P_ADMDATE", DBNull.Value);
                        else
                            objParams[8] = new SqlParameter("@P_ADMDATE", objStudent.AdmDate);



                        objParams[9] = new SqlParameter("@P_HOSTELER", objStudent.HostelSts);
                        objParams[10] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                        objParams[11] = new SqlParameter("@P_ADMBATCH", objStudent.AdmBatch);
                        objParams[12] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                        objParams[13] = new SqlParameter("@P_YEAR", objStudent.Year);
                        objParams[14] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                        objParams[15] = new SqlParameter("@P_PTYPE", objStudent.PType);
                        objParams[16] = new SqlParameter("@P_STATENO", objStudent.StateNo);
                        objParams[17] = new SqlParameter("@P_CITYNO", objStudent.City);
                        objParams[18] = new SqlParameter("@P_COLLEGE_CODE", objStudent.CollegeCode);
                        objParams[19] = new SqlParameter("@P_REGNO", objStudent.RegNo);
                        objParams[20] = new SqlParameter("@P_COLLEGE_ID ", objStudent.College_ID);
                        objParams[21] = new SqlParameter("@P_IDTYPENO", objStudent.IdType);
                        objParams[22] = new SqlParameter("@P_UANO", objStudent.Uano);
                        objParams[23] = new SqlParameter("@P_IPADDRESS", objStudent.IPADDRESS);
                        objParams[24] = new SqlParameter("@P_EMILID", objStudent.EmailID);
                        objParams[25] = new SqlParameter("@P_BLOODGRPNO", objStudent.BloodGroupNo);
                        objParams[26] = new SqlParameter("@P_STUDENTMOBILE", objStudent.StudentMobile);
                        objParams[27] = new SqlParameter("@P_PASSWORD", objUa.UA_Pwd);
                        objParams[28] = new SqlParameter("@P_AADHAAR_NO", objStudent.AddharcardNo); //Added by Irfan Shaikh on 2019/04/09
                        objParams[29] = new SqlParameter("@P_TRANSPORTTATION", objStudent.Transportation);
                        objParams[30] = new SqlParameter("@P_SCORE", objStudent.Score); //Added by Irfan Shaikh on 2019/04/09
                        objParams[31] = new SqlParameter("@P_MERITNO", objStudent.MeritNo);
                        objParams[32] = new SqlParameter("@P_APPLICATIONID", objStudent.ApplicationID);
                        objParams[33] = new SqlParameter("@P_INSTALLMENT", objStudent.Installment);
                        objParams[34] = new SqlParameter("@P_SCHOLORSHIP", objStudent.Scholorship);
                        objParams[35] = new SqlParameter("@P_STUDENTMOBILE2", objStudent.StudMobileno2);
                        objParams[36] = new SqlParameter("@P_ADMROUNDNO", objStudent.AdmroundNo);
                        objParams[37] = new SqlParameter("@P_PARENTMOBILE", objStudent.FatherMobile);
                        objParams[38] = new SqlParameter("@P_ORGANIZATION_ID", Convert.ToInt32(System.Web.HttpContext.Current.Session["OrgId"]));
                        objParams[39] = new SqlParameter("@P_SCH_MODE", objStudent.SchMode);
                        objParams[40] = new SqlParameter("@P_SCH_AMT_PER", objStudent.SchAmtOrPercentage);
                        objParams[41] = new SqlParameter("@P_SPECIALIZATION", Convert.ToInt32(objStudent.Specialization));
                        objParams[42] = new SqlParameter("@P_USERNO", USERNO);
                        objParams[43] = new SqlParameter("@P_HOSTELTYPE", Hosteltype);
                        objParams[44] = new SqlParameter("@P_SCH_TYPE", objStudent.SchMode);
                        objParams[45] = new SqlParameter("@P_REGOUT", SqlDbType.NVarChar, 25);
                        objParams[45].Direction = ParameterDirection.Output;

                        object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACAD_STUDENT_INFO_NEW_JECRC", objParams, true);
                        retStatus = ret.ToString();

                        }
                    catch (Exception ex)
                        {
                        retStatus = "0";
                        throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddNewStudent-> " + ex.ToString());
                        }

                    return retStatus;
                    }

                //added by Rohit M on 14_02_2023

                 public string AddInstallmentDetails_JECRC(Student objStudent, string recieptcode, int Installmenttype, string Duedate1)
                     {
                     string retStatus = string.Empty;
                     try
                         {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = null;
                         //Add New student
                         objParams = new SqlParameter[14];
                         objParams[0] = new SqlParameter("@P_SESSION_NO", objStudent.SessionNo);
                         objParams[1] = new SqlParameter("@P_IDNO", objStudent.IdNo);
                         objParams[2] = new SqlParameter("@P_RECIEPTCODE", recieptcode);
                         objParams[3] = new SqlParameter("@P_BRANCHNO", objStudent.BranchNo);
                         objParams[4] = new SqlParameter("@P_DEGREENO", objStudent.DegreeNo);
                         objParams[5] = new SqlParameter("@P_SEMESTERNO", objStudent.SemesterNo);
                         objParams[6] = new SqlParameter("@P_PAYMENTTYPE", objStudent.PType);
                         objParams[7] = new SqlParameter("@P_UA_NO", objStudent.Uano);
                         objParams[8] = new SqlParameter("@P_ADMBATCH", objStudent.AdmBatch);
                         objParams[9] = new SqlParameter("@P_COLLEGE_CODE", objStudent.CollegeCode);
                         objParams[10] = new SqlParameter("@P_COLLEGE_ID", objStudent.College_ID);
                         objParams[11] = new SqlParameter("@P_INSTALLMENETYPE", Installmenttype);
                         objParams[12] = new SqlParameter("@P_DUEDATE1", Duedate1);
                         //objParams[13] = new SqlParameter("@P_DUEDATE2", DueDate2);                                               
                         objParams[13] = new SqlParameter("@P_OUTPUT", SqlDbType.NVarChar, 25);
                         objParams[13].Direction = ParameterDirection.Output;
                         object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_INSERT_ISTALLMENT_DETAILS_JECRC", objParams, true);
                         retStatus = ret.ToString();

                         }
                     catch (Exception ex)
                         {
                         retStatus = "0";
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddInstallmentDetails-> " + ex.ToString());
                         }

                     return retStatus;
                     }
                //added by Rohit M on 14_02_2023

                 public DataSet getstudbyUsernameOA_JECRC(string idno)
                     {
                     DataSet ds = null;

                     try
                         {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = null;
                         objParams = new SqlParameter[1];
                         objParams[0] = new SqlParameter("@P_USERNO", idno);

                         //ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_PROSPECT_BYID", objParams).Tables[0].CreateDataReader();
                         ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_ONLINE_ADM_BY_USERNO_JECRC", objParams);
                         }
                     catch (Exception ex)
                         {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                         }
                     return ds;
                     }

                 /// <summary>
                 /// Added by Swapnil For Gloabl Elective Course Teacher Allotment Modified
                 /// </summary>
                 /// <param name="objStudent"></param>
                 /// <param name="OrgId"></param>
                 /// <returns></returns>
                 public int UpdateCourseTeachAllotForGlobalElective(Student_Acd objStudent, int OrgId, int groupid)
                 {
                     int retStatus = Convert.ToInt32(CustomStatus.Others);
                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = new SqlParameter[8];

                         objParams[0] = new SqlParameter("@P_SESSIONNO", objStudent.SessionNo);
                         objParams[1] = new SqlParameter("@P_COURSENO", objStudent.CourseNo);
                         objParams[2] = new SqlParameter("@P_UA_NO", objStudent.UA_No);
                         objParams[3] = new SqlParameter("@P_ADDITIONAL_UANO", objStudent.AdditionalTeacher);
                         objParams[4] = new SqlParameter("@P_ADDITIONAL_FLAG", objStudent.isAdditionalFlag);
                         objParams[5] = new SqlParameter("@P_GROUP_ID", groupid);
                         objParams[6] = new SqlParameter("@P_ORGID", OrgId);
                         objParams[7] = new SqlParameter("@P_OUT", SqlDbType.Int);
                         objParams[7].Direction = ParameterDirection.Output;
                         object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_COURSE_TEACHER_FOR_GLOBAL_ELECTIVE", objParams, true);
                         retStatus = Convert.ToInt32(ret);

                     }
                     catch (Exception ex)
                     {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateCourseTeachAllotForGlobalElective-> " + ex.ToString());
                     }
                     return retStatus;
                 }


                 /// <summary>
                 /// Added by Swapnil For Gloabl Elective Course Teacher Allotment
                 /// </summary>
                 /// <param name="objStudent"></param>
                 /// <param name="OrgId"></param>
                 /// <returns></returns>

                 public DataSet GetGlobalCourseTeacherAllotment(int sessionno)
                 {
                     DataSet ds = null;
                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                         SqlParameter[] objParams = new SqlParameter[1];
                         objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);

                         ds = objSQLHelper.ExecuteDataSetSP("PKG_SP_RET_COURSE_ALLOTMENT_FOR_GLOBAL_ELECTVE", objParams);
                     }
                     catch (Exception ex)
                     {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetGlobalCourseTeacherAllotment-> " + ex.ToString());
                     }

                     return ds;
                 }

                 public DataSet GetStuddetIDNO_JECRC(int idno)
                 {
                     DataSet ds = null;

                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = null;
                         objParams = new SqlParameter[1];
                         objParams[0] = new SqlParameter("@P_IDNO", idno);

                         //ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_PROSPECT_BYID", objParams).Tables[0].CreateDataReader();
                         ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_TEMPIDNO_JECRC", objParams);
                     }
                     catch (Exception ex)
                     {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                     }
                     return ds;
                 }

                //added By Rohit M on 08_03-2023 

                 public int UpdateHostelStatusOnlinePay(int IDNO, int SEMESTER, string RECIEPT_CODE, int HOSTELTYPE, string IPADDRESS, int UA_NO)
                     {
                     int status = 0;

                     try
                         {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = null;
                         //Add
                         objParams = new SqlParameter[7];
                         objParams[0] = new SqlParameter("@P_IDNO", IDNO);
                         objParams[1] = new SqlParameter("@P_SEMESTER", SEMESTER);
                         objParams[2] = new SqlParameter("@P_RECIEPT_CODE", RECIEPT_CODE);
                         objParams[3] = new SqlParameter("@P_HOSTEL_TYPE", HOSTELTYPE);
                         objParams[4] = new SqlParameter("@P_IPADDRESS", IPADDRESS);
                         objParams[5] = new SqlParameter("@P_UA_NO", UA_NO);
                         objParams[6] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                         objParams[6].Direction = ParameterDirection.Output;
                         object obj = objSQLHelper.ExecuteNonQuerySP("PKG_SP_UPDATE_HOSTEL_STATUS_DEMAND_ONLINE ", objParams, true);

                         if (obj != null && obj.ToString() != "-99" && obj.ToString() != "2627" && obj.ToString() != "-2")
                             status = Convert.ToInt32(CustomStatus.RecordSaved);
                         else if (obj.ToString().Equals("2627"))
                             {
                             status = Convert.ToInt32(CustomStatus.RecordNotFound);
                             }
                         else
                             status = Convert.ToInt32(CustomStatus.Error);
                         }
                     catch (Exception ex)
                         {
                         status = Convert.ToInt32(CustomStatus.Error);
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddReceiptCode-> " + ex.ToString());
                         }
                     return status;
                     }

                 //Added by pooja for Admission status Master
                 public int AddAdmissionStatus(string admstatus, int activeStatus, int IsAdmcancel)
                 {
                     int status = 0;

                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = null;
                         //Add
                         objParams = new SqlParameter[4];
                         objParams[0] = new SqlParameter("@ADMISSION_STATUS", admstatus);
                         objParams[1] = new SqlParameter("@ACTIVE_STATUS", activeStatus);
                         objParams[2] = new SqlParameter("@P_IS_ADM_CANCEL", IsAdmcancel);
                         objParams[3] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                         objParams[3].Direction = ParameterDirection.Output;
                         object obj = objSQLHelper.ExecuteNonQuerySP("PKG_SP_INSERT_ACD_STUDENT_ADMISSION_STATUS ", objParams, true);
                         if (obj.ToString() == "1")
                             status = Convert.ToInt32(CustomStatus.RecordSaved);
                         else if (obj.ToString().Equals("-1001"))
                         {
                             status = Convert.ToInt32(CustomStatus.DuplicateRecord);
                         }
                         else
                             status = Convert.ToInt32(CustomStatus.Error);
                     }
                     catch (Exception ex)
                     {
                         status = Convert.ToInt32(CustomStatus.Error);
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.AddAdmissionStatus-> " + ex.ToString());
                     }
                     return status;
                 }



                 public int UpdateAdmissionStatus(string admstatus, int activeStatus, int admstatusId, int IsAdmcancel)
                 {
                     int status = Convert.ToInt32(CustomStatus.Others);

                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = null;
                         //update
                         objParams = new SqlParameter[5];
                         objParams[0] = new SqlParameter("@ADMISSION_STATUS", admstatus);
                         objParams[1] = new SqlParameter("@ACTIVE_STATUS", activeStatus);
                         objParams[2] = new SqlParameter("@STUDENT_ADMISSION_STATUS_ID", admstatusId);
                         objParams[3] = new SqlParameter("@P_IS_ADM_CANCEL", IsAdmcancel);
                         objParams[4] = new SqlParameter("@P_OUT", SqlDbType.Int);
                         objParams[4].Direction = ParameterDirection.Output;
                         object obj = objSQLHelper.ExecuteNonQuerySP("PKG_SP_UPDATE_ACD_STUDENT_ADMISSION_STATUS ", objParams, true);
                         if (obj.ToString() == "1")
                             status = Convert.ToInt32(CustomStatus.RecordUpdated);
                         else if (obj.ToString().Equals("-1001"))
                         {
                             status = Convert.ToInt32(CustomStatus.DuplicateRecord);
                         }
                         else
                             status = Convert.ToInt32(CustomStatus.Error);
                     }
                     catch (Exception ex)
                     {
                         status = Convert.ToInt32(CustomStatus.Error);
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateAdmissionStatus-> " + ex.ToString());
                     }
                     return status;
                 }


                 public DataSet GetAllAdmStatus()
                 {
                     DataSet ds = null;
                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = new SqlParameter[0];
                         ds = objSQLHelper.ExecuteDataSetSP("PKG_SP_GET_ACD_STUDENT_ADMISSION_STATUS", objParams);
                     }
                     catch (Exception ex)
                     {
                         return ds;
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetAllAdmStatus-> " + ex.ToString());
                     }
                     return ds;
                 }



                 public SqlDataReader GetAdmStatus(int STATUSID)
                 {
                     SqlDataReader dr = null;
                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = new SqlParameter[] { new SqlParameter("@P_OUTPUT", STATUSID) };

                         dr = objSQLHelper.ExecuteReaderSP("PKG_ACD_STUDENT_ADMISSION_STATUS_GET_BY_YEAR_ID", objParams);
                     }
                     catch (Exception ex)
                     {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetAdmStatus() --> " + ex.Message + " " + ex.StackTrace);
                     }
                     return dr;
                 }


                //added by Rohit M on 04-04-2023
                 public DataSet GetDoubleVerificationExceReport()
                     {

                     DataSet ds = null;
                     try
                         {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = null;
                         objParams = new SqlParameter[0];
                         ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_DOUBLE_VERIFICATION_EXCEL_REPORT", objParams);
                         }
                     catch (Exception ex)
                         {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.studentController.GetNewStudentEntryData->" + ex.ToString());
                         }
                     return ds;

                     }


                 //added by Nehal on 04/04/23
                 public DataSet GetBranchChangeReportExcel(int AdcYear, int AdmBatch)
                     {
                     DataSet ds = null;
                     try
                         {
                         SQLHelper objDataAccess = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] sqlParams = new SqlParameter[] 
                {                     
                    new SqlParameter("@P_ACADEMIC_YEAR", AdcYear),  
                    new SqlParameter("@P_ACADEMIC_BATCH", AdmBatch),         
                };
                         ds = objDataAccess.ExecuteDataSetSP("PKG_ACD_GET_BRANCH_CHANGE_EXCEL_REPORT", sqlParams);
                         }
                     catch (Exception ex)
                         {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessEntities.StudentController.GetPaymentModificationReportExcel() --> " + ex.Message + " " + ex.StackTrace);
                         }
                     return ds;
                     }
                       //ADDED BY NEHAL ON 11/04/23

                 public DataSet GetBranchwiseintakeforadvnceconfig(int admbatch, int degreeno, int branchno)
                 {
                     DataSet ds = null;
                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                         SqlParameter[] objParams = new SqlParameter[3];
                         objParams[0] = new SqlParameter("@P_ADM_BATCH", admbatch);
                         objParams[1] = new SqlParameter("@P_DEGREENO", degreeno);
                         objParams[2] = new SqlParameter("@P_BRANCHNO", branchno);
                         ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_ACD_BRANCHWISE_INTAKE_ADVANCE_CONFIG", objParams);

                     }
                     catch (Exception ex)
                     {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetBranchwiseintakeforadvnceconfig-> " + ex.ToString());
                     }

                     return ds;
                 }

                 //ADDED BY NEHAL ON 18/04/23

                 public int InsertBranchwiseintakeforadvnceconfig(int admbatch, int degreeno, int branchno, string categegoryno, string paytypeno, string total, int intakeid)
                 {
                     int status = Convert.ToInt32(CustomStatus.Others);

                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = null;
                         //update
                         objParams = new SqlParameter[8];
                         objParams[0] = new SqlParameter("@P_ADM_BATCH", admbatch);
                         objParams[1] = new SqlParameter("@P_DEGREENO", degreeno);
                         objParams[2] = new SqlParameter("@P_BRANCHNO", branchno);
                         objParams[3] = new SqlParameter("@P_CATEGORYNO", categegoryno);
                         objParams[4] = new SqlParameter("@P_PAYTYPENO", paytypeno);
                         objParams[5] = new SqlParameter("@P_TOTAL", total);
                         objParams[6] = new SqlParameter("@P_INTAKE_ID", intakeid);
                         objParams[7] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                         objParams[7].Direction = ParameterDirection.Output;
                         object obj = objSQLHelper.ExecuteNonQuerySP("PKG_INS_ACD_BRANCHWISE_INTAKE_ADVANCE_CONFIG ", objParams, true);
                         if (obj.ToString() == "1")
                             status = Convert.ToInt32(CustomStatus.RecordSaved);
                         else
                             status = Convert.ToInt32(CustomStatus.Error);
                     }
                     catch (Exception ex)
                     {
                         status = Convert.ToInt32(CustomStatus.Error);
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.InsertBranchwiseintakeforadvnceconfig-> " + ex.ToString());
                     }
                     return status;
                     
                 }

                 // ADDED THE NEW METHOD FOR ADMIN MULTIPLE LOGIN PAGE ON DATED 16.05.2023 
                 public int InsMultipleLoginReasonLog(int UA_NO, int UA_TYPE, string Reason, int userid, string ipadd, int PurposeID, string OTP)
                 {
                     int retStatus = Convert.ToInt32(CustomStatus.Others);
                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                         SqlParameter[] objParams = new SqlParameter[7];
                         objParams[0] = new SqlParameter("@P_UA_NO", UA_NO);
                         objParams[1] = new SqlParameter("@P_UA_TYPE", UA_TYPE);
                         objParams[2] = new SqlParameter("@P_LOGIN_REASON", Reason);
                         objParams[3] = new SqlParameter("@P_LOGIN_BY", userid);
                         objParams[4] = new SqlParameter("@P_IPADDRESS", ipadd);
                         objParams[5] = new SqlParameter("@P_PURPOSEID", PurposeID);
                         objParams[6] = new SqlParameter("@P_OTP", OTP);

                         object ret = objSQLHelper.ExecuteDataSetSP("PKG_ACD_INSERT_MULTIPLE_LOGIN_REASON_LOG", objParams);
                         if (ret != null)
                             if (ret.ToString() != "-99")
                                 retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                     }
                     catch (Exception ex)
                     {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.InsMultipleLoginReasonLog-> " + ex.ToString());
                     }

                     return retStatus;
                 }


                 //Added by Bhagyashree on 26052023 for get allow process 
                 public DataSet GetAllowProcess(int userno, int allowprocess, char allowprocessfrom)
                     {
                     DataSet ds = null;
                     try
                         {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = new SqlParameter[] 
                      { 
                          new SqlParameter("@P_USERNO", userno),  
                          new SqlParameter("@P_ALLOWPROCESS", allowprocess),
                          new SqlParameter("@P_ALLOWPROCESSFROM", allowprocessfrom)
                      };
                         ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_ADMP_GET_UNLOCK_STUDENT_PROCESS", objParams);
                         }
                     catch (Exception ex)
                         {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudnetController.GetAllowProcess() --> " + ex.Message + " " + ex.StackTrace);
                         }
                     return ds;
                     }

                 //Added by Sagar Mankar  on 23062023 for get allow process 
                 public DataSet GetStudentFailExamSubjectSNew_sem_REMEDAL(int idno, int sessionno, int schemeno, int degreeno, int branchno, int semesterno)
                 {
                     DataSet ds = null;

                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = null;
                         objParams = new SqlParameter[6];
                         objParams[0] = new SqlParameter("@P_IDNO", idno);
                         objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);

                         objParams[2] = new SqlParameter("@P_DEGREENO", degreeno);
                         objParams[3] = new SqlParameter("@P_BRANCHNO", branchno);
                         objParams[4] = new SqlParameter("@P_SCHEMENO", schemeno);
                         objParams[5] = new SqlParameter("@P_SEMESTERNO", semesterno);
                         // ds = objSQLHelper.ExecuteDataSetSP("PKG_EXAM_RESULT_FAIL_LIST_BACKLOG_SINGLE_STUD_NEW", objParams);
                         ds = objSQLHelper.ExecuteDataSetSP("PKG_EXAM_RESULT_FAIL_LIST_BACKLOG_SINGLE_STUD_NEW_ATLAS_REMEDAL", objParams);
                     }
                     catch (Exception ex)
                     {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                     }
                     return ds;
                 }

                 /// <summary>               
                 /// Added by Amit Bhumbur for Value Added Course for Teacher Student Allotment Modified
                 /// </summary>
                 /// <param name="objStudent"></param>
                 /// <param name="OrgId"></param>
                 /// <returns></returns>
                 public int UpdateStudent_TeachAllotForValue_Added_Modified(Student_Acd objStudent, int OrgId)
                 {
                     int retStatus = Convert.ToInt32(CustomStatus.Others);
                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = new SqlParameter[8];

                         objParams[0] = new SqlParameter("@P_SESSIONNO", objStudent.SessionNo);
                         objParams[1] = new SqlParameter("@P_COURSENO", objStudent.CourseNo);
                         objParams[2] = new SqlParameter("@P_UA_NO", objStudent.UA_No);
                         objParams[3] = new SqlParameter("@P_ADDITIONAL_UANO", objStudent.AdditionalTeacher);
                         objParams[4] = new SqlParameter("@P_ADDITIONAL_FLAG", objStudent.isAdditionalFlag);
                         objParams[5] = new SqlParameter("@P_STUDID", objStudent.StudId);
                         objParams[6] = new SqlParameter("@P_ORGID", OrgId);
                         objParams[7] = new SqlParameter("@P_OUT", SqlDbType.Int);
                         objParams[7].Direction = ParameterDirection.Output;

                         object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_BYFACULTY_FOR_VALUE_ADDED_MODIFIED", objParams, false);
                         if (ret != null)
                             retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                     }
                     catch (Exception ex)
                     {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateStudent_TeachAllotForValue_Added_Modified-> " + ex.ToString());
                     }
                     return retStatus;
                 }


                 /// <summary>
                 /// Added by Amit Bhumbur for Value Added Course for teached student allotemt
                 /// </summary>
                 /// <param name="objStudent"></param>
                 /// <param name="OrgId"></param>
                 /// <returns></returns>

                 public DataSet GetStudentsForValueAddedCourseTeacherAllotment(int sessionno, int courseno)
                 {
                     DataSet ds = null;
                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                         SqlParameter[] objParams = new SqlParameter[2];
                         objParams[0] = new SqlParameter("@P_SESSIONNO", sessionno);
                         objParams[1] = new SqlParameter("@P_COURSENO", courseno);

                         ds = objSQLHelper.ExecuteDataSetSP("PKG_STUDENT_SP_RET_TEACHERALLOTMENT_FOR_VALUE_ADDED", objParams);
                     }
                     catch (Exception ex)
                     {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForTeacherAllotment-> " + ex.ToString());
                     }

                     return ds;
                 }
                 //Added By Aniket P. On dated 14/06/2023
                 public SqlDataReader DisplayNpfMapping()
                 {
                     SqlDataReader dr = null;
                     try
                         {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         dr = objSQLHelper.ExecuteReader("PKG_ACD_SHOW_NPF_DATA_MAPPING");
                     }
                     catch (Exception ex)
                         {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudnetController.DisplayNpfMapping() --> " + ex.Message + " " + ex.ToString());
                         }
                     return dr;
                     }

//========================================================
 //Added By Aniket P. On dated 14/06/2023
                 public int InsertToNpfDataTransfer(string NpfDiscipline, string NpfProgramme, int SpecId, string NpfSpecial, int CollegeId, string SchoolName, int DegreeNo, string Degree, int BranchNo, string ProgName, string CourseType, int IdType, string ipaddress, int uano)
                 {
                     int status = Convert.ToInt32(CustomStatus.Others);
                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = null;
                         objParams=new SqlParameter[15];
                         objParams[0] = new SqlParameter("@P_NPF_DISCIPLINE", NpfDiscipline);
                         objParams[1] = new SqlParameter("@P_NPF_PROGRAMME", NpfProgramme);
                         objParams[2] = new SqlParameter("@P_NPF_SPECIALIZATIONID", SpecId);
                         objParams[3] = new SqlParameter("@P_NPF_SPECIALIZATION", NpfSpecial);
                         objParams[4] = new SqlParameter("@P_COLLEGE_ID", CollegeId);
                         objParams[5] = new SqlParameter("@P_SCHOOL_NAME", SchoolName);
                         objParams[6] = new SqlParameter("@P_DEGREENO", DegreeNo);
                         objParams[7] = new SqlParameter("@P_DEGREE", Degree);
                         objParams[8] = new SqlParameter("@P_BRANCHNO", BranchNo);
                         objParams[9] = new SqlParameter("@P_PROGRAMME_BRANCH_NAME", ProgName);
                         objParams[10] = new SqlParameter("@P_COURSE_TYPE", CourseType);
                         objParams[11] = new SqlParameter("@P_IDTYPE", IdType);
                         objParams[12] = new SqlParameter("@P_MIGR_BY", uano);
                         objParams[13] = new SqlParameter("@P_IPADDRESS", ipaddress);
                         objParams[14] = new SqlParameter("@P_OUT", SqlDbType.Int);
                         objParams[14].Direction = ParameterDirection.Output;


                         object obj = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_NPF_DATA_INSERT_AND_UPDATE", objParams, true);
                         if (obj.ToString() == "1")
                             status = Convert.ToInt32(CustomStatus.RecordSaved);
                         else if (obj.ToString() == "2")
                             status = Convert.ToInt32(CustomStatus.RecordUpdated);
                         else
                             status = Convert.ToInt32(CustomStatus.Error);
                     }
                     catch (Exception ex)
                     {
                         status = Convert.ToInt32(CustomStatus.Error);
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.InsToDatabase-> " + ex.ToString());
                     }
                     return status;
                 }

                 #region Added By Shrikant Waghmare on dated 26062023

                 public DataSet GetPassOutStudentData(int BatchNo, int DegreeNo, int BranchNo)
                 {
                     DataSet ds = null;

                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                         SqlParameter[] objParams = new SqlParameter[3];
                         objParams[0] = new SqlParameter("@P_BATCHNO", BatchNo);
                         objParams[1] = new SqlParameter("@P_DEGREENO", DegreeNo);
                         objParams[2] = new SqlParameter("@P_BRANCHNO", BranchNo);
                         ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_PASSOUT_STUDENT", objParams);
                     }
                     catch (Exception ex)
                     {
                         throw new IITMSException("ADMPActive_Deactive_Faculty_Users.GetPassOutStudentData->" + ex.ToString());
                     }
                     return ds;
                 }

                 public string DeActiveStudentsList(string PassOutStudents, int UaNo, int PageNo)
                 {
                     string retStatus = string.Empty;

                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = null;
                         objParams = new SqlParameter[4];

                         objParams[0] = new SqlParameter("@P_XML", PassOutStudents);
                         objParams[1] = new SqlParameter("@P_UA_NO", UaNo);
                         objParams[2] = new SqlParameter("@P_SOURCE_PAGNEO", PageNo);
                         objParams[3] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                         objParams[3].Direction = ParameterDirection.Output;

                         object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_DEACTIVE_STUDENTS", objParams, true);
                         retStatus = ret.ToString();

                         return retStatus;
                     }
                     catch (Exception ex)
                     {
                         throw new IITMSException("ADMPActive_Deactive_Faculty_Users.ActivateDeActiveStudentsList->" + ex.ToString());
                     }
                 }

                 #endregion Added By Shrikant Waghmare   

                
                 public DataSet GetFeesheadDetailSemesterAdmission(int idno, int sessionno, int SEMESTERNO)
                 {
                     DataSet ds = null;
                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = null;
                         objParams = new SqlParameter[3];
                         objParams[0] = new SqlParameter("@P_IDNO", idno);
                         objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                         objParams[2] = new SqlParameter("@P_SEMESTERNO", SEMESTERNO);
                         ds = objSQLHelper.ExecuteDataSetSP("PKG_GET_FEES_DETAIL_SEMESTER_ADMISSION", objParams);
                     }
                     catch (Exception ex)
                     {
                         return ds;
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetailsSemesteradmission-> " + ex.ToString());
                     }
                     return ds;
                 }

                 public DataSet GetOfferedCourseForRegistration(int schemeno, int semesterno, int sessionno)
                 {
                     DataSet dc = null;
                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = new SqlParameter[3];
                         objParams[0] = new SqlParameter("@P_SCHEMENO  ", schemeno);
                         objParams[1] = new SqlParameter("@P_SEMESTERNO", semesterno);
                         objParams[2] = new SqlParameter("@P_SESSIONNO ", sessionno);
                         dc = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_OFFERED_COURSES_FOR_REGISTRATION", objParams);
                     }
                     catch (Exception ex)
                     {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentsForScheme-> " + ex.ToString());
                     }
                     return dc;
                 }


                 public DataSet GetStudentImprovementRegisteredCourses(int idno, int sessionno, int schemeno, int degreeno, int branchno, int semesterno)
                     {
                     DataSet ds = null;

                     try
                         {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = null;
                         objParams = new SqlParameter[6];
                         objParams[0] = new SqlParameter("@P_IDNO", idno);
                         objParams[1] = new SqlParameter("@P_SESSIONNO", sessionno);
                         objParams[2] = new SqlParameter("@P_SEMESTERNO", semesterno);
                         objParams[3] = new SqlParameter("@P_DEGREENO", degreeno);
                         objParams[4] = new SqlParameter("@P_BRANCHNO", branchno);
                         objParams[5] = new SqlParameter("@P_SCHEMENO", schemeno);
                         ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_COURSES_FOR_IMPROVEMENT_REGISTRATION", objParams);
                         }
                     catch (Exception ex)
                         {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetStudentDetails->" + ex.ToString());
                         }
                     return ds;
                     }

                 #region Passed Out Student Allotment - Added by gopal m. 16/08/2023

                 public DataSet Get_Passout_Student_List()
                 {
                     DataSet ds = null;
                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = null;
                         objParams = new SqlParameter[0];
                         ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_PASS_OUT_STUDENTS_LIST", objParams);

                     }
                     catch (Exception ex)
                     {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.Get_Passout_Student_List->" + ex.ToString());
                     }
                     return ds;
                 }

                 public DataSet Get_Passout_Student_List_Excel()
                 {
                     DataSet ds = null;

                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = null;
                         objParams = new SqlParameter[0];
                         ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_GET_PASS_OUT_STUDENTS_LIST_EXCEL", objParams);

                     }
                     catch (Exception ex)
                     {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.Get_Passout_Student_List_Excel->" + ex.ToString());
                     }
                     return ds;
                 }

                 public int insert_pass_out_student_list(DataTable dt)
                 {
                     int status;
                     try
                     {
                         SQLHelper objSqlHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = null;
                         objParams = new SqlParameter[2];
                         objParams[0] = new SqlParameter("@P_ACD_PASSOUT_STUDENTS", dt);
                         objParams[1] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                         objParams[1].Direction = ParameterDirection.Output;
                         object obj = objSqlHelper.ExecuteNonQuerySP("PKG_ACD_INSERT_PASSOUT_STUDENTS", objParams, true);

                         if (obj != null && obj.ToString() != "-99" && obj.ToString() != "-1001")
                             status = Convert.ToInt32(CustomStatus.RecordSaved);
                         else
                             status = Convert.ToInt32(CustomStatus.Error);
                     }
                     catch (Exception ex)
                     {
                         status = Convert.ToInt32(CustomStatus.Error);
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController .insert_pass_out_student_list() --> " + ex.Message + " " + ex.StackTrace);
                     }
                     return status;
                 }

                 //Added by Vinay Mishra on 07/08/2023 To Get Student Details For Section Allotment Import Process
                 public DataSet GetAllStudentsDetails(int collegeId, int sessionNo)
                 {
                     DataSet ds = null;
                     try
                     {
                         SQLHelper objSqlHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = null;
                         objParams = new SqlParameter[2];
                         objParams[0] = new SqlParameter("@P_COLLEGEID", collegeId);
                         objParams[1] = new SqlParameter("@P_SESSIONNO", sessionNo);
                         ds = objSqlHelper.ExecuteDataSetSP("PKG_SP_GET_BYCOLLEGEID_STUDENT_DETAILS", objParams);
                     }
                     catch (Exception ex)
                     {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.GetAllStudentsDetails --> " + ex.Message + " " + ex.StackTrace);
                     }
                     return ds;
                 }




                 //Added by Vinay Mishra on 07/08/2023 To Get Student Details For Section Allotment Import Process - Modified on 16/08/2023
                 public int Update_Student_Section_InBulk(string CollegeId, int Uano, string IpAddress, DataTable dt, int OrgId, int sessionNo)
                 {
                     int retStatus = Convert.ToInt32(CustomStatus.Others);
                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = new SqlParameter[7];

                         objParams[0] = new SqlParameter("@P_COLLEGEID", CollegeId);
                         objParams[1] = new SqlParameter("@P_UANO", Uano);
                         objParams[2] = new SqlParameter("@P_IPADDRESS", IpAddress);
                         objParams[3] = new SqlParameter("@P_STUDENT_SECTION_TABLE", dt);
                         objParams[4] = new SqlParameter("@P_ORGID", OrgId);
                         objParams[5] = new SqlParameter("@P_SESSIONNO", sessionNo);
                         objParams[6] = new SqlParameter("@P_OUT", SqlDbType.Int);
                         objParams[6].Direction = ParameterDirection.Output;

                         object ret = objSQLHelper.ExecuteNonQuerySP("PKG_ACD_STUDENT_SP_UPD_SECTION_IMPORT", objParams, false);
                         if (ret != null)
                             retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                     }
                     catch (Exception ex)
                     {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.Update_Student_Section_InBulk-> " + ex.ToString());
                     }
                     return retStatus;
                 }


                 //ADDED BY VINAY MISHRA ON 28/08/2023 TO ADD PARENT EMAIL FIELD FOR UPDATION
                 public int UpdateFatherAndMotherEmail(string studids, int fieldID, string Femail, string Memail, string IpAddress, string Updated_Field, int ua_no)
                 {
                     int retStatus = Convert.ToInt32(CustomStatus.Others);
                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = new SqlParameter[8];
                         objParams[0] = new SqlParameter("@P_STUDID", studids);
                         objParams[1] = new SqlParameter("@P_FIELDID", fieldID);
                         objParams[2] = new SqlParameter("@P_FEMAIL", Femail);
                         objParams[3] = new SqlParameter("@P_MEMAIL", Memail);
                         objParams[4] = new SqlParameter("@P_UA_NO", ua_no);
                         objParams[5] = new SqlParameter("@P_UPDATEDFIELD", Updated_Field);
                         objParams[6] = new SqlParameter("@P_IPADDRESS", IpAddress);
                         objParams[7] = new SqlParameter("@P_OUT", SqlDbType.Int);
                         objParams[7].Direction = ParameterDirection.Output;

                         object ret = objSQLHelper.ExecuteNonQuerySP("PKG_STUDENT_SP_UPD_STUD_FATHER_MOTHER_EMAIL", objParams, false);
                         if (ret != null)
                             if (ret.ToString() != "-99")
                                 retStatus = Convert.ToInt32(CustomStatus.RecordUpdated);

                     }
                     catch (Exception ex)
                     {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.UpdateFatherAndMotherEmail-> " + ex.ToString());
                     }
                     return retStatus;
                 }



                 #endregion

                 #region Below code added by Shailendra K. for T-47998 on dated 06.09.2023 ENHANCEMENT_BASIC_STUDENT_DETAILS_UPDATE

                 public DataSet RetrieveStudentDetailsToModifyAdmissionInfo(string search, string category, int uano)
                 {
                     DataSet ds = null;
                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = null;
                         objParams = new SqlParameter[3];
                         objParams[0] = new SqlParameter("@P_SEARCHSTRING", search);
                         objParams[1] = new SqlParameter("@P_SEARCH", category);
                         objParams[2] = new SqlParameter("@P_UA_NO", uano);

                         ds = objSQLHelper.ExecuteDataSetSP("PKG_SEARCH_STUDENT_MODIFY_ADMISSION_INFO", objParams);
                     }
                     catch (Exception ex)
                     {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.RetrieveStudentDetailsToModifyAdmissionInfo-> " + ex.ToString());
                     }
                     return ds;
                 }

                 public int ModifyStudAdmissionInfo(int IDNO, int IDTYPE, int academicYear, int semesterNo, int admBatch)
                 {
                     int retStatus = Convert.ToInt32(CustomStatus.Others);
                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);

                         SqlParameter[] objParams = new SqlParameter[6];
                         objParams[0] = new SqlParameter("@P_IDNO", IDNO);
                         objParams[1] = new SqlParameter("@P_ID_TYPE", IDTYPE);
                         objParams[2] = new SqlParameter("@P_ACADEMIC_YEAR", academicYear);
                         objParams[3] = new SqlParameter("@P_SEMESTERNO", semesterNo);
                         objParams[4] = new SqlParameter("@P_ADMBATCH", admBatch);
                         objParams[5] = new SqlParameter("@P_OUTPUT", SqlDbType.Int);
                         objParams[5].Direction = ParameterDirection.Output;

                         object ret = objSQLHelper.ExecuteDataSetSP("PKG_ACD_MODIFY_STUD_ADMISSION_INFO", objParams);
                         if (ret != null)
                             if (ret.ToString() != "-99")
                                 retStatus = Convert.ToInt32(CustomStatus.RecordSaved);
                     }
                     catch (Exception ex)
                     {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.ModifyStudAdmissionInfo-> " + ex.ToString());
                     }

                     return retStatus;
                 }

                 #endregion

                 public DataSet CheckExistsStudentDataForDualDegree(int idno, int collegeid, int Degree, int Branch)
                 {
                     DataSet ds = null;
                     try
                     {
                         SQLHelper objSQLHelper = new SQLHelper(_UAIMS_constr);
                         SqlParameter[] objParams = null;
                         objParams = new SqlParameter[4];
                         objParams[0] = new SqlParameter("@P_IDNO", idno);
                         objParams[1] = new SqlParameter("@P_COLLEGE", collegeid);
                         objParams[2] = new SqlParameter("@P_DEGREE", Degree);
                         objParams[3] = new SqlParameter("@P_BRANCH", Branch);

                         ds = objSQLHelper.ExecuteDataSetSP("PKG_ACD_CHECKEXIST_STUENT_FOR_DUALDEGREE_STATUS", objParams);
                     }

                     catch (Exception ex)
                     {
                         throw new IITMSException("IITMS.UAIMS.BusinessLayer.BusinessLogic.StudentController.CheckExistsStudentDataForDualDegree->" + ex.ToString());
                     }
                     return ds;
                 }
            }


        }//END: BusinessLayer.BusinessLogic

    }//END: UAIMS  

}//END: IITMS